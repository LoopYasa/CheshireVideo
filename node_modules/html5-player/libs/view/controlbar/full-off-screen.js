'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _dec, _dec2, _class, _class2, _temp2; //外部依赖包

//import ReactDOM from 'react-dom';
//import PropTypes from 'prop-types';

//内部依赖包


var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _clear = require('../decorator/clear');

var _clear2 = _interopRequireDefault(_clear);

var _video = require('../../model/video');

var _fullscreen = require('../../model/fullscreen');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * 播放器加载状态的组件
 */
var FullOffScreen = (_dec = (0, _reactRedux.connect)(function (state) {
  return {
    isfull: state[_fullscreen.namespace]
  };
}), _dec2 = (0, _clear2.default)([_fullscreen.namespace]), _dec(_class = _dec2(_class = (_temp2 = _class2 = function (_React$Component) {
  (0, _inherits3.default)(FullOffScreen, _React$Component);

  function FullOffScreen() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, FullOffScreen);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = FullOffScreen.__proto__ || (0, _getPrototypeOf2.default)(FullOffScreen)).call.apply(_ref, [this].concat(args))), _this), _this.displayName = 'FullOffScreen', _this.state = {}, _this.dispatch = _this.props.dispatch, _this.onFullStateChange = function (e) {
      e.stopPropagation();
      var isfull = _this.props.isfull;

      _this.dispatch({
        type: _video.namespace + '/fullscreen',
        payload: !isfull
      });
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }
  //这里的配置参考jw-player的api


  (0, _createClass3.default)(FullOffScreen, [{
    key: 'render',
    value: function render() {
      var isfull = this.props.isfull;

      return _react2.default.createElement(
        'button',
        {
          type: 'button',
          className: 'html5-player-small-button float-right html5-player-screen-full-off-button',
          onClick: this.onFullStateChange
        },
        _react2.default.createElement(
          'svg',
          {
            className: (0, _classnames2.default)('html5-player-icon html5-player-screen-full-off-icon', {
              'html5-player-fullscreen-icon': !isfull,
              'html5-player-fullscreen-off-icon': isfull
            }),
            'aria-hidden': 'true'
          },
          _react2.default.createElement('use', {
            xlinkHref: (0, _classnames2.default)({
              '#icon-fullscreen': !isfull,
              '#icon-fullscreen-off': isfull
            })
          })
        )
      );
    }
  }]);
  return FullOffScreen;
}(_react2.default.Component), _class2.propTypes = {}, _temp2)) || _class) || _class);
exports.default = FullOffScreen;