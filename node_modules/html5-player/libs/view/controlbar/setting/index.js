'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _dec, _dec2, _class, _class2, _temp2; //外部依赖包

//import classnames from 'classnames';
//内部依赖包


var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRedux = require('react-redux');

var _clear = require('../../decorator/clear');

var _clear2 = _interopRequireDefault(_clear);

var _addEventListener = require('../../../utils/dom/addEventListener');

var _addEventListener2 = _interopRequireDefault(_addEventListener);

var _tooltip = require('../../components/tooltip');

var _tooltip2 = _interopRequireDefault(_tooltip);

var _playbackRateList = require('./playback-rate-list');

var _playbackRateList2 = _interopRequireDefault(_playbackRateList);

var _subtitleList = require('./subtitle-list');

var _subtitleList2 = _interopRequireDefault(_subtitleList);

var _pictureQualityList = require('./picture-quality-list');

var _pictureQualityList2 = _interopRequireDefault(_pictureQualityList);

var _playbackRate = require('../../../model/playback-rate');

var _track = require('../../../model/track');

var _pictureQuality = require('../../../model/picture-quality');

var _contains = require('../../../utils/dom/contains');

var _contains2 = _interopRequireDefault(_contains);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var state = {
  showSetting: false,
  showRateSelect: false,
  showSubtileSelect: false,
  showPictureQualitySelect: false
};

var Setting = (_dec = (0, _reactRedux.connect)(function (state) {
  return {
    playbackRate: state[_playbackRate.namespace],
    subtitleList: state[_track.namespace].subtitleList,
    subtitleId: state[_track.namespace].subtitleId,
    qualityList: state[_pictureQuality.namespace].list,
    currentQuality: state[_pictureQuality.namespace].currentQuality
  };
}), _dec2 = (0, _clear2.default)([_playbackRate.namespace]), _dec(_class = _dec2(_class = (_temp2 = _class2 = function (_React$Component) {
  (0, _inherits3.default)(Setting, _React$Component);

  function Setting() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, Setting);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Setting.__proto__ || (0, _getPrototypeOf2.default)(Setting)).call.apply(_ref, [this].concat(args))), _this), _this.displayName = 'Setting', _this.state = { showSetting: true }, _this.dispatch = _this.props.dispatch, _this.onListClickEvent = function (type) {
      return function (e) {
        switch (type) {
          case 'rate':
            _this.setState((0, _extends3.default)({}, state, {
              showRateSelect: true
            }));
            break;
          case 'subtile':
            _this.setState((0, _extends3.default)({}, state, {
              showSubtileSelect: true
            }));
            break;
          case 'picture-quality':
            _this.setState((0, _extends3.default)({}, state, {
              showPictureQualitySelect: true
            }));
            break;
          default:
        }
        var settingDOM = _reactDom2.default.findDOMNode(_this.refs.setting);
        _this.documentClickEvent = (0, _addEventListener2.default)(settingDOM.ownerDocument, 'mousedown', function (e) {
          if (!(0, _contains2.default)(settingDOM, e.target)) {
            _this.documentClickEvent.remove();
            _this.setState((0, _extends3.default)({}, state, {
              showSetting: true
            }));
          }
        });
      };
    }, _this.onSelect = function (rate, e) {
      _this.documentClickEvent.remove();
      _this.setState((0, _extends3.default)({}, state, {
        showSetting: true
      }));
    }, _this.onBackEvent = function (e) {
      _this.setState((0, _extends3.default)({}, state, {
        showSetting: true
      }));
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(Setting, [{
    key: 'componentDidMount',
    value: function componentDidMount() {}
  }, {
    key: 'getLocale',
    value: function getLocale() {
      return this.context.localization;
    }
  }, {
    key: 'renderContent',
    value: function renderContent() {
      var _props = this.props,
          playbackRate = _props.playbackRate,
          subtitleList = _props.subtitleList,
          subtitleId = _props.subtitleId,
          qualityList = _props.qualityList,
          currentQuality = _props.currentQuality;
      var _state = this.state,
          showRateSelect = _state.showRateSelect,
          showSubtileSelect = _state.showSubtileSelect,
          showSetting = _state.showSetting,
          showPictureQualitySelect = _state.showPictureQualitySelect;

      var locale = this.getLocale();
      var commonIcon = _react2.default.createElement(
        'svg',
        {
          className: 'html5-player-icon html5-player-right-icon',
          'aria-hidden': 'true'
        },
        _react2.default.createElement('use', { xlinkHref: '#icon-right' })
      );
      return _react2.default.createElement(
        'div',
        { className: 'html5-player-setting-container' },
        showSetting && _react2.default.createElement(
          'ul',
          { className: 'html5-player-setting-list' },
          _react2.default.createElement(
            'li',
            { onClick: this.onListClickEvent('rate') },
            _react2.default.createElement(
              'span',
              { className: 'float-right' },
              _react2.default.createElement(
                'span',
                null,
                playbackRate + locale.speed
              ),
              commonIcon
            ),
            _react2.default.createElement(
              'span',
              { className: 'float-left' },
              locale.speed
            )
          ),
          subtitleList && subtitleList[0] && _react2.default.createElement(
            'li',
            { onClick: this.onListClickEvent('subtile') },
            _react2.default.createElement(
              'span',
              { className: 'float-right' },
              subtitleId !== -1 && _react2.default.createElement(
                'span',
                null,
                subtitleList[subtitleId].name
              ),
              subtitleId === -1 && _react2.default.createElement(
                'span',
                null,
                locale.subtitleOff
              ),
              commonIcon
            ),
            _react2.default.createElement(
              'span',
              { className: 'float-left' },
              locale.subtitle
            )
          ),
          qualityList && qualityList[0] && _react2.default.createElement(
            'li',
            { onClick: this.onListClickEvent('picture-quality') },
            _react2.default.createElement(
              'span',
              { className: 'float-right' },
              currentQuality !== -1 && _react2.default.createElement(
                'span',
                null,
                qualityList[currentQuality].label
              ),
              currentQuality === -1 && _react2.default.createElement(
                'span',
                null,
                locale.autoQuality
              ),
              commonIcon
            ),
            _react2.default.createElement(
              'span',
              { className: 'float-left' },
              locale.pictureQuality
            )
          )
        ),
        showRateSelect && _react2.default.createElement(_playbackRateList2.default, (0, _extends3.default)({}, this.props, {
          onSelect: this.onSelect,
          onBackEvent: this.onBackEvent
        })),
        showSubtileSelect && _react2.default.createElement(_subtitleList2.default, {
          onSelect: this.onSelect,
          onBackEvent: this.onBackEvent
        }),
        showPictureQualitySelect && _react2.default.createElement(_pictureQualityList2.default, {
          onSelect: this.onSelect,
          onBackEvent: this.onBackEvent
        })
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var living = this.props.living;

      return _react2.default.createElement(
        _tooltip2.default,
        {
          ref: 'setting',
          trigger: 'click',
          content: this.renderContent(),
          toTargetGap: living ? 5 : 13
        },
        _react2.default.createElement(
          'button',
          {
            type: 'button',
            className: 'float-right html5-player-small-button html5-player-setting-button'
          },
          _react2.default.createElement(
            'svg',
            {
              className: 'html5-player-icon html5-player-setting-icon',
              'aria-hidden': 'true'
            },
            _react2.default.createElement('use', { xlinkHref: '#icon-setting' })
          )
        )
      );
    }
  }]);
  return Setting;
}(_react2.default.Component), _class2.contextTypes = {
  localization: _propTypes2.default.object
}, _temp2)) || _class) || _class);
exports.default = Setting;