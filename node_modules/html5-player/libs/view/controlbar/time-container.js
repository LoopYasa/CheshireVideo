'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _dec, _dec2, _class, _class2, _temp2; //外部依赖包

//import ReactDOM from 'react-dom';
//import PropTypes from 'prop-types';

//import classnames from 'classnames';
//内部依赖包


var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _clear = require('../decorator/clear');

var _clear2 = _interopRequireDefault(_clear);

var _time = require('../../model/time');

var _fragment = require('../../model/fragment');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * 播放器加载状态的组件
 */
var Time = (_dec = (0, _reactRedux.connect)(function (state) {
  return {
    time: state[_time.namespace],
    fragment: state[_fragment.namespace]
  };
}), _dec2 = (0, _clear2.default)([_time.namespace]), _dec(_class = _dec2(_class = (_temp2 = _class2 = function (_React$Component) {
  (0, _inherits3.default)(Time, _React$Component);

  function Time() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, Time);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Time.__proto__ || (0, _getPrototypeOf2.default)(Time)).call.apply(_ref, [this].concat(args))), _this), _this.displayName = 'Time', _this.state = {}, _this.dispatch = _this.props.dispatch, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }
  //这里的配置参考jw-player的api


  (0, _createClass3.default)(Time, [{
    key: 'render',
    value: function render() {
      //fragment是播放录像（合成录像，摄像头上传视频会中断，会分成几个视频，然后这几个视频会合并成一个视频
      //但是这个视频不是整个时段的，会有断的，fragment就是给用户知道这段录像哪里断了）
      //一般都用不到fragment，如果存在fragment就优先使用fragment的duration
      var _props = this.props,
          _props$time = _props.time,
          elapse = _props$time.elapse,
          duration = _props$time.duration,
          fragment = _props.fragment;

      return _react2.default.createElement(
        'span',
        { className: 'html5-player-time-container' },
        _react2.default.createElement(
          'span',
          null,
          elapse
        ),
        _react2.default.createElement(
          'span',
          { className: 'html5-player-time-separater' },
          '/'
        ),
        _react2.default.createElement(
          'span',
          null,
          fragment && fragment.timeDuration || duration
        )
      );
    }
  }]);
  return Time;
}(_react2.default.Component), _class2.propTypes = {}, _temp2)) || _class) || _class);
exports.default = Time;