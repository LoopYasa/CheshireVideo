import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';

var _dec, _dec2, _class, _class2, _temp2;

//外部依赖包
import React from 'react';
//import ReactDOM from 'react-dom';
//import PropTypes from 'prop-types';
import { connect } from 'react-redux';
import classnames from 'classnames';
//内部依赖包
import clearDecorator from '../decorator/clear';
import { namespace as trackNamespace } from '../../model/track';
import { namespace as timeNamespace } from '../../model/time';
import { namespace as endNamespace } from '../../model/end';
import { namespace as errorMessageNamespace } from '../../model/error-message';

/**
 * 播放器加载状态的组件
 */
var Subtitle = (_dec = connect(function (state) {
  return {
    track: state[trackNamespace],
    time: state[timeNamespace],
    end: state[endNamespace],
    isError: !!state[errorMessageNamespace].message
  };
}), _dec2 = clearDecorator([trackNamespace]), _dec(_class = _dec2(_class = (_temp2 = _class2 = function (_React$Component) {
  _inherits(Subtitle, _React$Component);

  function Subtitle() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Subtitle);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Subtitle.__proto__ || _Object$getPrototypeOf(Subtitle)).call.apply(_ref, [this].concat(args))), _this), _this.displayName = 'Subtitle', _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Subtitle, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          track = _props.track,
          time = _props.time,
          userActive = _props.userActive,
          end = _props.end,
          isError = _props.isError;
      var subtitleCues = track.subtitleCues;

      var currentTime = time.currentTime;
      if (!subtitleCues || isError) {
        return React.createElement('span', { className: 'html5-player-subtitle-text html5-player-hide' });
      }
      var text = void 0;
      subtitleCues.forEach(function (v) {
        if (currentTime >= v.begin && currentTime < v.end) {
          text = v.text;
        }
      });
      //console.log(text,currentTime)
      if (!text || end) {
        //text为空或者undefined
        return false;
      }
      //回车键需要处理成<br/>
      var textArray = text.split('\r\n');
      if (textArray.length === 1) {
        textArray = text.split('\n');
      }
      return React.createElement(
        'span',
        {
          className: classnames('html5-player-subtitle-text', {
            'html5-player-subtitle-text-user-active': userActive,
            'html5-player-subtitle-text-user-inactive': !userActive
          })
        },
        textArray.map(function (v, k) {
          return React.createElement(
            'span',
            { key: k },
            '\xA0',
            v,
            '\xA0',
            React.createElement('br', null)
          );
        })
      );
    }
  }]);

  return Subtitle;
}(React.Component), _class2.propTypes = {}, _temp2)) || _class) || _class);
export { Subtitle as default };