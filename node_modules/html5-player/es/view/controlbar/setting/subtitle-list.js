import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';

var _dec, _class;

//外部依赖包
import React from 'react';
import { connect } from 'react-redux';
import classnames from 'classnames';
//内部依赖包
import List from './list';
import { namespace as videoNamespace } from '../../../model/video';
import { namespace as trackNamespace } from '../../../model/track';

var SubtitleList = (_dec = connect(function (state) {
  return {
    subtitleList: state[trackNamespace].subtitleList,
    subtitleId: state[trackNamespace].subtitleId
  };
}), _dec(_class = function (_List) {
  _inherits(SubtitleList, _List);

  function SubtitleList() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, SubtitleList);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = SubtitleList.__proto__ || _Object$getPrototypeOf(SubtitleList)).call.apply(_ref, [this].concat(args))), _this), _this.displayName = 'SubtitleList', _this.onSelect = function (value) {
      return _this.onSelectEvent(value, function () {
        _this.dispatch({
          type: videoNamespace + '/switchSubtitle',
          payload: value
        });
      });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(SubtitleList, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          subtitleList = _props.subtitleList,
          subtitleId = _props.subtitleId;

      var locale = this.getLocale();
      return React.createElement(
        'ul',
        { className: 'html5-player-list-container' },
        this.renderBack(locale.subtitle),
        subtitleList && subtitleList.map(function (v, k) {
          var className = classnames({
            'html5-player-list-selected': subtitleId === v.id
          });
          return React.createElement(
            'li',
            { onClick: _this2.onSelect(v.id), key: k, className: className },
            v.name
          );
        }),
        React.createElement(
          'li',
          {
            onClick: this.onSelect(-1),
            key: -1,
            className: classnames({
              'html5-player-list-selected': subtitleId === -1
            })
          },
          locale.subtitleOff
        )
      );
    }
  }]);

  return SubtitleList;
}(List)) || _class);
export { SubtitleList as default };