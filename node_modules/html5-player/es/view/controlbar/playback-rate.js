import _extends from 'babel-runtime/helpers/extends';
import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';

var _dec, _dec2, _class;

//外部依赖包
import React from 'react';
//import ReactDOM from 'react-dom';
//import PropTypes from 'prop-types';
import { connect } from 'react-redux';
// import classnames from 'classnames';
//内部依赖包
import Tooltip from '../components/tooltip';
import clearDecorator from '../decorator/clear';
import PlaybackRateList from './setting/playback-rate-list';
import { namespace as playbackRateNamespace } from '../../model/playback-rate';
import { namespace as livingNamespace } from '../../model/living';

var PlaybackRate = (_dec = connect(function (state) {
  return {
    playbackRate: state[playbackRateNamespace],
    living: state[livingNamespace]
  };
}), _dec2 = clearDecorator([playbackRateNamespace]), _dec(_class = _dec2(_class = function (_React$Component) {
  _inherits(PlaybackRate, _React$Component);

  function PlaybackRate() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, PlaybackRate);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PlaybackRate.__proto__ || _Object$getPrototypeOf(PlaybackRate)).call.apply(_ref, [this].concat(args))), _this), _this.displayName = 'PlaybackRate', _this.state = {}, _this.onRatteSelect = function (rate) {
      _this.setState({
        tooltipKey: rate
      });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(PlaybackRate, [{
    key: 'renderContent',
    value: function renderContent() {
      return React.createElement(PlaybackRateList, _extends({}, this.props, { onSelect: this.onRatteSelect }));
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          playbackRate = _props.playbackRate,
          locale = _props.locale;
      var tooltipKey = this.state.tooltipKey;

      return React.createElement(
        Tooltip,
        {
          key: tooltipKey,
          trigger: 'click',
          content: this.renderContent(),
          toTargetGap: 20
        },
        React.createElement(
          'span',
          { className: 'float-right cursor-pointer html5-player-rate-button' },
          playbackRate + locale.speed
        )
      );
    }
  }]);

  return PlaybackRate;
}(React.Component)) || _class) || _class);
export { PlaybackRate as default };