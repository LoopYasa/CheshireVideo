import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';

var _dec, _dec2, _class, _class2, _temp2;

//外部依赖包
import React from 'react';
//import ReactDOM from 'react-dom';
//import PropTypes from 'prop-types';
import { connect } from 'react-redux';
import classnames from 'classnames';
//内部依赖包
import clearDecorator from '../decorator/clear';
import { namespace as videoNamespace } from '../../model/video';
import { namespace as playPauseNamespace } from '../../model/play-pause';

/**
 * 播放器加载状态的组件
 */
var PlayPause = (_dec = connect(function (state) {
  return {
    playing: state[playPauseNamespace]
  };
}), _dec2 = clearDecorator([playPauseNamespace]), _dec(_class = _dec2(_class = (_temp2 = _class2 = function (_React$Component) {
  _inherits(PlayPause, _React$Component);

  function PlayPause() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, PlayPause);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = PlayPause.__proto__ || _Object$getPrototypeOf(PlayPause)).call.apply(_ref, [this].concat(args))), _this), _this.displayName = 'PlayPause', _this.state = {}, _this.dispatch = _this.props.dispatch, _this.play = function (e) {
      e.stopPropagation();
      _this.dispatch({
        type: videoNamespace + '/play',
        payload: {
          noControlbarAction: true
        }
      });
    }, _this.pause = function (e) {
      e.stopPropagation();
      _this.dispatch({
        type: videoNamespace + '/pause'
      });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(PlayPause, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          playing = _props.playing,
          living = _props.living;

      if (living) {
        return false;
      }
      return React.createElement(
        'button',
        {
          type: 'button',
          className: 'html5-player-small-button html5-player-play-pause-button',
          onClick: playing ? this.pause : this.play
        },
        React.createElement(
          'svg',
          {
            className: classnames('html5-player-icon html5-player-play-pause-icon', {
              'html5-player-pause-icon': playing,
              'html5-player-play-icon': !playing
            }),
            'aria-hidden': 'true'
          },
          React.createElement('use', {
            xlinkHref: classnames({
              '#icon-pause': playing,
              '#icon-play': !playing
            })
          })
        )
      );
    }
  }]);

  return PlayPause;
}(React.Component), _class2.propTypes = {}, _temp2)) || _class) || _class);
export { PlayPause as default };