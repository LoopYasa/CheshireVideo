import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';

var _dec, _dec2, _class, _class2, _temp2;

//外部依赖包
import React from 'react';
//import ReactDOM from 'react-dom';
import PropTypes from 'prop-types';
import { connect } from 'react-redux';
//import classnames from 'classnames';
//内部依赖包
import clearDecorator from './decorator/clear';
import { namespace as fragmentNamespace } from '../model/fragment';
/**
 * fragment是video断片处理
 * 合成录像，摄像头上传视频会中断，会分成几个视频，然后这几个视频会合并成一个视频
 * 但是这个视频不是整个时段的，会有断的，为了给用户知道这段录像哪里断了，需要而外处理
 */
var Fragment = (_dec = connect(function (state) {
  return {};
}), _dec2 = clearDecorator([fragmentNamespace]), _dec(_class = _dec2(_class = (_temp2 = _class2 = function (_React$Component) {
  _inherits(Fragment, _React$Component);

  function Fragment() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Fragment);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Fragment.__proto__ || _Object$getPrototypeOf(Fragment)).call.apply(_ref, [this].concat(args))), _this), _this.displayName = 'Fragment', _this.dispatch = _this.props.dispatch, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Fragment, [{
    key: 'getData',
    value: function getData() {
      var url = this.props.url;

      this.dispatch({
        type: fragmentNamespace + '/fragmentSaga',
        payload: url
      });
    }
  }, {
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.getData();
    }
  }, {
    key: 'render',
    value: function render() {
      return false;
    }
  }]);

  return Fragment;
}(React.Component), _class2.propTypes = {
  //现在支持传对象进来
  url: PropTypes.oneOfType([PropTypes.string, PropTypes.object])
}, _temp2)) || _class) || _class);
export { Fragment as default };