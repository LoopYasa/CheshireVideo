import _extends from 'babel-runtime/helpers/extends';
import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';
import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
//外部依赖包
import React from 'react';
//import ReactDOM from 'react-dom';
//import PropTypes from 'prop-types';
import classnames from 'classnames';
import isArray from 'lodash/isArray';
//内部依赖包

var ContextMenu = function (_React$Component) {
  _inherits(ContextMenu, _React$Component);

  function ContextMenu() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, ContextMenu);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ContextMenu.__proto__ || _Object$getPrototypeOf(ContextMenu)).call.apply(_ref, [this].concat(args))), _this), _this.displayName = 'ContextMenu', _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(ContextMenu, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          content = _props.content,
          className = _props.className,
          other = _objectWithoutProperties(_props, ['content', 'className']);

      if (content === true) {
        return React.createElement(
          'ul',
          _extends({
            className: classnames('html5-player-list-container', className)
          }, other),
          window.html5PlayerVersion && React.createElement(
            'li',
            null,
            'Html5 Player v',
            window.html5PlayerVersion
          ),
          !window.html5PlayerVersion && React.createElement(
            'li',
            null,
            'Html5 Player'
          )
        );
      } else if (React.isValidElement(content)) {
        return content;
      } else if (isArray(content)) {
        return React.createElement(
          'ul',
          _extends({
            className: classnames('html5-player-list-container', className)
          }, other),
          content.map(function (v, k) {
            return React.createElement(
              'li',
              { key: k },
              v
            );
          })
        );
      } else {
        return false;
      }
    }
  }]);

  return ContextMenu;
}(React.Component);

export { ContextMenu as default };