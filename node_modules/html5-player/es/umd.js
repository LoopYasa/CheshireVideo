import _extends from 'babel-runtime/helpers/extends';
import _Promise from 'babel-runtime/core-js/promise';
import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';
import React from 'react';
import ReactDOM from 'react-dom';
import Player from './';
import './style';
window.React = React;
window.ReactDOM = ReactDOM;

//兼容preact用法
var root = void 0;
/**
 *@param {object} props 播放器配置
 *@param {function} callback 播放器实例化后的回调函数，返回播放器实例
 *                           也可以使用promise获取
 *@return {promise} 播放器实例
 */
function player(props, callback) {
  var id = props.id,
      children = props.children,
      other = _objectWithoutProperties(props, ['id', 'children']);

  return new _Promise(function (resolve) {
    root = ReactDOM.render(React.createElement(
      Player,
      _extends({
        videoCallback: function videoCallback(player) {
          callback && callback(player);
          var remove = player.remove;
          player.remove = function () {
            //如果有定义remove先运行。
            remove && remove();
            root = ReactDOM.render(false, document.getElementById(id), root);
          };
          resolve(player);
        }
      }, other),
      children
    ), document.getElementById(id), root);
  });
}

export default player;