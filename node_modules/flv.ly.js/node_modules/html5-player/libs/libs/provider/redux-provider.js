'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');

var _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2;

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _redux = require('redux');

var _reactRedux = require('react-redux');

var _window = require('global/window');

var _window2 = _interopRequireDefault(_window);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * redux 基础 provider
 * @prop { object } store redux store
 *                  非必要的，如果有store，reducers、middlewares和enhancers,preloadedState就不生效，传进来也没有意义
 * @prop { array } middlewares redux middlewares
 * @prop { array } enhancers redux enhancers
 * @prop { object } reducers redux reducers (传进来后会被combineReducers)
 * @prop { any } preloadedState redux preloadedState
 * @prop { boolean } production 是否是生产环境
 */
var ReduxProvider = (_temp2 = _class = function (_React$Component) {
  (0, _inherits3.default)(ReduxProvider, _React$Component);

  function ReduxProvider() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, ReduxProvider);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = ReduxProvider.__proto__ || (0, _getPrototypeOf2.default)(ReduxProvider)).call.apply(_ref, [this].concat(args))), _this), _this.displayName = 'Provider', _this.state = {}, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(ReduxProvider, [{
    key: 'getStore',
    value: function getStore() {
      var _props = this.props,
          store = _props.store,
          preloadedState = _props.preloadedState;

      if (!store) {
        var reducers = this.getReducers(this.props);
        var enhancers = this.getEnhancers(this.props);
        store = (0, _redux.createStore)(reducers, preloadedState, enhancers);
      }
      return store;
    }
  }, {
    key: 'getReducers',
    value: function getReducers(props) {
      var reducers = props.reducers;

      return (0, _redux.combineReducers)((0, _extends3.default)({}, reducers));
    }
  }, {
    key: 'getEnhancers',
    value: function getEnhancers(props) {
      var _props$enhancers = props.enhancers,
          enhancers = _props$enhancers === undefined ? [] : _props$enhancers,
          _props$middlewares = props.middlewares,
          middlewares = _props$middlewares === undefined ? [] : _props$middlewares,
          _props$production = props.production,
          production = _props$production === undefined ? true : _props$production;

      var devtools = function devtools() {
        return function (noop) {
          return noop;
        };
      };
      //如果localStorage.reduxTools=true，reduxTools强制打开。
      //给生产环境调试使用。
      if ((!production || JSON.parse(localStorage.getItem('reduxDevTools'))) && _window2.default.__REDUX_DEVTOOLS_EXTENSION__) {
        devtools = _window2.default.__REDUX_DEVTOOLS_EXTENSION__;
      } else {
        console.log('You have not install the redux-devtools-extension.');
        console.log('See https://github.com/zalmoxisus/redux-devtools-extension.');
      }
      var _middlewares = [].concat((0, _toConsumableArray3.default)(middlewares));
      var _enhancers = [_redux.applyMiddleware.apply(undefined, (0, _toConsumableArray3.default)(_middlewares)), devtools()].concat((0, _toConsumableArray3.default)(enhancers));
      return _redux.compose.apply(undefined, (0, _toConsumableArray3.default)(_enhancers));
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var store = nextProps.store,
          hot = nextProps.hot;
      //热替换处理，根据props.hot来处理

      if (!store && hot) {
        var reducers = this.getReducers(nextProps);
        this.store.replaceReducer(reducers);
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.store = null;
    }
  }, {
    key: 'render',
    value: function render() {
      var children = this.props.children;

      if (!this.store) {
        this.store = this.getStore();
      }
      return _react2.default.createElement(
        _reactRedux.Provider,
        { store: this.store },
        children
      );
    }
  }]);
  return ReduxProvider;
}(_react2.default.Component), _class.propTypes = {
  //非必要的，如果有store，reducers、middlewares和enhancers就不生效，传进来也没有意义
  store: _propTypes2.default.object,
  middlewares: _propTypes2.default.array,
  enhancers: _propTypes2.default.array,
  preloadedState: _propTypes2.default.any,
  reducers: _propTypes2.default.object,
  production: _propTypes2.default.bool
}, _temp2);
exports.default = ReduxProvider;