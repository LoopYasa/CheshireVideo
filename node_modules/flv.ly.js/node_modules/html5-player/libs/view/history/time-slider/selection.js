'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp2; //外部依赖包

//内部依赖包


var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

var _reactDom2 = _interopRequireDefault(_reactDom);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _addEventListener = require('../../../utils/dom/addEventListener');

var _addEventListener2 = _interopRequireDefault(_addEventListener);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Selection = (_temp2 = _class = function (_React$Component) {
  (0, _inherits3.default)(Selection, _React$Component);

  function Selection() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, Selection);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Selection.__proto__ || (0, _getPrototypeOf2.default)(Selection)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.dispatch = _this.props.dispatch, _this.events = [], _this.eventsAfterMouseDown = [], _this.onChange = function (percent) {
      var onChange = _this.props.onChange;

      onChange && onChange(percent);
    }, _this.onBlur = function (percent) {
      var onBlur = _this.props.onBlur;

      onBlur && onBlur(percent);
    }, _this.onMouseDown = function (e) {
      e.stopPropagation();
      _this.bindEventsAfterMouseDown();
    }, _this.onMouseUp = function (e) {
      e.stopPropagation();
      _this.removeEventsAfterMouseDown();
      _this.onBlur(_this.percent);
    }, _this.onMouseMove = function (e) {
      _this.onStart(e.pageX);
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(Selection, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.selectionDOM = _reactDom2.default.findDOMNode(this.refs['selection']);
      this.document = this.selectionDOM.ownerDocument;
      this.bindEvents();
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var nextPercent = nextProps.percent;
      var thisPercent = this.props.percent;

      if (thisPercent || thisPercent === 0) {
        if (nextPercent !== thisPercent) {
          this.setSliderValueByPercent(nextPercent);
        }
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.removeEvents();
    }
  }, {
    key: 'setSliderValueByPercent',
    value: function setSliderValueByPercent() {
      var percent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;

      this.percent = percent;
    }
  }, {
    key: 'bindEvents',
    value: function bindEvents() {
      //像mousemove、mousedown、mouseup等事件，直接使用jsx绑定方式，在高德地图上的tooltip会失效。
      this.events.push((0, _addEventListener2.default)(this.selectionDOM, 'mousedown', this.onMouseDown));
      this.events.push((0, _addEventListener2.default)(this.selectionDOM, 'mouseup', this.onMouseUp));
    }
  }, {
    key: 'removeEvents',
    value: function removeEvents() {
      //移除事件
      this.events.forEach(function (v) {
        v.remove && v.remove();
      });
    }
  }, {
    key: 'bindEventsAfterMouseDown',
    value: function bindEventsAfterMouseDown() {
      var timeSliderDOM = this.context.timeSliderDOM.children[0];
      this.eventsAfterMouseDown.push((0, _addEventListener2.default)(this.document, 'mousemove', this.onMouseMove));
      this.eventsAfterMouseDown.push((0, _addEventListener2.default)(this.document, 'mouseup', this.onMouseUp));
      this.eventsAfterMouseDown.push((0, _addEventListener2.default)(timeSliderDOM, 'onMouseMove', this.onMouseMove));
    }
  }, {
    key: 'removeEventsAfterMouseDown',
    value: function removeEventsAfterMouseDown() {
      //移除事件
      this.eventsAfterMouseDown.forEach(function (v) {
        v.remove && v.remove();
      });
    }
  }, {
    key: 'getSliderStart',
    value: function getSliderStart() {
      var slider = this.context.timeSliderDOM.children[0];
      var rect = slider.getBoundingClientRect();
      return rect.left;
    }
  }, {
    key: 'calcValueByPos',
    value: function calcValueByPos(position) {
      var pixelOffset = position - this.getSliderStart();
      return pixelOffset;
    }
  }, {
    key: 'onStart',
    value: function onStart(position) {
      var value = this.calcValueByPos(position);
      var timeSliderDOM = this.context.timeSliderDOM.children[0];
      var sliderLength = timeSliderDOM.clientWidth;
      if (value < 0) {
        value = 0;
      }
      if (value > sliderLength) {
        value = sliderLength;
      }
      var percent = value / sliderLength;

      var defaultPercent = this.props.defaultPercent;

      if (defaultPercent || defaultPercent === 0) {
        this.percent = percent;
        this.setState({ random: Math.random() });
      }
      this.onChange(percent);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          percent = _props.percent,
          defaultPercent = _props.defaultPercent,
          children = _props.children,
          other = (0, _objectWithoutProperties3.default)(_props, ['percent', 'defaultPercent', 'children']);

      if (this.percent === undefined) {
        this.percent = percent || defaultPercent || 0;
      }
      var style = (0, _extends3.default)({}, this.props.style);
      style.left = this.percent * 100 + '%';
      return _react2.default.createElement(
        'div',
        (0, _extends3.default)({}, other, { style: style, ref: 'selection' }),
        children
      );
    }
  }]);
  return Selection;
}(_react2.default.Component), _class.propTypes = {}, _class.displayName = 'Selection', _class.contextTypes = {
  timeSliderDOM: _propTypes2.default.object
}, _temp2);
exports.default = Selection;