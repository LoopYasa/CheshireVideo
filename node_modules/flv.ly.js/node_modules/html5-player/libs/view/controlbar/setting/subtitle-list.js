'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _dec, _class; //外部依赖包

//内部依赖包


var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _list = require('./list');

var _list2 = _interopRequireDefault(_list);

var _video = require('../../../model/video');

var _track = require('../../../model/track');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SubtitleList = (_dec = (0, _reactRedux.connect)(function (state) {
  return {
    subtitleList: state[_track.namespace].subtitleList,
    subtitleId: state[_track.namespace].subtitleId
  };
}), _dec(_class = function (_List) {
  (0, _inherits3.default)(SubtitleList, _List);

  function SubtitleList() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, SubtitleList);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = SubtitleList.__proto__ || (0, _getPrototypeOf2.default)(SubtitleList)).call.apply(_ref, [this].concat(args))), _this), _this.displayName = 'SubtitleList', _this.onSelect = function (value) {
      return _this.onSelectEvent(value, function () {
        _this.dispatch({
          type: _video.namespace + '/switchSubtitle',
          payload: value
        });
      });
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(SubtitleList, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          subtitleList = _props.subtitleList,
          subtitleId = _props.subtitleId;

      var locale = this.getLocale();
      return _react2.default.createElement(
        'ul',
        { className: 'html5-player-list-container' },
        this.renderBack(locale.subtitle),
        subtitleList && subtitleList.map(function (v, k) {
          var className = (0, _classnames2.default)({
            'html5-player-list-selected': subtitleId === v.id
          });
          return _react2.default.createElement(
            'li',
            { onClick: _this2.onSelect(v.id), key: k, className: className },
            v.name
          );
        }),
        _react2.default.createElement(
          'li',
          {
            onClick: this.onSelect(-1),
            key: -1,
            className: (0, _classnames2.default)({
              'html5-player-list-selected': subtitleId === -1
            })
          },
          locale.subtitleOff
        )
      );
    }
  }]);
  return SubtitleList;
}(_list2.default)) || _class);
exports.default = SubtitleList;