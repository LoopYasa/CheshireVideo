'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _dec, _dec2, _class, _class2, _temp2; //外部依赖包

//import ReactDOM from 'react-dom';

//内部依赖包


var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRedux = require('react-redux');

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _isBoolean = require('lodash/isBoolean');

var _isBoolean2 = _interopRequireDefault(_isBoolean);

var _clear = require('../decorator/clear');

var _clear2 = _interopRequireDefault(_clear);

var _playPause = require('../controlbar/play-pause');

var _playPause2 = _interopRequireDefault(_playPause);

var _volume = require('../controlbar/volume');

var _volume2 = _interopRequireDefault(_volume);

var _next = require('../controlbar/next');

var _next2 = _interopRequireDefault(_next);

var _prev = require('../controlbar/prev');

var _prev2 = _interopRequireDefault(_prev);

var _fullOffScreen = require('../controlbar/full-off-screen');

var _fullOffScreen2 = _interopRequireDefault(_fullOffScreen);

var _timeContainer = require('../controlbar/time-container');

var _timeContainer2 = _interopRequireDefault(_timeContainer);

var _timeSlider = require('../controlbar/time-slider');

var _timeSlider2 = _interopRequireDefault(_timeSlider);

var _setting = require('../controlbar/setting');

var _setting2 = _interopRequireDefault(_setting);

var _playbackRate = require('../controlbar/playback-rate');

var _playbackRate2 = _interopRequireDefault(_playbackRate);

var _subtitleSelect = require('../controlbar/subtitle-select');

var _subtitleSelect2 = _interopRequireDefault(_subtitleSelect);

var _pictureQuality = require('../controlbar/picture-quality');

var _pictureQuality2 = _interopRequireDefault(_pictureQuality);

var _rotate = require('../controlbar/rotate');

var _rotate2 = _interopRequireDefault(_rotate);

var _capture = require('../controlbar/capture');

var _capture2 = _interopRequireDefault(_capture);

var _util = require('../../utils/util');

var _controlbar = require('../../model/controlbar');

var _video = require('../../model/video');

var _playPause3 = require('../../model/play-pause');

var _living = require('../../model/living');

var _ready = require('../../model/ready');

var _track = require('../../model/track');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * 播放器加载状态的组件
 */
var Controlbar = (_dec = (0, _reactRedux.connect)(function (state) {
  return {
    show: state[_controlbar.namespace],
    playing: state[_playPause3.namespace],
    living: state[_living.namespace],
    ready: state[_ready.namespace],
    subtitleList: state[_track.namespace].subtitleList
  };
}), _dec2 = (0, _clear2.default)([_controlbar.namespace, _living.namespace]), _dec(_class = _dec2(_class = (_temp2 = _class2 = function (_React$Component) {
  (0, _inherits3.default)(Controlbar, _React$Component);

  function Controlbar() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, Controlbar);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Controlbar.__proto__ || (0, _getPrototypeOf2.default)(Controlbar)).call.apply(_ref, [this].concat(args))), _this), _this.state = {}, _this.dispatch = _this.props.dispatch, _this.onMouseEnter = function (e) {
      e.stopPropagation();
      var playing = _this.props.playing;

      if (playing) {
        _this.dispatch({
          type: _video.namespace + '/controlbarClearTimeout',
          payload: {
            onControlbarEnter: true
          }
        });
      }
    }, _this.onMouseLeave = function (e) {
      e.stopPropagation();
      var playing = _this.props.playing;

      if (playing) {
        _this.dispatch({
          type: _video.namespace + '/controlbar',
          payload: false,
          delayTime: _this.context.controlbarHideTime,
          onControlbarEnter: false
        });
      }
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(Controlbar, [{
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (!this.context.isHistory) {
        this.dispatch({
          type: _ready.namespace + '/clear'
        });
      }
    }
  }, {
    key: 'getLocale',
    value: function getLocale() {
      return this.context.localization;
    }
  }, {
    key: 'renderCustomButton',
    value: function renderCustomButton(buttons) {
      var buttonJSX = [];
      for (var i in buttons) {
        var button = buttons[i];
        if (!button) {
          continue;
        }
        if (!_react2.default.isValidElement(button)) {
          console.error('自定义按钮必须是React组件！');
          continue;
        }
        buttonJSX.push((0, _util.cloneElement)(button, {
          className: (0, _classnames2.default)('html5-player-small-button', (0, _util.getChildProps)(button).className),
          key: i
        }));
      }
      return buttonJSX;
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          playbackRates = _props.playbackRates,
          playbackRateControls = _props.playbackRateControls,
          show = _props.show,
          muted = _props.muted,
          tracks = _props.tracks,
          isLiving = _props.isLiving,
          ready = _props.ready,
          timeSliderShowFormat = _props.timeSliderShowFormat,
          hasFragment = _props.hasFragment,
          subtitleList = _props.subtitleList,
          customTimeSlider = _props.customTimeSlider;
      var living = this.props.living;
      var isHistory = this.context.isHistory;

      if (isLiving) {
        living = true;
      }
      var locale = this.getLocale();
      var _props$controls = this.props.controls,
          controls = _props$controls === undefined ? true : _props$controls;

      if ((0, _isBoolean2.default)(controls)) {
        if (!controls) {
          //controls=false时，需要设置这些值为false
          controls = {
            playPause: false,
            volume: false,
            prev: false,
            next: false,
            fullscreen: false,
            setting: false,
            time: false,
            timeSlider: false,
            speed: false,
            subtitle: false,
            pictureQuality: false,
            rotate: false,
            capture: false
          };
        } else {
          controls = {};
        }
      }
      var _controls = controls,
          _controls$playPause = _controls.playPause,
          playPause = _controls$playPause === undefined ? true : _controls$playPause,
          _controls$volume = _controls.volume,
          volume = _controls$volume === undefined ? true : _controls$volume,
          _controls$prev = _controls.prev,
          prev = _controls$prev === undefined ? true : _controls$prev,
          _controls$next = _controls.next,
          next = _controls$next === undefined ? true : _controls$next,
          _controls$fullscreen = _controls.fullscreen,
          fullscreen = _controls$fullscreen === undefined ? true : _controls$fullscreen,
          _controls$setting = _controls.setting,
          setting = _controls$setting === undefined ? false : _controls$setting,
          _controls$time = _controls.time,
          time = _controls$time === undefined ? true : _controls$time,
          _controls$timeSlider = _controls.timeSlider,
          timeSlider = _controls$timeSlider === undefined ? true : _controls$timeSlider,
          _controls$speed = _controls.speed,
          speed = _controls$speed === undefined ? false : _controls$speed,
          _controls$subtitle = _controls.subtitle,
          subtitle = _controls$subtitle === undefined ? true : _controls$subtitle,
          _controls$pictureQual = _controls.pictureQuality,
          pictureQuality = _controls$pictureQual === undefined ? true : _controls$pictureQual,
          _controls$rotate = _controls.rotate,
          rotate = _controls$rotate === undefined ? false : _controls$rotate,
          _controls$capture = _controls.capture,
          capture = _controls$capture === undefined ? false : _controls$capture,
          customButton = (0, _objectWithoutProperties3.default)(_controls, ['playPause', 'volume', 'prev', 'next', 'fullscreen', 'setting', 'time', 'timeSlider', 'speed', 'subtitle', 'pictureQuality', 'rotate', 'capture']);

      return _react2.default.createElement(
        'div',
        {
          className: (0, _classnames2.default)('html5-player-controlbar', {
            'html5-player-hide': !show,
            'html5-player-show': show
          }),
          onMouseEnter: this.onMouseEnter,
          onMouseLeave: this.onMouseLeave
        },
        ready && !living && !customTimeSlider && timeSlider && _react2.default.createElement(_timeSlider2.default, {
          hasFragment: hasFragment,
          tracks: tracks,
          timeSliderShowFormat: timeSliderShowFormat
        }),
        ready && !living && customTimeSlider,
        _react2.default.createElement(
          'div',
          { className: 'html5-player-button-container' },
          playPause && _react2.default.createElement(_playPause2.default, { living: living }),
          volume && _react2.default.createElement(_volume2.default, {
            autoMuted: muted,
            living: living,
            hasFragment: hasFragment || isHistory
          }),
          living && _react2.default.createElement(
            'button',
            { className: 'html5-player-small-button cursor-default html5-player-live-button' },
            _react2.default.createElement(
              'svg',
              {
                className: 'html5-player-icon html5-player-live-icon',
                'aria-hidden': 'true'
              },
              _react2.default.createElement('use', { xlinkHref: '#icon-live' })
            )
          ),
          !isHistory && prev && _react2.default.createElement(_prev2.default, null),
          !isHistory && next && _react2.default.createElement(_next2.default, null),
          ready && !living && time && _react2.default.createElement(_timeContainer2.default, null),
          fullscreen && _react2.default.createElement(_fullOffScreen2.default, null),
          ready && setting && _react2.default.createElement(_setting2.default, {
            living: living,
            playbackRates: playbackRates,
            playbackRateControls: playbackRateControls
          }),
          rotate && _react2.default.createElement(_rotate2.default, null),
          capture && _react2.default.createElement(_capture2.default, null),
          ready && !living && speed && _react2.default.createElement(_playbackRate2.default, { playbackRates: playbackRates, locale: locale }),
          ready && !living && subtitleList[0] && subtitle && _react2.default.createElement(_subtitleSelect2.default, { locale: locale }),
          ready && !living && pictureQuality && _react2.default.createElement(_pictureQuality2.default, { locale: locale }),
          ready && this.renderCustomButton(customButton)
        )
      );
    }
  }]);
  return Controlbar;
}(_react2.default.Component), _class2.contextTypes = {
  localization: _propTypes2.default.object,
  controlbarHideTime: _propTypes2.default.number,
  isHistory: _propTypes2.default.bool
}, _class2.displayName = 'Controlbar', _temp2)) || _class) || _class);
exports.default = Controlbar;