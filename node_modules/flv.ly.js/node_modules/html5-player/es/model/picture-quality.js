import _regeneratorRuntime from 'babel-runtime/regenerator';
import { standardReducer } from '../utils/util';

export var namespace = 'picture-quality';
export default function () {
  return {
    namespace: namespace,
    state: {
      list: null,
      //-1为自动
      currentQuality: -1
    },
    reducers: {
      dataReducer: standardReducer,
      clear: function clear(state, _ref) {
        var payload = _ref.payload;

        return this.state;
      }
    },
    sagas: {
      dataSaga: /*#__PURE__*/_regeneratorRuntime.mark(function dataSaga(_ref2, _ref3) {
        var payload = _ref2.payload;
        var put = _ref3.put;
        return _regeneratorRuntime.wrap(function dataSaga$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return put({
                  type: 'dataReducer',
                  payload: payload
                });

              case 2:
              case 'end':
                return _context.stop();
            }
          }
        }, dataSaga, this);
      })
    }
  };
}