import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';

var _class, _temp2;

//外部依赖包
import React from 'react';
//内部依赖包
import Tooltip from '../../components/tooltip';
import { dateFormat } from '../../../utils/util';

var TimeTooltip = (_temp2 = _class = function (_React$Component) {
  _inherits(TimeTooltip, _React$Component);

  function TimeTooltip() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, TimeTooltip);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TimeTooltip.__proto__ || _Object$getPrototypeOf(TimeTooltip)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      percent: 0.5
    }, _this.dispatch = _this.props.dispatch, _this.onChange = function (percent) {
      _this.setState({
        percent: percent
      });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }
  //这里的配置参考jw-player的api


  _createClass(TimeTooltip, [{
    key: 'renderContent',
    value: function renderContent() {
      var _props = this.props,
          duration = _props.duration,
          beginDateTime = _props.beginDateTime;
      var percent = this.state.percent;

      if (duration === 0) {
        return false;
      }
      var formatTime = beginDateTime && dateFormat((beginDateTime + percent * duration) * 1000, 'YYYY-MM-DD HH:mm:ss');
      return React.createElement(
        'div',
        { className: 'html5-player-time-tooltip-content' },
        formatTime
      );
    }
  }, {
    key: 'render',
    value: function render() {
      return React.createElement(
        Tooltip,
        {
          className: 'html5-player-time-tooltip',
          content: this.renderContent(),
          type: 'move',
          onChange: this.onChange,
          percent: this.state.percent,
          isAnimateActive: false
        },
        React.createElement('div', { className: 'html5-player-for-tooltip' })
      );
    }
  }]);

  return TimeTooltip;
}(React.Component), _class.propTypes = {}, _class.displayName = 'TimeTooltip', _temp2);
export { TimeTooltip as default };