import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';

var _class, _temp2;

//外部依赖包
import React from 'react';
import PropTypes from 'prop-types';
import downloadjs from 'downloadjs';
//内部依赖包
import { randomKey } from '../../utils/util';

var Capture = (_temp2 = _class = function (_React$Component) {
  _inherits(Capture, _React$Component);

  function Capture() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Capture);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Capture.__proto__ || _Object$getPrototypeOf(Capture)).call.apply(_ref, [this].concat(args))), _this), _this.displayName = 'Capture', _this.captureName = function () {
      return 'capture' + randomKey() + '.png';
    }, _this.capture = function (e) {
      var video = _this.context.playerDOM;
      var canvas = document.createElement('canvas');
      canvas.width = video.clientWidth;
      canvas.height = video.clientHeight;
      var ctx = canvas.getContext('2d');
      ctx.drawImage(video, 0, 0, video.clientWidth, video.clientHeight);
      downloadjs(canvas.toDataURL(), _this.captureName(), 'image/png');
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Capture, [{
    key: 'render',
    value: function render() {
      return React.createElement(
        'button',
        {
          className: 'html5-player-small-button float-right html5-player-capture-button',
          onClick: this.capture
        },
        React.createElement(
          'svg',
          {
            className: 'html5-player-icon html5-player-capture-icon',
            'aria-hidden': 'true'
          },
          React.createElement('use', { xlinkHref: '#icon-capture' })
        )
      );
    }
  }]);

  return Capture;
}(React.Component), _class.propTypes = {}, _class.contextTypes = {
  playerDOM: PropTypes.object
}, _temp2);
export { Capture as default };