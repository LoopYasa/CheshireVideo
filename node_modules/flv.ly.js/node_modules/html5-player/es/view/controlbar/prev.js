import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';

var _class, _temp2;

//外部依赖包
import React from 'react';
//import ReactDOM from 'react-dom';
import PropTypes from 'prop-types';
import classnames from 'classnames';
//内部依赖包

var Prev = (_temp2 = _class = function (_React$Component) {
  _inherits(Prev, _React$Component);

  function Prev() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Prev);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Prev.__proto__ || _Object$getPrototypeOf(Prev)).call.apply(_ref, [this].concat(args))), _this), _this.displayName = 'Prev', _this.onClick = function (e) {
      _this.context.setActiveItem(_this.context.activeItem - 1);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Prev, [{
    key: 'render',
    value: function render() {
      var _context = this.context,
          activeItem = _context.activeItem,
          playlist = _context.playlist;

      if (!playlist || !playlist[0]) {
        return false;
      }
      if (activeItem <= 1) {
        return false;
      }
      return React.createElement(
        'button',
        {
          className: 'html5-player-small-button float-left html5-player-prev-button',
          onClick: this.onClick
        },
        React.createElement(
          'svg',
          {
            className: classnames('html5-player-icon html5-player-prev-icon'),
            'aria-hidden': 'true'
          },
          React.createElement('use', { xlinkHref: '#icon-prev' })
        )
      );
    }
  }]);

  return Prev;
}(React.Component), _class.contextTypes = {
  playlist: PropTypes.array,
  activeItem: PropTypes.number,
  setActiveItem: PropTypes.func
}, _temp2);
export { Prev as default };