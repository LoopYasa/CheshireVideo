import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import API from './api';
import * as logger from '../utils/logger';

var html5API = function (_API) {
  _inherits(html5API, _API);

  function html5API(videoDOM, file) {
    var _this2, _ret;

    _classCallCheck(this, html5API);

    var _this = (_this2 = _possibleConstructorReturn(this, (html5API.__proto__ || _Object$getPrototypeOf(html5API)).call(this, videoDOM, file)), _this2);
    return _ret = _this, _possibleConstructorReturn(_this2, _ret);
  }

  _createClass(html5API, [{
    key: 'loadSource',
    value: function loadSource(file) {
      this.src = file;
      logger.info('Source Loading:', 'loading h5 video.');
    }
  }, {
    key: 'detachMedia',
    value: function detachMedia() {}
  }]);

  return html5API;
}(API);

export { html5API as default };