{"ast":null,"code":"import React, { useRef, useEffect, useState, useMemo, useCallback } from 'react';\nimport flvjs from 'flv.zv.js';\nimport * as Hls from 'hls.js';\nimport { isSupported } from 'hls.js';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\n\nclass VideoEventInstance {\n  constructor(video) {\n    this.video = video;\n    this.events = {};\n    this.playerEvents = {};\n  }\n\n  on(eventName, handle) {\n    this.events && this.events[eventName] ? this.events[eventName].listener.push(handle) : this.events[eventName] = {\n      type: eventName,\n      listener: [handle]\n    };\n  }\n\n  addEventListener(eventName, handle) {\n    if (this.video) {\n      this.playerEvents[eventName] ? this.playerEvents[eventName].push(handle) : this.playerEvents[eventName] = [handle];\n      this.video.addEventListener(eventName, handle, false);\n    }\n  }\n\n  removeEventListener(eventName, handle) {\n    if (this.video) {\n      if (!this.playerEvents || !this.playerEvents[eventName]) {\n        return;\n      }\n\n      let index = this.playerEvents[eventName].findIndex(v => v === handle);\n      index > -1 && this.playerEvents[eventName].splice(index, 1);\n      this.video.removeEventListener(eventName, handle, false);\n    }\n  }\n\n  emit(eventName, ...data) {\n    if (!this.events || !this.events[eventName]) {\n      return;\n    }\n\n    this.events[eventName].listener.forEach(v => {\n      v(...data);\n    });\n  }\n\n  off(eventName, handle) {\n    if (!this.events || !this.events.eventName) {\n      return;\n    }\n\n    let index = this.events[eventName].listener.findIndex(v => v === handle);\n    index > -1 && this.events[eventName].listener.splice(index, 1);\n  }\n\n  getApi() {\n    return {\n      on: this.on.bind(this),\n      off: this.off.bind(this),\n      emit: this.emit.bind(this),\n      addEventListener: this.addEventListener.bind(this),\n      removeEventListener: this.removeEventListener.bind(this)\n    };\n  }\n\n  destroy() {\n    Object.keys(this.playerEvents).forEach(key => {\n      this.playerEvents[key].forEach(fn => {\n        this.removeEventListener(key, fn);\n      });\n    });\n    this.playerEvents = {};\n    this.events = {};\n    this.video = null;\n  }\n\n}\n/**\r\n * 创建HLS对象\r\n * @param {*} video\r\n * @param {*} file\r\n */\n\n\nfunction createHlsPlayer(video, file) {\n  if (isSupported()) {\n    const player = new Hls({\n      liveDurationInfinity: true,\n      levelLoadingTimeOut: 15000,\n      fragLoadingTimeOut: 25000,\n      enableWorker: true\n    });\n    player.loadSource(file);\n    player.attachMedia(video);\n    return player;\n  }\n}\n/**\r\n * 创建FLV对象\r\n * @param {*} video\r\n * @param {*} options\r\n */\n\n\nfunction createFlvPlayer(video, options) {\n  const {\n    flvOptions = {},\n    flvConfig = {}\n  } = options;\n\n  if (flvjs.isSupported()) {\n    const player = flvjs.createPlayer(Object.assign({}, {\n      type: 'flv',\n      url: options.file\n    }, flvOptions), Object.assign({}, {\n      enableWorker: true,\n      // lazyLoad: false,\n      // Indicates how many seconds of data to be kept for lazyLoad.\n      // lazyLoadMaxDuration: 0,\n      // autoCleanupMaxBackwardDuration: 3,\n      // autoCleanupMinBackwardDuration: 2,\n      // autoCleanupSourceBuffer: true,\n      enableStashBuffer: false,\n      stashInitialSize: 128,\n      isLive: options.isLive || true\n    }, flvConfig));\n    player.attachMediaElement(video);\n    player.load();\n    return player;\n  }\n}\n/**\r\n * 获取播放文件类型\r\n * @param {*} url\r\n */\n\n\nfunction getVideoType(url) {\n  return url.indexOf('.flv') > -1 ? 'flv' : url.indexOf('.m3u8') > -1 ? 'm3u8' : 'native';\n}\n/**\r\n * 播放时间转字符串\r\n * @param {*} second_time\r\n */\n\n\nfunction timeStamp(second_time) {\n  let time = Math.ceil(second_time);\n\n  if (time > 60) {\n    let second = Math.ceil(second_time % 60);\n    let min = Math.floor(second_time / 60);\n    time = `${min < 10 ? `0${min}` : min}:${second < 10 ? `0${second}` : second}`;\n\n    if (min > 60) {\n      min = Math.ceil(second_time / 60 % 60);\n      let hour = Math.floor(second_time / 60 / 60);\n      time = `${hour < 10 ? `0${hour}` : hour}:${min < 10 ? `0${min}` : min}:${second < 10 ? `0${second}` : second}`;\n    } else {\n      time = `00:${time}`;\n    }\n  } else {\n    time = `00:00:${time < 10 ? `0${time}` : time}`;\n  }\n\n  return time;\n}\n/**\r\n * 日期格式化\r\n * @param {*} timetemp\r\n */\n\n\nfunction dateFormat(timetemp) {\n  const date = new Date(timetemp);\n  let YYYY = date.getFullYear();\n  let DD = date.getDate();\n  let MM = date.getMonth() + 1;\n  let hh = date.getHours();\n  let mm = date.getMinutes();\n  let ss = date.getSeconds();\n  return `${YYYY}.${MM > 9 ? MM : '0' + MM}.${DD > 9 ? DD : '0' + DD} ${hh > 9 ? hh : '0' + hh}.${mm > 9 ? mm : '0' + mm}.${ss > 9 ? ss : '0' + ss}`;\n}\n/**\r\n * 全屏\r\n * @param {*} element\r\n */\n\n\nfunction fullscreen(element) {\n  if (element.requestFullScreen) {\n    element.requestFullScreen();\n  } else if (element.webkitRequestFullScreen) {\n    element.webkitRequestFullScreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  }\n}\n/**\r\n * exitFullscreen 退出全屏\r\n * @param  {Objct} element 选择器\r\n */\n\n\nfunction exitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  }\n}\n/**\r\n * [isFullscreen 判断浏览器是否全屏]\r\n * @return [全屏则返回当前调用全屏的元素,不全屏返回false]\r\n */\n\n\nfunction isFullscreen(ele) {\n  if (!ele) {\n    return false;\n  }\n\n  return document.fullscreenElement === ele || document.msFullscreenElement === ele || document.mozFullScreenElement === ele || document.webkitFullscreenElement === ele || false;\n} // 添加 / 移除 全屏事件监听\n\n\nfunction fullScreenListener(isAdd, fullscreenchange) {\n  const funcName = isAdd ? 'addEventListener' : 'removeEventListener';\n  const fullScreenEvents = ['fullscreenchange', 'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange'];\n  fullScreenEvents.map(v => document[funcName](v, fullscreenchange));\n}\n/**\r\n * 计算视频拖拽边界\r\n * @param {*} ele\r\n * @param {*} currentPosition\r\n * @param {*} scale\r\n */\n\n\nfunction computedBound(ele, currentPosition, scale) {\n  const data = currentPosition;\n  const eleRect = ele.getBoundingClientRect();\n  const w = eleRect.width;\n  const h = eleRect.height;\n  let lx = 0,\n      ly = 0;\n\n  if (scale === 1) {\n    return [0, 0];\n  }\n\n  lx = w * (scale - 1) / 2 / scale;\n  ly = h * (scale - 1) / 2 / scale;\n  let x = 0,\n      y = 0;\n\n  if (data[0] >= 0 && data[0] > lx) {\n    x = lx;\n  }\n\n  if (data[0] >= 0 && data[0] < lx) {\n    x = data[0];\n  }\n\n  if (data[0] < 0 && data[0] < -lx) {\n    x = -lx;\n  }\n\n  if (data[0] < 0 && data[0] > -lx) {\n    x = data[0];\n  }\n\n  if (data[1] >= 0 && data[1] > ly) {\n    y = ly;\n  }\n\n  if (data[1] >= 0 && data[1] < ly) {\n    y = data[1];\n  }\n\n  if (data[1] < 0 && data[1] < -ly) {\n    y = -ly;\n  }\n\n  if (data[1] < 0 && data[1] > -ly) {\n    y = data[1];\n  }\n\n  if (x !== data[0] || y !== data[1]) {\n    return [x, y];\n  } else {\n    return;\n  }\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction IconFont({\n  type,\n  className = '',\n  ...props\n}) {\n  return /*#__PURE__*/React.createElement(\"i\", _extends({\n    className: `lm-player-iconfont ${type} ${className}`\n  }, props));\n}\n\nIconFont.propTypes = {\n  type: PropTypes.string,\n  className: PropTypes.string\n};\n\nclass Slider extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.renderSliderTips = e => {\n      const {\n        renderTips\n      } = this.props;\n\n      if (!renderTips) {\n        return;\n      }\n\n      clearTimeout(this.timer);\n      this.timer = setTimeout(() => {\n        const {\n          x,\n          width,\n          top\n        } = this.layoutDom.getBoundingClientRect();\n        const tipsX = e.pageX - x;\n        let percent = (e.pageX - x) / width;\n        percent = percent < 0 ? 0 : percent > 1 ? 1 : percent;\n        this.setState({\n          tipsX,\n          tipsY: top,\n          showTips: true,\n          tempValue: percent\n        });\n      }, 200);\n    };\n\n    this.hideSliderTips = () => {\n      clearTimeout(this.timer);\n      this.setState({\n        showTips: false\n      });\n    };\n\n    this.cancelPropagation = e => {\n      e.stopPropagation();\n    };\n\n    this.startDrag = e => {\n      e.stopPropagation();\n      this.dragFlag = true;\n      document.body.addEventListener('mousemove', this.moveChange);\n      document.body.addEventListener('mouseup', this.stopDrag);\n    };\n\n    this.moveChange = e => {\n      e.stopPropagation();\n      const percent = this.computedPositionForEvent(e);\n      this.setState({\n        value: percent\n      });\n    };\n\n    this.stopDrag = e => {\n      e.stopPropagation();\n      document.body.removeEventListener('mousemove', this.moveChange);\n      document.body.removeEventListener('mouseup', this.stopDrag);\n      this.dragFlag = false;\n      let percent = this.state.value / 100;\n      percent = percent < 0 ? 0 : percent > 1 ? 1 : percent;\n      this.props.onChange && this.props.onChange(percent);\n    };\n\n    this.changeCurrentValue = event => {\n      event.stopPropagation();\n      const {\n        width,\n        x\n      } = this.layoutDom.getBoundingClientRect();\n      let percent = (event.pageX - x) / width;\n      this.props.onChange && this.props.onChange(percent);\n    };\n\n    this.sliderDomRef = /*#__PURE__*/React.createRef();\n    this.layoutDom = null;\n    this.lineDom = null;\n    this.dragDom = null;\n    this.dragFlag = false;\n    this.state = {\n      value: this.props.currentPercent || 0,\n      tempValue: 0,\n      showTips: false,\n      tipsX: 0,\n      tipsY: 0\n    };\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (!this.dragFlag) {\n      this.setState({\n        value: nextProps.currentPercent || 0\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.layoutDom = this.sliderDomRef.current;\n    this.dragDom = this.layoutDom.querySelector('.drag-change-icon');\n    this.lineDom = this.layoutDom.querySelector('.slider-content');\n    this.layoutDom.addEventListener('mousemove', this.renderSliderTips, false);\n    this.layoutDom.addEventListener('mouseout', this.hideSliderTips, false);\n    this.lineDom.addEventListener('click', this.changeCurrentValue, false);\n    this.dragDom.addEventListener('click', this.cancelPropagation, false);\n    this.dragDom.addEventListener('mousedown', this.startDrag, false);\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.timer);\n    this.layoutDom.removeEventListener('mousemove', this.renderSliderTips, false);\n    this.layoutDom.removeEventListener('mouseout', this.hideSliderTips, false);\n    this.lineDom.removeEventListener('click', this.changeCurrentValue, false);\n    this.dragDom.removeEventListener('click', this.cancelPropagation, false);\n    this.dragDom.removeEventListener('mousedown', this.startDrag, false);\n    document.body.removeEventListener('mousemove', this.moveChange);\n    document.body.removeEventListener('mouseup', this.stopDrag);\n    this.sliderDomRef = null;\n    this.layoutDom = null;\n    this.lineDom = null;\n    this.dragDom = null;\n    this.dragFlag = null;\n  }\n\n  computedPositionForEvent(e) {\n    const {\n      x,\n      width\n    } = this.layoutDom.getBoundingClientRect();\n    const {\n      pageX\n    } = e;\n    let dx = pageX - x;\n\n    if (dx > width) {\n      dx = width;\n    }\n\n    if (dx < 0) {\n      dx = 0;\n    }\n\n    return dx / width * 100;\n  }\n\n  render() {\n    const {\n      value,\n      showTips,\n      tipsX\n    } = this.state;\n    const {\n      availablePercent = 0,\n      className = '',\n      tipsY\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `slider-layout ${className}`,\n      ref: this.sliderDomRef\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slider-content\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slider-max-line\"\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slider-visibel-line\",\n      style: {\n        width: `${availablePercent}%`\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slider-current-line\",\n      style: {\n        width: `${value}%`\n      }\n    }), this.props.children), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"slider-other-content\"\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"drag-change-icon\",\n      draggable: false,\n      style: {\n        left: `${value}%`\n      }\n    })), /*#__PURE__*/React.createElement(Tips, {\n      visibel: showTips,\n      className: \"lm-player-slide-tips\",\n      style: {\n        left: tipsX,\n        top: tipsY\n      },\n      getContainer: () => this.sliderDomRef.current\n    }, this.props.renderTips && this.props.renderTips(this.state.tempValue)));\n  }\n\n}\n\nSlider.propTypes = {\n  currentPercent: PropTypes.number,\n  seekTo: PropTypes.func,\n  video: PropTypes.element,\n  renderTips: PropTypes.func,\n  availablePercent: PropTypes.number,\n  onChange: PropTypes.func,\n  children: PropTypes.any,\n  className: PropTypes.string,\n  tipsY: PropTypes.number\n};\nSlider.defaultProps = {\n  tipsY: -10\n};\n\nfunction Tips({\n  getContainer,\n  visibel,\n  children,\n  style,\n  className = ''\n}) {\n  const ele = useRef(document.createElement('div'));\n  useEffect(() => {\n    const box = getContainer ? getContainer() || document.body : document.body;\n    box.appendChild(ele.current);\n    return () => box.removeChild(ele.current);\n  }, [getContainer]);\n\n  if (!visibel) {\n    return null;\n  }\n\n  return /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    style: style\n  }, children), ele.current);\n}\n\nTips.propTypes = {\n  visibel: PropTypes.bool,\n  children: PropTypes.element,\n  style: PropTypes.any,\n  className: PropTypes.string\n};\n\nfunction Bar({\n  visibel = true,\n  className = '',\n  children,\n  ...props\n}) {\n  if (visibel === false) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    className: `contraller-bar-item ${className}`\n  }, props), children);\n}\n\nBar.propTypes = {\n  visibel: PropTypes.bool,\n  className: PropTypes.string,\n  children: PropTypes.any\n};\nvar EventName = {\n  RELOAD: \"reload\",\n  //手动视频重载\n  RELOAD_FAIL: \"reloadFail\",\n  // 视频出错，重连失败\n  RELOAD_SUCCESS: \"reloadSuccess\",\n  //视频出错，重连成功\n  ERROR: \"error\",\n  //视频出错\n  ERROR_RELOAD: \"errorRload\",\n  //视频出错，自动重连\n  HISTORY_PLAY_END: \"historyPlayEnd\",\n  //历史视频列表播放结束\n  SEEK: \"seek\",\n  //跳跃播放时间\n  TRANSFORM: \"transform\",\n  //视频容器缩放\n  CHANGE_PLAY_INDEX: \"changePlayIndex\",\n  //历史视频列表播放索引改变\n  HIDE_CONTRALLER: \"hideContraller\",\n  SHOW_CONTRALLER: \"showContraller\",\n  CLEAR_ERROR_TIMER: \"clearErrorTimer\"\n};\n\nfunction LeftBar({\n  api,\n  event,\n  video,\n  isHistory,\n  reloadHistory,\n  isLive,\n  leftExtContents,\n  leftMidExtContents\n}) {\n  const [openSliderVolume, setOpenSliderVolume] = useState(false);\n  const [dep, setDep] = useState(Date.now());\n  useEffect(() => {\n    const updateRender = () => {\n      setDep(Date.now());\n    };\n\n    event.addEventListener('play', updateRender);\n    event.addEventListener('pause', updateRender);\n    event.addEventListener('volumechange', updateRender);\n    return () => {\n      event.removeEventListener('play', updateRender);\n      event.removeEventListener('pause', updateRender);\n      event.removeEventListener('volumechange', updateRender);\n    };\n  }, [event]); //缓存值\n\n  const paused = useMemo(() => video.paused, [dep, video]);\n  const statusIconClassName = useMemo(() => paused ? 'lm-player-Play_Main' : 'lm-player-Pause_Main', [paused]);\n  const statusText = useMemo(() => paused ? '播放' : '暂停', [paused]);\n  const volumeVal = useMemo(() => video.muted ? 0 : video.volume, [dep, video]);\n  const volumeIcon = useMemo(() => volumeVal === 0 ? 'lm-player-volume-close' : video.volume === 1 ? 'lm-player-volume-max' : 'lm-player-volume-normal-fuben', [volumeVal]);\n  const volumePercent = useMemo(() => volumeVal === 0 ? 0 : volumeVal * 100, [volumeVal]);\n  const sliderClassName = useMemo(() => openSliderVolume ? 'contraller-bar-hover-volume' : '', [openSliderVolume]); //TODO 方法\n\n  const changePlayStatus = useCallback(() => video.paused ? api.play() : api.pause(), [video, api]);\n  const mutedChantgeStatus = useCallback(() => video.muted ? api.unmute() : api.mute(), [api, video]);\n  const onChangeVolume = useCallback(volume => {\n    api.setVolume(parseFloat(volume.toFixed(1)));\n    volume > 0 && video.muted && api.unmute();\n  }, [api, video]);\n  const reload = useCallback(() => {\n    isHistory ? reloadHistory() : api.reload();\n    event.emit(EventName.CLEAR_ERROR_TIMER);\n  }, [event, isHistory, api]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contraller-left-bar\"\n  }, leftExtContents, /*#__PURE__*/React.createElement(Bar, {\n    visibel: !isLive\n  }, /*#__PURE__*/React.createElement(IconFont, {\n    onClick: changePlayStatus,\n    type: statusIconClassName,\n    title: statusText\n  })), /*#__PURE__*/React.createElement(Bar, {\n    className: `contraller-bar-volume ${sliderClassName}`,\n    onMouseOver: () => setOpenSliderVolume(true),\n    onMouseOut: () => setOpenSliderVolume(false)\n  }, /*#__PURE__*/React.createElement(IconFont, {\n    onClick: mutedChantgeStatus,\n    type: volumeIcon,\n    title: \"\\u97F3\\u91CF\"\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"volume-slider-layout\"\n  }, /*#__PURE__*/React.createElement(Slider, {\n    className: \"volume-slider\",\n    currentPercent: volumePercent,\n    onChange: onChangeVolume,\n    renderTips: precent => /*#__PURE__*/React.createElement(\"span\", null, Math.round(precent * 100), \"%\"),\n    tipsY: -2\n  }))), /*#__PURE__*/React.createElement(Bar, null, /*#__PURE__*/React.createElement(IconFont, {\n    onClick: reload,\n    type: \"lm-player-Refresh_Main\",\n    title: \"\\u91CD\\u8F7D\"\n  })), leftMidExtContents);\n}\n\nLeftBar.propTypes = {\n  api: PropTypes.object,\n  event: PropTypes.object,\n  playerProps: PropTypes.object,\n  video: PropTypes.node,\n  reloadHistory: PropTypes.func,\n  isHistory: PropTypes.bool\n};\n\nfunction RightBar({\n  playContainer,\n  api,\n  scale,\n  snapshot,\n  rightExtContents,\n  rightMidExtContents\n}) {\n  const [dep, setDep] = useState(Date.now());\n  useEffect(() => {\n    const update = () => setDep(Date.now());\n\n    fullScreenListener(true, update);\n    return () => fullScreenListener(false, update);\n  }, []);\n  const isfull = useMemo(() => isFullscreen(playContainer), [dep, playContainer]);\n  const fullscreen = useCallback(() => {\n    !isFullscreen(playContainer) ? api.requestFullScreen() : api.cancelFullScreen();\n    setDep(Date.now());\n  }, [api, playContainer]);\n  const setScale = useCallback((...args) => {\n    const dragDom = playContainer.querySelector('.player-mask-layout');\n    api.setScale(...args);\n    let position = computedBound(dragDom, api.getPosition(), api.getScale());\n\n    if (position) {\n      api.setPosition(position, true);\n    }\n  }, [api, playContainer]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contraller-right-bar\"\n  }, rightMidExtContents, scale && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Bar, null, /*#__PURE__*/React.createElement(IconFont, {\n    title: \"\\u7F29\\u5C0F\",\n    onClick: () => setScale(-0.2),\n    type: 'lm-player-ZoomOut_Main'\n  })), /*#__PURE__*/React.createElement(Bar, null, /*#__PURE__*/React.createElement(IconFont, {\n    title: \"\\u590D\\u4F4D\",\n    onClick: () => setScale(1, true),\n    type: 'lm-player-ZoomDefault_Main'\n  })), /*#__PURE__*/React.createElement(Bar, null, /*#__PURE__*/React.createElement(IconFont, {\n    title: \"\\u653E\\u5927\",\n    onClick: () => setScale(0.2),\n    type: 'lm-player-ZoomIn_Main'\n  }))), snapshot && /*#__PURE__*/React.createElement(Bar, null, /*#__PURE__*/React.createElement(IconFont, {\n    title: \"\\u622A\\u56FE\",\n    onClick: () => snapshot(api.snapshot()),\n    type: \"lm-player-SearchBox\"\n  })), /*#__PURE__*/React.createElement(Bar, null, /*#__PURE__*/React.createElement(IconFont, {\n    title: isfull ? '窗口' : '全屏',\n    onClick: fullscreen,\n    type: isfull ? 'lm-player-ExitFull_Main' : 'lm-player-Full_Main'\n  })), rightExtContents);\n}\n\nRightBar.propTypes = {\n  api: PropTypes.object,\n  event: PropTypes.object,\n  playerProps: PropTypes.object,\n  playContainer: PropTypes.node,\n  reloadHistory: PropTypes.func,\n  isHistory: PropTypes.bool\n};\n\nfunction ScaleBar({\n  playContainer,\n  api,\n  scale\n}) {\n  const setScale = useCallback((...args) => {\n    const dragDom = playContainer.querySelector('.player-mask-layout');\n    api.setScale(...args);\n    let position = computedBound(dragDom, api.getPosition(), api.getScale());\n\n    if (position) {\n      api.setPosition(position, true);\n    }\n  }, [api, playContainer]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"contraller-scale-bar\"\n  }, scale && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Bar, null, /*#__PURE__*/React.createElement(IconFont, {\n    title: \"\\u7F29\\u5C0F\",\n    onClick: () => setScale(-0.2),\n    type: 'lm-player-ZoomOut_Main'\n  })), /*#__PURE__*/React.createElement(Bar, null, /*#__PURE__*/React.createElement(IconFont, {\n    title: \"\\u590D\\u4F4D\",\n    onClick: () => setScale(1, true),\n    type: 'lm-player-ZoomDefault_Main'\n  })), /*#__PURE__*/React.createElement(Bar, null, /*#__PURE__*/React.createElement(IconFont, {\n    title: \"\\u653E\\u5927\",\n    onClick: () => setScale(0.2),\n    type: 'lm-player-ZoomIn_Main'\n  }))));\n}\n\nfunction ContrallerBar({\n  playContainer,\n  snapshot,\n  rightExtContents,\n  rightMidExtContents,\n  scale,\n  visibel,\n  api,\n  event,\n  video,\n  isHistory,\n  reloadHistory,\n  isLive,\n  leftExtContents,\n  leftMidExtContents\n}) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: `contraller-bar-layout ${!visibel ? 'hide-contraller-bar' : ''}`\n  }, /*#__PURE__*/React.createElement(LeftBar, {\n    api: api,\n    event: event,\n    video: video,\n    isHistory: isHistory,\n    reloadHistory: reloadHistory,\n    isLive: isLive,\n    leftMidExtContents: leftMidExtContents,\n    leftExtContents: leftExtContents\n  }), /*#__PURE__*/React.createElement(RightBar, {\n    api: api,\n    event: event,\n    playContainer: playContainer,\n    snapshot: snapshot,\n    rightExtContents: rightExtContents,\n    rightMidExtContents: rightMidExtContents\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: `contraller-scale-layout ${!visibel ? 'hide-contraller-bar' : ''}`\n  }, /*#__PURE__*/React.createElement(ScaleBar, {\n    api: api,\n    playContainer: playContainer,\n    scale: scale\n  })));\n}\n\nContrallerBar.propTypes = {\n  visibel: PropTypes.bool\n};\n\nfunction ContrallerEvent({\n  event,\n  playContainer,\n  children\n}) {\n  const timer = useRef(null);\n  const [visibel, setVisibel] = useState(true);\n  useEffect(() => {\n    const showContraller = () => {\n      setVisibel(true);\n      hideContraller();\n      event.emit(EventName.SHOW_CONTRALLER);\n    };\n\n    const hideContraller = () => {\n      clearTimeout(timer.current);\n      timer.current = setTimeout(() => {\n        setVisibel(false);\n        event.emit(EventName.HIDE_CONTRALLER);\n      }, 3 * 1000);\n    };\n\n    playContainer.addEventListener('mousemove', showContraller, false);\n    playContainer.addEventListener('mouseout', hideContraller, false);\n    return () => {\n      playContainer.removeEventListener('mousemove', showContraller, false);\n      playContainer.removeEventListener('mouseout', hideContraller, false);\n    };\n  }, []);\n  return React.Children.map(children, child => /*#__PURE__*/React.isValidElement(child) ? /*#__PURE__*/React.cloneElement(child, {\n    visibel\n  }) : child);\n}\n\nfunction VideoMessage({\n  event,\n  api\n}) {\n  const [state, setState] = useState({\n    status: null,\n    errorTimer: null,\n    loading: false\n  });\n  const message = useMemo(() => {\n    if (!state.status) {\n      return '';\n    }\n\n    if (state.status === 'fail') {\n      return '视频错误';\n    }\n\n    if (state.status === 'reload') {\n      return `视频加载错误，正在进行重连第${state.errorTimer}次重连`;\n    }\n  }, [state.errorTimer, state.status]);\n  useEffect(() => {\n    const openLoading = () => setState(old => ({ ...old,\n      loading: true\n    }));\n\n    const closeLoading = () => setState(old => ({ ...old,\n      loading: false\n    }));\n\n    const errorReload = timer => setState(() => ({\n      status: 'reload',\n      errorTimer: timer,\n      loading: true\n    }));\n\n    const reloadFail = () => setState(old => ({ ...old,\n      status: 'fail'\n    }));\n\n    const reloadSuccess = () => setState(old => ({ ...old,\n      status: null\n    }));\n\n    const reload = () => setState(old => ({ ...old,\n      status: 'reload'\n    }));\n\n    const playEnd = () => (setState(old => ({ ...old,\n      status: null,\n      loading: false\n    })), api.pause());\n\n    event.addEventListener('loadstart', openLoading);\n    event.addEventListener('waiting', openLoading);\n    event.addEventListener('seeking', openLoading);\n    event.addEventListener('loadeddata', closeLoading);\n    event.addEventListener('canplay', closeLoading);\n    event.on(EventName.ERROR_RELOAD, errorReload);\n    event.on(EventName.RELOAD_FAIL, reloadFail);\n    event.on(EventName.RELOAD_SUCCESS, reloadSuccess);\n    event.on(EventName.RELOAD, reload);\n    event.on(EventName.HISTORY_PLAY_END, playEnd);\n    event.on(EventName.CLEAR_ERROR_TIMER, reloadSuccess);\n    return () => {\n      event.removeEventListener('loadstart', openLoading);\n      event.removeEventListener('waiting', openLoading);\n      event.removeEventListener('seeking', openLoading);\n      event.removeEventListener('loadeddata', closeLoading);\n      event.removeEventListener('canplay', closeLoading);\n      event.off(EventName.ERROR_RELOAD, errorReload);\n      event.off(EventName.RELOAD_FAIL, reloadFail);\n      event.off(EventName.RELOAD_SUCCESS, reloadSuccess);\n      event.off(EventName.RELOAD, reload);\n      event.off(EventName.HISTORY_PLAY_END, playEnd);\n      event.off(EventName.CLEAR_ERROR_TIMER, reloadSuccess);\n    };\n  }, [event]);\n  const {\n    loading,\n    status\n  } = state;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `lm-player-message-mask ${loading || status === 'fail' ? 'lm-player-mask-loading-animation' : ''}`\n  }, /*#__PURE__*/React.createElement(IconFont, {\n    type: status === 'fail' ? 'lm-player-YesorNo_No_Dark' : 'lm-player-Loading',\n    className: `${loading && status !== 'fail' ? 'lm-player-loading-animation' : status === 'fail' ? 'lm-player-loadfail' : ''} lm-player-loading-icon`\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"lm-player-message\"\n  }, message));\n}\n\nconst NoSource = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"lm-player-message-mask lm-player-mask-loading-animation\"\n  }, /*#__PURE__*/React.createElement(IconFont, {\n    style: {\n      fontSize: 80\n    },\n    type: \"lm-player-PlaySource\",\n    title: \"\\u8BF7\\u9009\\u62E9\\u89C6\\u9891\\u6E90\"\n  }));\n};\n\nfunction TineLine({\n  event,\n  api,\n  visibel\n}) {\n  const [state, setState] = useState({\n    duration: 0,\n    currentTime: 0,\n    buffered: 0\n  });\n  useEffect(() => {\n    const getDuration = () => setState(old => ({ ...old,\n      duration: api.getDuration()\n    }));\n\n    const getCurrentTime = () => setState(old => ({ ...old,\n      currentTime: api.getCurrentTime(),\n      buffered: api.getSecondsLoaded()\n    }));\n\n    const getBuffered = () => setState(old => ({ ...old,\n      buffered: api.getSecondsLoaded()\n    }));\n\n    const seekendPlay = () => api.play();\n\n    event.addEventListener('loadedmetadata', getDuration);\n    event.addEventListener('durationchange', getDuration);\n    event.addEventListener('timeupdate', getCurrentTime);\n    event.addEventListener('progress', getBuffered);\n    event.addEventListener('suspend', getBuffered);\n    event.addEventListener('seeked', seekendPlay);\n    return () => {\n      event.removeEventListener('loadedmetadata', getDuration);\n      event.removeEventListener('durationchange', getDuration);\n      event.removeEventListener('timeupdate', getCurrentTime);\n      event.removeEventListener('progress', getBuffered);\n      event.removeEventListener('suspend', getBuffered);\n      event.removeEventListener('seeked', seekendPlay);\n    };\n  }, [event, api]);\n  const {\n    duration,\n    currentTime,\n    buffered\n  } = state;\n  const playPercent = useMemo(() => Math.round(currentTime / duration * 100), [currentTime, duration]);\n  const bufferedPercent = useMemo(() => Math.round(buffered / duration * 100), [buffered, duration]);\n  const changePlayTime = useCallback(percent => {\n    const currentTime = percent * duration;\n    api.pause();\n    api.seekTo(currentTime);\n    setState(old => ({ ...old,\n      currentTime\n    }));\n  }, [duration, api]);\n\n  const renderTimeLineTips = percent => {\n    const currentTime = percent * duration;\n    const time = timeStamp(currentTime);\n    return /*#__PURE__*/React.createElement(\"span\", null, time);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `video-time-line-layout ${!visibel ? 'hide-time-line' : ''}`\n  }, /*#__PURE__*/React.createElement(IconFont, {\n    type: \"lm-player-PrevFast\",\n    onClick: () => api.backWind(),\n    className: \"time-line-action-item\"\n  }), /*#__PURE__*/React.createElement(Slider, {\n    className: \"time-line-box\",\n    currentPercent: playPercent,\n    availablePercent: bufferedPercent,\n    onChange: changePlayTime,\n    renderTips: renderTimeLineTips\n  }), /*#__PURE__*/React.createElement(IconFont, {\n    type: \"lm-player-NextFast_Light\",\n    onClick: () => api.fastForward(),\n    className: \"time-line-action-item\"\n  }));\n}\n\nfunction ErrorEvent({\n  event,\n  api,\n  errorReloadTimer,\n  flv,\n  hls,\n  changePlayIndex,\n  isHistory,\n  playIndex\n}) {\n  const [errorTimer, setErrorTime] = useState(0);\n  const errorInfo = useRef(null);\n  const reloadTimer = useRef(null);\n  useEffect(() => {\n    const errorHandle = (...args) => {\n      if (args[2] && args[2].msg && args[2].msg.includes('Unsupported audio')) {\n        return;\n      }\n\n      console.error(...args);\n      errorInfo.current = args;\n      setErrorTime(errorTimer + 1);\n    };\n\n    const reloadSuccess = () => {\n      if (errorTimer > 0) {\n        console.warn('视频重连成功！');\n        event.emit(EventName.RELOAD_SUCCESS);\n        clearErrorTimer();\n      }\n    };\n\n    const clearErrorTimer = () => setErrorTime(0);\n\n    try {\n      if (flv) {\n        flv.on('error', errorHandle);\n      }\n\n      if (hls) {\n        hls.on('hlsError', errorHandle);\n      }\n    } catch (e) {//\n    }\n\n    if (isHistory) {\n      //历史视频切换播放索引时清除错误次数\n      event.on(EventName.CHANGE_PLAY_INDEX, clearErrorTimer); //历史视频主动清除错误次数\n\n      event.on(EventName.CLEAR_ERROR_TIMER, clearErrorTimer);\n    }\n\n    event.addEventListener('error', errorHandle, false); //获取video状态清除错误状态\n\n    event.addEventListener('canplay', reloadSuccess, false);\n    return () => {\n      try {\n        if (flv) {\n          flv.off('error', errorHandle);\n        }\n\n        if (hls) {\n          hls.off('hlsError', errorHandle);\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n\n      if (isHistory) {\n        event.off(EventName.CHANGE_PLAY_INDEX, clearErrorTimer);\n        event.off(EventName.CLEAR_ERROR_TIMER, clearErrorTimer);\n      }\n\n      event.removeEventListener('error', errorHandle, false);\n      event.removeEventListener('canplay', reloadSuccess, false);\n    };\n  }, [event, flv, hls, errorTimer]);\n  useEffect(() => {\n    if (errorTimer === 0) {\n      return;\n    }\n\n    if (errorTimer > errorReloadTimer) {\n      isHistory ? changePlayIndex(playIndex + 1) : event.emit(EventName.RELOAD_FAIL);\n      api.unload();\n      return;\n    }\n\n    console.warn(`视频播放出错，正在进行重连${errorTimer}`);\n    reloadTimer.current = setTimeout(() => {\n      event.emit(EventName.ERROR_RELOAD, errorTimer, ...errorInfo.current);\n      api.reload(true);\n    }, 2 * 1000);\n    return () => {\n      clearTimeout(reloadTimer.current);\n    };\n  }, [errorTimer, api, event, flv, hls]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n}\n\nclass DragEvent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.openDrag = e => {\n      this.position.start = [e.pageX, e.pageY];\n      this.dragDom.addEventListener('mousemove', this.moveChange);\n      document.body.addEventListener('mouseup', this.stopDrag);\n    };\n\n    this.moveChange = e => {\n      const {\n        api\n      } = this.props;\n      const currentPosition = api.getPosition();\n      this.position.end = [e.pageX, e.pageY];\n      const x = currentPosition[0] + (this.position.end[0] - this.position.start[0]);\n      const y = currentPosition[1] + (this.position.end[1] - this.position.start[1]);\n      const position = [x, y];\n      api.setPosition(position);\n      this.position.start = [e.pageX, e.pageY];\n    };\n\n    this.stopDrag = () => {\n      this.dragDom.removeEventListener('mousemove', this.moveChange);\n      document.body.removeEventListener('mouseup', this.stopDrag);\n      this.transformChange();\n    };\n\n    this.transformChange = () => {\n      const {\n        api\n      } = this.props;\n      let position = computedBound(this.dragDom, api.getPosition(), api.getScale());\n      position && api.setPosition(position, true);\n    };\n\n    const {\n      playContainer\n    } = props;\n    this.dragDom = playContainer.querySelector('.player-mask-layout');\n    this.position = {\n      start: [0, 0],\n      end: [0, 0]\n    };\n  }\n\n  componentDidMount() {\n    this.dragDom.addEventListener('mousedown', this.openDrag);\n    this.props.event.addEventListener('transform', this.transformChange, true);\n  }\n\n  componentWillUnmount() {\n    this.dragDom.removeEventListener('mousedown', this.openDrag);\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nDragEvent.propTypes = {\n  api: PropTypes.object,\n  event: PropTypes.object,\n  playContainer: PropTypes.node,\n  playerProps: PropTypes.object\n};\nlet index = 0;\n\nclass Api {\n  constructor({\n    video,\n    playContainer,\n    event,\n    flv,\n    hls\n  }) {\n    this.player = video;\n    this.playContainer = playContainer;\n    this.flv = flv;\n    this.hls = hls;\n    this.event = event;\n    this.scale = 1;\n    this.position = [0, 0];\n  }\n  /**\r\n   * 播放器销毁后 动态跟新api下的flv，hls对象\r\n   * @param {*} param0\r\n   */\n\n\n  updateChunk({\n    flv,\n    hls\n  }) {\n    this.flv = flv;\n    this.hls = hls;\n  }\n  /**\r\n   * 全屏\r\n   */\n\n\n  requestFullScreen() {\n    if (!isFullscreen(this.playContainer)) {\n      fullscreen(this.playContainer);\n    }\n  }\n  /**\r\n   * 退出全屏\r\n   */\n\n\n  cancelFullScreen() {\n    if (isFullscreen(this.playContainer)) {\n      exitFullscreen();\n    }\n  }\n\n  play() {\n    if (this.player.paused) {\n      this.player.play();\n    }\n  }\n\n  pause() {\n    if (!this.player.paused) {\n      this.player.pause();\n    }\n  }\n\n  destroy() {\n    this.player.removeAttribute('src');\n    this.unload();\n\n    if (this.flv) {\n      index++;\n      this.flv.destroy();\n    }\n\n    if (this.hls) {\n      index++;\n      this.hls.destroy();\n    }\n\n    this.player = null;\n    this.playContainer = null;\n    this.flv = null;\n    this.hls = null;\n    this.event = null;\n    this.scale = null;\n    this.position = null;\n    console.warn('destroy', index);\n  }\n  /**\r\n   * 设置currentTime实现seek\r\n   * @param {*} seconds\r\n   * @param {*} noEmit\r\n   */\n\n\n  seekTo(seconds, noEmit) {\n    const buffered = this.getBufferedTime();\n\n    if (this.flv && buffered[0] > seconds) {\n      this.flv.unload();\n      this.flv.load();\n    }\n\n    console.log(this.player);\n\n    if (this.player) {\n      console.log(this.player.currentTime);\n      this.player.currentTime = seconds;\n\n      if (!noEmit) {\n        this.event.emit(EventName.SEEK, seconds);\n      }\n    }\n  }\n  /**\r\n   * 视频重载\r\n   */\n\n\n  reload(notEmit) {\n    if (this.getCurrentTime !== 0) {\n      this.seekTo(0);\n    }\n\n    if (this.hls) {\n      this.hls.swapAudioCodec();\n      this.hls.recoverMediaError();\n    }\n\n    this.unload();\n    this.load();\n    this.play();\n    !notEmit && this.event.emit(EventName.RELOAD);\n  }\n\n  unload() {\n    this.flv && this.flv.unload();\n    this.hls && this.hls.stopLoad();\n  }\n\n  load() {\n    if (this.flv) {\n      this.flv.load();\n    }\n\n    if (this.hls) {\n      this.hls.startLoad();\n      this.hls.loadSource(this.hls.url);\n    }\n  }\n\n  setVolume(fraction) {\n    this.player.volume = fraction;\n  }\n\n  mute() {\n    this.player.muted = true;\n  }\n\n  unmute() {\n    this.player.muted = false;\n  }\n  /**\r\n   * 开启画中画功能\r\n   */\n\n\n  requestPictureInPicture() {\n    if (this.player.requestPictureInPicture && document.pictureInPictureElement !== this.player) {\n      this.player.requestPictureInPicture();\n    }\n  }\n  /**\r\n   * 关闭画中画功能\r\n   */\n\n\n  exitPictureInPicture() {\n    if (document.exitPictureInPicture && document.pictureInPictureElement === this.player) {\n      document.exitPictureInPicture();\n    }\n  }\n  /**\r\n   * 设置播放速率\r\n   * @param {*} rate\r\n   */\n\n\n  setPlaybackRate(rate) {\n    this.player.playbackRate = rate;\n  }\n  /**\r\n   * 获取视频总时长\r\n   */\n\n\n  getDuration() {\n    if (!this.player) return null;\n    const {\n      duration,\n      seekable\n    } = this.player;\n\n    if (duration === Infinity && seekable.length > 0) {\n      return seekable.end(seekable.length - 1);\n    }\n\n    return duration;\n  }\n  /**\r\n   * 获取当前播放时间\r\n   */\n\n\n  getCurrentTime() {\n    if (!this.player) return null;\n    return this.player.currentTime;\n  }\n  /**\r\n   * 获取缓存时间\r\n   */\n\n\n  getSecondsLoaded() {\n    return this.getBufferedTime()[1];\n  }\n  /**\r\n   * 获取当前视频缓存的起止时间\r\n   */\n\n\n  getBufferedTime() {\n    if (!this.player) return [];\n    const {\n      buffered\n    } = this.player;\n\n    if (buffered.length === 0) {\n      return [0, 0];\n    }\n\n    const end = buffered.end(buffered.length - 1);\n    const start = buffered.start(buffered.length - 1);\n    const duration = this.getDuration();\n\n    if (end > duration) {\n      return duration;\n    }\n\n    return [start, end];\n  }\n  /**\r\n   * 快进通过seekTo方法实现\r\n   * @param {*} second\r\n   */\n\n\n  fastForward(second = 5) {\n    const duration = this.getDuration();\n    const currentTime = this.getCurrentTime();\n    const time = currentTime + second;\n    this.seekTo(time > duration - 1 ? duration - 1 : time);\n  }\n  /**\r\n   * 快退通过seekTo方法实现\r\n   * @param {*} second\r\n   */\n\n\n  backWind(second = 5) {\n    const currentTime = this.getCurrentTime();\n    const time = currentTime - second;\n    this.seekTo(time < 1 ? 1 : time);\n  }\n  /**\r\n   * 视频截屏方法\r\n   */\n\n\n  snapshot() {\n    let canvas = document.createElement('canvas');\n    let ctx = canvas.getContext('2d');\n    canvas.width = this.player.videoWidth;\n    canvas.height = this.player.videoHeight;\n    ctx.drawImage(this.player, 0, 0, canvas.width, canvas.height);\n    setTimeout(() => {\n      canvas.remove();\n      canvas = null;\n      ctx = null;\n    }, 200);\n    return canvas.toDataURL();\n  }\n\n  setScale(num, isRest = false) {\n    let scale = this.scale + num;\n\n    if (isRest) {\n      scale = num;\n    } else {\n      if (scale < 1) {\n        scale = 1;\n      }\n\n      if (scale > 3) {\n        scale = 3;\n      }\n    }\n\n    this.scale = scale;\n    this.player.style.transition = 'transform 0.3s';\n\n    this.__setTransform();\n\n    this.event.emit(EventName.TRANSFORM);\n    setTimeout(() => {\n      this.player.style.transition = 'unset';\n    }, 1000);\n  }\n\n  getScale() {\n    return this.scale;\n  }\n\n  setPosition(position, isAnimate) {\n    this.position = position;\n    this.player.style.transition = isAnimate ? 'transform 0.3s' : 'unset';\n\n    this.__setTransform();\n  }\n\n  getPosition() {\n    return this.position;\n  }\n\n  __setTransform() {\n    this.player.style.transform = `scale(${this.scale}) translate(${this.position[0]}px,${this.position[1]}px)`;\n  }\n\n  getApi() {\n    return {\n      play: this.play.bind(this),\n      reload: this.reload.bind(this),\n      pause: this.pause.bind(this),\n      seekTo: this.seekTo.bind(this),\n      setVolume: this.setVolume.bind(this),\n      mute: this.mute.bind(this),\n      unmute: this.unmute.bind(this),\n      requestPictureInPicture: this.requestPictureInPicture.bind(this),\n      exitPictureInPicture: this.exitPictureInPicture.bind(this),\n      setPlaybackRate: this.setPlaybackRate.bind(this),\n      destroy: this.destroy.bind(this),\n      getDuration: this.getDuration.bind(this),\n      getCurrentTime: this.getCurrentTime.bind(this),\n      getSecondsLoaded: this.getSecondsLoaded.bind(this),\n      getBufferedTime: this.getBufferedTime.bind(this),\n      fastForward: this.fastForward.bind(this),\n      backWind: this.backWind.bind(this),\n      snapshot: this.snapshot.bind(this),\n      requestFullScreen: this.requestFullScreen.bind(this),\n      cancelFullScreen: this.cancelFullScreen.bind(this),\n      __player: this.player,\n      flv: this.flv,\n      hls: this.hls\n    };\n  }\n\n}\n\nfunction getHiddenProp() {\n  const prefixes = [\"webkit\", \"moz\", \"ms\", \"o\"]; // 如果hidden 属性是原生支持的，我们就直接返回\n\n  if (\"hidden\" in document) {\n    return \"hidden\";\n  } // 其他的情况就循环现有的浏览器前缀，拼接我们所需要的属性\n\n\n  for (let i = 0; i < prefixes.length; i++) {\n    // 如果当前的拼接的前缀在 document对象中存在 返回即可\n    if (prefixes[i] + \"Hidden\" in document) {\n      return prefixes[i] + \"Hidden\";\n    }\n  } // 其他的情况 直接返回null\n\n\n  return null;\n}\n\nfunction getVisibilityState() {\n  const prefixes = [\"webkit\", \"moz\", \"ms\", \"o\"];\n\n  if (\"visibilityState\" in document) {\n    return \"visibilityState\";\n  }\n\n  for (let i = 0; i < prefixes.length; i++) {\n    if (prefixes[i] + \"VisibilityState\" in document) {\n      return prefixes[i] + \"VisibilityState\";\n    }\n  } // 找不到返回 null\n\n\n  return null;\n}\n\nfunction visibilityState() {\n  return document[getVisibilityState()];\n}\n\nfunction addEventListener(listener) {\n  const visProp = getHiddenProp();\n  const evtname = visProp.replace(/[H|h]idden/, \"\") + \"visibilitychange\";\n  document.addEventListener(evtname, listener, false);\n}\n\nfunction removeEventListener(listener) {\n  const visProp = getHiddenProp();\n  const evtname = visProp.replace(/[H|h]idden/, \"\") + \"visibilitychange\";\n  document.removeEventListener(evtname, listener, false);\n}\n\nvar BrowserTab = {\n  addEventListener,\n  removeEventListener,\n  visibilityState\n};\n\nfunction LiveHeart({\n  api\n}) {\n  useEffect(() => {\n    const browserTabChange = function () {\n      if (BrowserTab.visibilityState() === 'visible') {\n        const current = api.getCurrentTime();\n        const buffered = api.getSecondsLoaded();\n\n        if (buffered - current > 5) {\n          console.warn(`当前延时过大current->${current} buffered->${buffered}, 基于视频当前缓存时间更新当前播放时间 updateTime -> ${buffered - 2}`);\n          api.seekTo(buffered - 2 > 0 ? buffered - 2 : 0);\n        }\n      }\n    };\n\n    BrowserTab.addEventListener(browserTabChange);\n    return () => {\n      BrowserTab.removeEventListener(browserTabChange);\n    };\n  }, [api]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n}\n\nfunction SinglePlayer({\n  type,\n  file,\n  className,\n  autoPlay,\n  muted,\n  poster,\n  playsinline,\n  loop,\n  preload,\n  children,\n  onInitPlayer,\n  ...props\n}) {\n  const playContainerRef = useRef(null);\n  const [playerObj, setPlayerObj] = useState(null);\n  const playerRef = useRef(null);\n  useEffect(() => () => {\n    if (playerRef.current && playerRef.current.event) {\n      playerRef.current.event.destroy();\n    }\n\n    if (playerRef.current && playerRef.current.api) {\n      playerRef.current.api.destroy();\n    }\n\n    playerRef.current = null;\n  }, [file]);\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    const playerObject = {\n      playContainer: playContainerRef.current,\n      video: playContainerRef.current.querySelector('video')\n    };\n    let isInit = false;\n    const formartType = getVideoType(file);\n\n    if (formartType === 'flv' || type === 'flv') {\n      isInit = true;\n      playerObject.flv = createFlvPlayer(playerObject.video, { ...props,\n        file\n      });\n    }\n\n    if (formartType === 'm3u8' || type === 'hls') {\n      isInit = true;\n      playerObject.hls = createHlsPlayer(playerObject.video, file);\n    }\n\n    if (!isInit && (!['flv', 'm3u8'].includes(formartType) || type === 'native')) {\n      playerObject.video.src = file;\n    }\n\n    if (playerObject.event) {\n      playerObject.event.destroy();\n    }\n\n    playerObject.event = new VideoEventInstance(playerObject.video);\n\n    if (playerObject.api) {\n      playerObject.api.destroy();\n    }\n\n    playerObject.api = new Api(playerObject);\n    playerRef.current = playerObject;\n    setPlayerObj(() => playerObject);\n\n    if (onInitPlayer) {\n      onInitPlayer(Object.assign({}, playerObject.api.getApi(), playerObject.event.getApi()));\n    }\n  }, [file]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `lm-player-container ${className}`,\n    ref: playContainerRef\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"player-mask-layout\"\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    autoPlay: autoPlay,\n    preload: preload,\n    muted: muted,\n    poster: poster,\n    controls: false,\n    playsInline: playsinline,\n    loop: loop\n  })), /*#__PURE__*/React.createElement(VideoTools, {\n    playerObj: playerObj,\n    isLive: props.isLive,\n    key: file,\n    hideContrallerBar: props.hideContrallerBar,\n    errorReloadTimer: props.errorReloadTimer,\n    scale: props.scale,\n    snapshot: props.snapshot,\n    leftExtContents: props.leftExtContents,\n    leftMidExtContents: props.leftMidExtContents,\n    rightExtContents: props.rightExtContents,\n    rightMidExtContents: props.rightMidExtContents,\n    draggable: props.draggable\n  }), children);\n}\n\nfunction VideoTools({\n  playerObj,\n  draggable,\n  isLive,\n  hideContrallerBar,\n  scale,\n  snapshot,\n  leftExtContents,\n  leftMidExtContents,\n  rightExtContents,\n  rightMidExtContents,\n  errorReloadTimer\n}) {\n  if (!playerObj) {\n    return /*#__PURE__*/React.createElement(NoSource, null);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(VideoMessage, {\n    api: playerObj.api,\n    event: playerObj.event\n  }), draggable && /*#__PURE__*/React.createElement(DragEvent, {\n    playContainer: playerObj.playContainer,\n    api: playerObj.api,\n    event: playerObj.event\n  }), !hideContrallerBar && /*#__PURE__*/React.createElement(ContrallerEvent, {\n    event: playerObj.event,\n    playContainer: playerObj.playContainer\n  }, /*#__PURE__*/React.createElement(ContrallerBar, {\n    api: playerObj.api,\n    event: playerObj.event,\n    playContainer: playerObj.playContainer,\n    video: playerObj.video,\n    snapshot: snapshot,\n    rightExtContents: rightExtContents,\n    rightMidExtContents: rightMidExtContents,\n    scale: scale,\n    isHistory: false,\n    isLive: isLive,\n    leftExtContents: leftExtContents,\n    leftMidExtContents: leftMidExtContents\n  }), !isLive && /*#__PURE__*/React.createElement(TineLine, {\n    api: playerObj.api,\n    event: playerObj.event\n  })), /*#__PURE__*/React.createElement(ErrorEvent, {\n    flv: playerObj.flv,\n    hls: playerObj.hls,\n    api: playerObj.api,\n    event: playerObj.event,\n    errorReloadTimer: errorReloadTimer\n  }), isLive && /*#__PURE__*/React.createElement(LiveHeart, {\n    api: playerObj.api\n  }));\n}\n\nSinglePlayer.propTypes = {\n  file: PropTypes.string.isRequired,\n  //播放地址 必填\n  isLive: PropTypes.bool,\n  //是否实时视频\n  errorReloadTimer: PropTypes.number,\n  //视频错误重连次数\n  type: PropTypes.oneOf(['flv', 'hls', 'native']),\n  //强制视频流类型\n  onInitPlayer: PropTypes.func,\n  draggable: PropTypes.bool,\n  hideContrallerBar: PropTypes.bool,\n  scale: PropTypes.bool,\n  muted: PropTypes.string,\n  autoPlay: PropTypes.bool,\n  playsInline: PropTypes.bool,\n  preload: PropTypes.string,\n  poster: PropTypes.string,\n  loop: PropTypes.bool,\n  snapshot: PropTypes.func,\n  className: PropTypes.string,\n  rightExtContents: PropTypes.element,\n  rightMidExtContents: PropTypes.element,\n  leftExtContents: PropTypes.element,\n  leftMidExtContents: PropTypes.element,\n  flvOptions: PropTypes.object,\n  flvConfig: PropTypes.object,\n  children: PropTypes.element\n};\nSinglePlayer.defaultProps = {\n  isLive: true,\n  draggable: true,\n  scale: true,\n  errorReloadTimer: 5,\n  muted: 'muted',\n  autoPlay: true,\n  playsInline: false,\n  preload: 'auto',\n  loop: false,\n  hideContrallerBar: false\n};\n\nconst computedIndexFormTime = (historyList, time) => {\n  let index = 0;\n\n  try {\n    index = historyList.fragments.findIndex(v => v.end > time);\n  } catch (e) {\n    console.error('historyList data error', historyList);\n  }\n\n  return index;\n};\n\nconst computedTimeAndIndex = (historyList, currentTime) => {\n  const index = computedIndexFormTime(historyList, currentTime);\n  let seekTime = 0;\n\n  try {\n    const fragment = historyList.fragments[index];\n\n    if (!fragment) {\n      return [0, 0];\n    }\n\n    seekTime = currentTime - fragment.begin - 1;\n  } catch (e) {\n    console.error('historyList data error', historyList);\n  }\n\n  return [index, seekTime];\n};\n\nconst computedLineList = historyList => {\n  const duration = historyList.duration;\n  return historyList.fragments.map(v => {\n    return {\n      disabled: !v.file,\n      size: (v.end - v.begin) / duration * 100\n    };\n  });\n};\n\nfunction TineLine$1({\n  event,\n  api,\n  visibel,\n  historyList,\n  playIndex,\n  seekTo,\n  defaultTime\n}) {\n  const [state, setState] = useState({\n    duration: 1,\n    currentTime: defaultTime,\n    buffered: 0,\n    isEnd: false\n  });\n  useEffect(() => setState(old => ({ ...old,\n    currentTime: defaultTime\n  })), [defaultTime]);\n  useEffect(() => {\n    const getDuration = () => setState(old => ({ ...old,\n      duration: api.getDuration()\n    }));\n\n    const getCurrentTime = () => setState(old => ({ ...old,\n      currentTime: api.getCurrentTime(),\n      buffered: api.getSecondsLoaded()\n    }));\n\n    const getBuffered = () => setState(old => ({ ...old,\n      buffered: api.getSecondsLoaded()\n    }));\n\n    const historyPlayEnd = () => setState(old => ({ ...old,\n      isEnd: true\n    }));\n\n    const reload = () => setState(old => ({ ...old,\n      isEnd: false,\n      currentTime: api.getCurrentTime()\n    }));\n\n    const seekendPlay = () => api.play();\n\n    event.addEventListener('loadedmetadata', getDuration);\n    event.addEventListener('durationchange', getDuration);\n    event.addEventListener('timeupdate', getCurrentTime);\n    event.addEventListener('progress', getBuffered);\n    event.addEventListener('suspend', getBuffered);\n    event.addEventListener('seeked', seekendPlay);\n    event.on(EventName.HISTORY_PLAY_END, historyPlayEnd);\n    event.on(EventName.RELOAD, reload);\n    return () => {\n      event.removeEventListener('loadedmetadata', getDuration);\n      event.removeEventListener('durationchange', getDuration);\n      event.removeEventListener('timeupdate', getCurrentTime);\n      event.removeEventListener('progress', getBuffered);\n      event.removeEventListener('suspend', getBuffered);\n      event.removeEventListener('seeked', seekendPlay);\n      event.off(EventName.HISTORY_PLAY_END, historyPlayEnd);\n      event.off(EventName.RELOAD, reload);\n    };\n  }, [event, api]);\n  const changePlayTime = useCallback(percent => {\n    const currentTime = percent * historyList.duration; //修正一下误差\n\n    const [index, time] = computedTimeAndIndex(historyList, currentTime);\n    console.log(index, time);\n    seekTo(currentTime, index);\n    setState(old => ({ ...old,\n      currentTime: time,\n      isEnd: false\n    }));\n  }, [historyList]);\n\n  const renderTimeLineTips = percent => {\n    const currentTime = percent * historyList.duration * 1000;\n    const date = dateFormat(historyList.beginDate + currentTime);\n    return /*#__PURE__*/React.createElement(\"span\", null, date);\n  };\n\n  const {\n    currentTime,\n    buffered,\n    isEnd\n  } = state;\n  const lineList = useMemo(() => computedLineList(historyList), [historyList]);\n  const currentLine = useMemo(() => lineList.filter((_, i) => i < playIndex).map(v => v.size), [playIndex, lineList]);\n  const currentIndexTime = useMemo(() => currentLine.length === 0 ? 0 : currentLine.length > 1 ? currentLine.reduce((p, c) => p + c) : currentLine[0], [currentLine]);\n  const playPercent = useMemo(() => currentTime / historyList.duration * 100 + currentIndexTime, [currentIndexTime, historyList, currentTime]);\n  const bufferedPercent = useMemo(() => buffered / historyList.duration * 100 + currentIndexTime, [historyList, currentIndexTime, buffered]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `video-time-line-layout ${!visibel ? 'hide-time-line' : ''}`\n  }, /*#__PURE__*/React.createElement(IconFont, {\n    type: \"lm-player-PrevFast\",\n    onClick: () => api.backWind(),\n    className: \"time-line-action-item\"\n  }), /*#__PURE__*/React.createElement(Slider, {\n    className: \"time-line-box\",\n    currentPercent: isEnd ? '100' : playPercent,\n    availablePercent: bufferedPercent,\n    onChange: changePlayTime,\n    renderTips: renderTimeLineTips\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, lineList.map((v, i) => {\n    const currentSizeLine = lineList.filter((v, i2) => i2 < i).map(v => v.size);\n    const currentIndexSize = currentSizeLine.length === 0 ? 0 : currentSizeLine.length > 1 ? currentSizeLine.reduce((p, c) => p + c) : currentSizeLine[0];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: `history-time-line-item ${v.disabled ? 'history-time-line-disabled' : ''}`,\n      key: i,\n      style: {\n        width: `${v.size}%`,\n        left: `${currentIndexSize}%`\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(IconFont, {\n    type: \"lm-player-NextFast_Light\",\n    onClick: () => api.fastForward(),\n    className: \"time-line-action-item\"\n  }));\n}\n\nTineLine$1.propTypes = {\n  event: PropTypes.object,\n  api: PropTypes.object,\n  changePlayIndex: PropTypes.func,\n  playIndex: PropTypes.number,\n  historyList: PropTypes.array,\n  seekTo: PropTypes.func,\n  visibel: PropTypes.bool\n};\n/**\r\n * history下使用 用户切换下个播放地址\r\n */\n\nfunction PlayEnd({\n  event,\n  changePlayIndex,\n  playIndex\n}) {\n  useEffect(() => {\n    const endedHandle = () => changePlayIndex(playIndex + 1);\n\n    event.addEventListener('ended', endedHandle, false);\n    return () => {\n      event.removeEventListener('ended', endedHandle, false);\n    };\n  }, [event, playIndex, changePlayIndex]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null);\n}\n\nPlayEnd.propTypes = {\n  event: PropTypes.object,\n  changePlayIndex: PropTypes.func,\n  playIndex: PropTypes.number\n};\n\nfunction HistoryPlayer({\n  type,\n  historyList,\n  defaultTime,\n  className,\n  autoPlay,\n  muted,\n  poster,\n  playsinline,\n  loop,\n  preload,\n  children,\n  onInitPlayer,\n  ...props\n}) {\n  const playContainerRef = useRef(null);\n  const [playerObj, setPlayerObj] = useState(null);\n  const playerRef = useRef(null);\n  const [playStatus, setPlayStatus] = useState(() => computedTimeAndIndex(historyList, defaultTime));\n  const playIndex = useMemo(() => playStatus[0], [playStatus]);\n  const defaultSeekTime = useMemo(() => playStatus[1], [playStatus]);\n  const file = useMemo(() => {\n    let url;\n\n    try {\n      url = historyList.fragments[playIndex].file;\n    } catch (e) {\n      console.warn('未找打播放地址！', historyList);\n    }\n\n    return url;\n  }, [historyList, playIndex]);\n  /**\r\n   * 重写api下的seekTo方法\r\n   */\n\n  const seekTo = useCallback(currentTime => {\n    const [index, seekTime] = computedTimeAndIndex(historyList, currentTime);\n\n    if (playerRef.current.event && playerRef.current.api) {\n      //判断是否需要更新索引\n      setPlayStatus(old => {\n        if (old[0] !== index) {\n          return [index, seekTime];\n        } else {\n          playerRef.current.api.seekTo(seekTime, true);\n          return old;\n        }\n      });\n    }\n  }, [playIndex, historyList]);\n  const changePlayIndex = useCallback(index => {\n    if (index > historyList.fragments.length - 1) {\n      return playerRef.current && playerRef.current.event && playerRef.current.event.emit(EventName.HISTORY_PLAY_END);\n    }\n\n    if (!historyList.fragments[index].file) {\n      return changePlayIndex(index + 1);\n    }\n\n    if (playerRef.current && playerRef.current.event) {\n      playerRef.current.event.emit(EventName.CHANGE_PLAY_INDEX, index);\n    }\n\n    setPlayStatus([index, 0]);\n  }, [historyList]);\n  const reloadHistory = useCallback(() => {\n    if (playStatus[0] === 0) {\n      playerRef.current.api.seekTo(defaultSeekTime);\n    }\n\n    setPlayStatus([0, 0]);\n    playerRef.current.event.emit(EventName.RELOAD);\n  }, []);\n  useEffect(() => {\n    if (!file) {\n      changePlayIndex(playIndex + 1);\n    }\n  }, [file, playIndex, historyList]);\n  useEffect(() => () => {\n    if (playerRef.current && playerRef.current.event) {\n      playerRef.current.event.destroy();\n    }\n\n    if (playerRef.current && playerRef.current.api) {\n      playerRef.current.api.destroy();\n    }\n\n    playerRef.current = null;\n  }, [file]);\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    const playerObject = {\n      playContainer: playContainerRef.current,\n      video: playContainerRef.current.querySelector('video')\n    };\n    let isInit = false;\n    const formartType = getVideoType(file);\n\n    if (formartType === 'flv' || type === 'flv') {\n      isInit = true;\n      playerObject.flv = createFlvPlayer(playerObject.video, { ...props,\n        file\n      });\n    }\n\n    if (formartType === 'm3u8' || type === 'hls') {\n      isInit = true;\n      playerObject.hls = createHlsPlayer(playerObject.video, file);\n    }\n\n    if (!isInit && (!['flv', 'm3u8'].includes(formartType) || type === 'native')) {\n      playerObject.video.src = file;\n    }\n\n    if (playerObject.event) {\n      playerObject.event.destroy();\n    }\n\n    playerObject.event = new VideoEventInstance(playerObject.video);\n\n    if (playerObject.api) {\n      playerObject.api.destroy();\n    }\n\n    playerObject.api = new Api(playerObject);\n    playerRef.current = playerObject;\n    setPlayerObj(playerObject);\n\n    if (defaultSeekTime) {\n      playerObject.api.seekTo(defaultSeekTime);\n    }\n\n    if (onInitPlayer) {\n      onInitPlayer(Object.assign({}, playerObject.api.getApi(), playerObject.event.getApi(), {\n        seekTo,\n        changePlayIndex,\n        reload: reloadHistory\n      }));\n    }\n  }, [historyList, file]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: `lm-player-container ${className}`,\n    ref: playContainerRef\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"player-mask-layout\"\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    autoPlay: autoPlay,\n    preload: preload,\n    muted: muted,\n    poster: poster,\n    controls: false,\n    playsInline: playsinline,\n    loop: loop\n  })), /*#__PURE__*/React.createElement(VideoTools$1, {\n    defaultTime: defaultSeekTime,\n    playerObj: playerObj,\n    isLive: props.isLive,\n    hideContrallerBar: props.hideContrallerBar,\n    errorReloadTimer: props.errorReloadTimer,\n    scale: props.scale,\n    snapshot: props.snapshot,\n    leftExtContents: props.leftExtContents,\n    leftMidExtContents: props.leftMidExtContents,\n    rightExtContents: props.rightExtContents,\n    rightMidExtContents: props.rightMidExtContents,\n    draggable: props.draggable,\n    changePlayIndex: changePlayIndex,\n    reloadHistory: reloadHistory,\n    historyList: historyList,\n    playIndex: playIndex,\n    seekTo: seekTo,\n    key: file\n  }), children);\n}\n\nfunction VideoTools$1({\n  playerObj,\n  draggable,\n  isLive,\n  hideContrallerBar,\n  scale,\n  snapshot,\n  leftExtContents,\n  leftMidExtContents,\n  rightExtContents,\n  rightMidExtContents,\n  errorReloadTimer,\n  changePlayIndex,\n  reloadHistory,\n  historyList,\n  seekTo,\n  playIndex,\n  defaultTime\n}) {\n  if (!playerObj) {\n    return /*#__PURE__*/React.createElement(NoSource, null);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(VideoMessage, {\n    api: playerObj.api,\n    event: playerObj.event\n  }), draggable && /*#__PURE__*/React.createElement(DragEvent, {\n    playContainer: playerObj.playContainer,\n    api: playerObj.api,\n    event: playerObj.event\n  }), !hideContrallerBar && /*#__PURE__*/React.createElement(ContrallerEvent, {\n    event: playerObj.event,\n    playContainer: playerObj.playContainer\n  }, /*#__PURE__*/React.createElement(ContrallerBar, {\n    api: playerObj.api,\n    event: playerObj.event,\n    playContainer: playerObj.playContainer,\n    video: playerObj.video,\n    snapshot: snapshot,\n    rightExtContents: rightExtContents,\n    rightMidExtContents: rightMidExtContents,\n    scale: scale,\n    isHistory: true,\n    isLive: isLive,\n    leftExtContents: leftExtContents,\n    leftMidExtContents: leftMidExtContents,\n    reloadHistory: reloadHistory\n  }), /*#__PURE__*/React.createElement(TineLine$1, {\n    defaultTime: defaultTime,\n    changePlayIndex: changePlayIndex,\n    historyList: historyList,\n    playIndex: playIndex,\n    seekTo: seekTo,\n    api: playerObj.api,\n    event: playerObj.event\n  })), /*#__PURE__*/React.createElement(ErrorEvent, {\n    changePlayIndex: changePlayIndex,\n    playIndex: playIndex,\n    isHistory: true,\n    flv: playerObj.flv,\n    hls: playerObj.hls,\n    api: playerObj.api,\n    event: playerObj.event,\n    errorReloadTimer: errorReloadTimer\n  }), /*#__PURE__*/React.createElement(PlayEnd, {\n    event: playerObj.event,\n    changePlayIndex: changePlayIndex,\n    playIndex: playIndex\n  }));\n}\n\nHistoryPlayer.propTypes = {\n  historyList: PropTypes.object.isRequired,\n  //播放地址 必填\n  errorReloadTimer: PropTypes.number,\n  //视频错误重连次数\n  type: PropTypes.oneOf(['flv', 'hls', 'native']),\n  //强制视频流类型\n  onInitPlayer: PropTypes.func,\n  isDraggable: PropTypes.bool,\n  isScale: PropTypes.bool,\n  muted: PropTypes.string,\n  autoPlay: PropTypes.bool,\n  playsInline: PropTypes.bool,\n  preload: PropTypes.string,\n  poster: PropTypes.string,\n  loop: PropTypes.bool,\n  defaultTime: PropTypes.number,\n  className: PropTypes.string,\n  playsinline: PropTypes.bool,\n  children: PropTypes.any,\n  autoplay: PropTypes.bool,\n  rightExtContents: PropTypes.element,\n  rightMidExtContents: PropTypes.element,\n  leftExtContents: PropTypes.element,\n  leftMidExtContents: PropTypes.element,\n  flvOptions: PropTypes.object,\n  flvConfig: PropTypes.object\n};\nHistoryPlayer.defaultProps = {\n  draggable: true,\n  scale: true,\n  errorReloadTimer: 5,\n  muted: 'muted',\n  autoPlay: true,\n  playsInline: false,\n  preload: 'auto',\n  loop: false,\n  defaultTime: 0,\n  historyList: {\n    beginDate: 0,\n    duration: 0,\n    fragments: []\n  }\n};\n\nfunction createPlayer({\n  container,\n  children,\n  onInitPlayer,\n  ...props\n}) {\n  ReactDOM.render( /*#__PURE__*/React.createElement(SinglePlayer, _extends({}, props, {\n    onInitPlayer: player => {\n      player.destroy = function () {\n        ReactDOM.unmountComponentAtNode(container);\n      };\n\n      onInitPlayer && onInitPlayer(player);\n    }\n  }), children), container);\n}\n\nfunction createHistoryPlayer({\n  container,\n  children,\n  onInitPlayer,\n  ...props\n}) {\n  ReactDOM.render( /*#__PURE__*/React.createElement(HistoryPlayer, _extends({}, props, {\n    onInitPlayer: player => {\n      player.destroy = function () {\n        ReactDOM.unmountComponentAtNode(container);\n      };\n\n      onInitPlayer && onInitPlayer(player);\n    }\n  }), children), container);\n}\n\nexport default SinglePlayer;\nexport { Bar, EventName, HistoryPlayer, SinglePlayer as Player, createHistoryPlayer, createPlayer };","map":{"version":3,"sources":["../src/event/index.js","../src/util.js","../src/iconfont.js","../src/slider.js","../src/contraller_bar/bar.js","../src/event/eventName.js","../src/contraller_bar/left_bar.js","../src/contraller_bar/right_bar.js","../src/contraller_bar/scale_bar.js","../src/contraller_bar/index.js","../src/event/contrallerEvent.js","../src/message.js","../src/time_line.js","../src/event/errorEvent.js","../src/event/dragEvent.js","../src/api.js","../src/event/browserTabEvent.js","../src/live_heart.js","../src/player.js","../src/history/utils.js","../src/history/time_line_history.js","../src/history/play_end.js","../src/history/index.js","../src/createPlayer.js"],"names":["constructor","on","type","listener","addEventListener","removeEventListener","index","v","emit","off","getApi","destroy","Object","key","fn","Hls","player","liveDurationInfinity","levelLoadingTimeOut","fragLoadingTimeOut","enableWorker","flvOptions","flvConfig","flvjs","url","options","file","enableStashBuffer","stashInitialSize","isLive","time","Math","second","second_time","min","hour","date","YYYY","DD","MM","hh","mm","ss","element","document","funcName","isAdd","fullScreenEvents","data","eleRect","ele","w","h","lx","ly","scale","x","y","className","props","IconFont","PropTypes","string","React","value","tempValue","showTips","tipsX","tipsY","UNSAFE_componentWillReceiveProps","nextProps","componentDidMount","componentWillUnmount","clearTimeout","e","renderTips","setTimeout","top","percent","computedPositionForEvent","width","pageX","dx","event","render","availablePercent","sliderDomRef","left","current","Slider","currentPercent","seekTo","video","onChange","children","number","useRef","useEffect","box","getContainer","style","Tips","visibel","Bar","any","RELOAD","RELOAD_FAIL","RELOAD_SUCCESS","ERROR","ERROR_RELOAD","HISTORY_PLAY_END","SEEK","TRANSFORM","CHANGE_PLAY_INDEX","HIDE_CONTRALLER","SHOW_CONTRALLER","CLEAR_ERROR_TIMER","leftMidExtContents","useState","Date","updateRender","setDep","paused","useMemo","statusIconClassName","statusText","volumeVal","volumeIcon","volumePercent","sliderClassName","openSliderVolume","changePlayStatus","useCallback","api","mutedChantgeStatus","onChangeVolume","volume","parseFloat","reload","isHistory","reloadHistory","EventName","setOpenSliderVolume","precent","LeftBar","playerProps","bool","rightMidExtContents","update","fullScreenListener","isfull","isFullscreen","fullscreen","setScale","dragDom","playContainer","position","computedBound","snapshot","RightBar","leftExtContents","ContrallerBar","timer","showContraller","setVisibel","hideContraller","child","status","errorTimer","loading","message","state","openLoading","setState","old","closeLoading","errorReload","reloadFail","reloadSuccess","playEnd","NoSource","fontSize","duration","currentTime","buffered","getDuration","getCurrentTime","getBuffered","seekendPlay","playPercent","bufferedPercent","changePlayTime","renderTimeLineTips","timeStamp","playIndex","errorInfo","reloadTimer","errorHandle","args","console","setErrorTime","clearErrorTimer","flv","hls","changePlayIndex","start","end","currentPosition","DragEvent","object","updateChunk","requestFullScreen","cancelFullScreen","exitFullscreen","play","pause","unload","load","setVolume","mute","unmute","requestPictureInPicture","exitPictureInPicture","setPlaybackRate","seekable","getSecondsLoaded","getBufferedTime","fastForward","backWind","canvas","ctx","isRest","getScale","setPosition","isAnimate","getPosition","__setTransform","__player","prefixes","i","getVisibilityState","visProp","getHiddenProp","evtname","visibilityState","browserTabChange","BrowserTab","playContainerRef","playerRef","playerObject","isInit","formartType","getVideoType","createFlvPlayer","createHlsPlayer","setPlayerObj","onInitPlayer","loop","draggable","errorReloadTimer","playerObj","SinglePlayer","hideContrallerBar","muted","autoPlay","playsInline","preload","poster","rightExtContents","computedIndexFormTime","historyList","computedTimeAndIndex","seekTime","fragment","computedLineList","disabled","size","defaultTime","isEnd","historyPlayEnd","dateFormat","lineList","currentLine","currentIndexTime","p","currentSizeLine","i2","currentIndexSize","TineLine","endedHandle","PlayEnd","playStatus","defaultSeekTime","setPlayStatus","HistoryPlayer","isDraggable","isScale","playsinline","autoplay","beginDate","fragments","ReactDOM"],"mappings":"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","sourcesContent":["class VideoEventInstance {\r\n  constructor(video) {\r\n    this.video = video\r\n    this.events = {}\r\n    this.playerEvents = {}\r\n  }\r\n  on(eventName, handle) {\r\n    this.events && this.events[eventName]\r\n      ? this.events[eventName].listener.push(handle)\r\n      : (this.events[eventName] = { type: eventName, listener: [handle] })\r\n  }\r\n  addEventListener(eventName, handle) {\r\n    if (this.video) {\r\n      this.playerEvents[eventName] ? this.playerEvents[eventName].push(handle) : (this.playerEvents[eventName] = [handle])\r\n      this.video.addEventListener(eventName, handle, false)\r\n    }\r\n  }\r\n  removeEventListener(eventName, handle) {\r\n    if (this.video) {\r\n      if (!this.playerEvents || !this.playerEvents[eventName]) {\r\n        return\r\n      }\r\n      let index = this.playerEvents[eventName].findIndex(v => v === handle)\r\n      index > -1 && this.playerEvents[eventName].splice(index, 1)\r\n      this.video.removeEventListener(eventName, handle, false)\r\n    }\r\n  }\r\n  emit(eventName, ...data) {\r\n    if (!this.events || !this.events[eventName]) {\r\n      return\r\n    }\r\n    this.events[eventName].listener.forEach(v => {\r\n      v(...data)\r\n    })\r\n  }\r\n  off(eventName, handle) {\r\n    if (!this.events || !this.events.eventName) {\r\n      return\r\n    }\r\n    let index = this.events[eventName].listener.findIndex(v => v === handle)\r\n    index > -1 && this.events[eventName].listener.splice(index, 1)\r\n  }\r\n  getApi() {\r\n    return { on: this.on.bind(this), off: this.off.bind(this), emit: this.emit.bind(this), addEventListener: this.addEventListener.bind(this), removeEventListener: this.removeEventListener.bind(this) }\r\n  }\r\n  destroy() {\r\n    Object.keys(this.playerEvents).forEach(key => {\r\n      this.playerEvents[key].forEach(fn => {\r\n        this.removeEventListener(key, fn)\r\n      })\r\n    })\r\n    this.playerEvents = {}\r\n    this.events = {}\r\n    this.video = null\r\n  }\r\n}\r\n\r\nexport default VideoEventInstance\r\n","import flvjs from 'flv.zv.js'\r\nimport * as Hls from 'hls.js'\r\n\r\n/**\r\n * 创建HLS对象\r\n * @param {*} video\r\n * @param {*} file\r\n */\r\nexport function createHlsPlayer(video, file) {\r\n  if (Hls.isSupported()) {\r\n    const player = new Hls({\r\n      liveDurationInfinity: true,\r\n      levelLoadingTimeOut: 15000,\r\n      fragLoadingTimeOut: 25000,\r\n      enableWorker: true,\r\n    })\r\n    player.loadSource(file)\r\n    player.attachMedia(video)\r\n    return player\r\n  }\r\n}\r\n\r\n/**\r\n * 创建FLV对象\r\n * @param {*} video\r\n * @param {*} options\r\n */\r\nexport function createFlvPlayer(video, options) {\r\n  const { flvOptions = {}, flvConfig = {} } = options\r\n  if (flvjs.isSupported()) {\r\n    const player = flvjs.createPlayer(\r\n      Object.assign(\r\n        {},\r\n        {\r\n          type: 'flv',\r\n          url: options.file,\r\n        },\r\n        flvOptions\r\n      ),\r\n      Object.assign(\r\n        {},\r\n        {\r\n          enableWorker: true,\r\n          // lazyLoad: false,\r\n          // Indicates how many seconds of data to be kept for lazyLoad.\r\n          // lazyLoadMaxDuration: 0,\r\n          // autoCleanupMaxBackwardDuration: 3,\r\n          // autoCleanupMinBackwardDuration: 2,\r\n          // autoCleanupSourceBuffer: true,\r\n          enableStashBuffer: false,\r\n          stashInitialSize: 128,\r\n          isLive: options.isLive || true,\r\n        },\r\n        flvConfig\r\n      )\r\n    )\r\n    player.attachMediaElement(video)\r\n    player.load()\r\n    return player\r\n  }\r\n}\r\n\r\n/**\r\n * 获取播放文件类型\r\n * @param {*} url\r\n */\r\nexport function getVideoType(url) {\r\n  return url.indexOf('.flv') > -1 ? 'flv' : url.indexOf('.m3u8') > -1 ? 'm3u8' : 'native'\r\n}\r\n\r\n/**\r\n * 播放时间转字符串\r\n * @param {*} second_time\r\n */\r\nexport function timeStamp(second_time) {\r\n  let time = Math.ceil(second_time)\r\n  if (time > 60) {\r\n    let second = Math.ceil(second_time % 60)\r\n    let min = Math.floor(second_time / 60)\r\n    time = `${min < 10 ? `0${min}` : min}:${second < 10 ? `0${second}` : second}`\r\n    if (min > 60) {\r\n      min = Math.ceil((second_time / 60) % 60)\r\n      let hour = Math.floor(second_time / 60 / 60)\r\n      time = `${hour < 10 ? `0${hour}` : hour}:${min < 10 ? `0${min}` : min}:${second < 10 ? `0${second}` : second}`\r\n    } else {\r\n      time = `00:${time}`\r\n    }\r\n  } else {\r\n    time = `00:00:${time < 10 ? `0${time}` : time}`\r\n  }\r\n\r\n  return time\r\n}\r\n\r\n/**\r\n * 日期格式化\r\n * @param {*} timetemp\r\n */\r\nexport function dateFormat(timetemp) {\r\n  const date = new Date(timetemp)\r\n  let YYYY = date.getFullYear()\r\n  let DD = date.getDate()\r\n  let MM = date.getMonth() + 1\r\n  let hh = date.getHours()\r\n  let mm = date.getMinutes()\r\n  let ss = date.getSeconds()\r\n  return `${YYYY}.${MM > 9 ? MM : '0' + MM}.${DD > 9 ? DD : '0' + DD} ${hh > 9 ? hh : '0' + hh}.${mm > 9 ? mm : '0' + mm}.${ss > 9 ? ss : '0' + ss}`\r\n}\r\n\r\n/**\r\n * 全屏\r\n * @param {*} element\r\n */\r\nexport function fullscreen(element) {\r\n  if (element.requestFullScreen) {\r\n    element.requestFullScreen()\r\n  } else if (element.webkitRequestFullScreen) {\r\n    element.webkitRequestFullScreen()\r\n  } else if (element.mozRequestFullScreen) {\r\n    element.mozRequestFullScreen()\r\n  } else if (element.msRequestFullscreen) {\r\n    element.msRequestFullscreen()\r\n  }\r\n}\r\n\r\n/**\r\n * exitFullscreen 退出全屏\r\n * @param  {Objct} element 选择器\r\n */\r\nexport function exitFullscreen() {\r\n  if (document.exitFullscreen) {\r\n    document.exitFullscreen()\r\n  } else if (document.mozCancelFullScreen) {\r\n    document.mozCancelFullScreen()\r\n  } else if (document.webkitExitFullscreen) {\r\n    document.webkitExitFullscreen()\r\n  } else if (document.msExitFullscreen) {\r\n    document.msExitFullscreen()\r\n  }\r\n}\r\n\r\n/**\r\n * 判读是否支持全屏\r\n */\r\nexport function fullscreenEnabled() {\r\n  return document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled || document.msFullscreenEnabled\r\n}\r\n\r\n/**\r\n * [isFullscreen 判断浏览器是否全屏]\r\n * @return [全屏则返回当前调用全屏的元素,不全屏返回false]\r\n */\r\nexport function isFullscreen(ele) {\r\n  if (!ele) {\r\n    return false\r\n  }\r\n  return document.fullscreenElement === ele || document.msFullscreenElement === ele || document.mozFullScreenElement === ele || document.webkitFullscreenElement === ele || false\r\n}\r\n// 添加 / 移除 全屏事件监听\r\nexport function fullScreenListener(isAdd, fullscreenchange) {\r\n  const funcName = isAdd ? 'addEventListener' : 'removeEventListener'\r\n  const fullScreenEvents = ['fullscreenchange', 'mozfullscreenchange', 'webkitfullscreenchange', 'msfullscreenchange']\r\n  fullScreenEvents.map((v) => document[funcName](v, fullscreenchange))\r\n}\r\n\r\n/**\r\n * 计算视频拖拽边界\r\n * @param {*} ele\r\n * @param {*} currentPosition\r\n * @param {*} scale\r\n */\r\nexport function computedBound(ele, currentPosition, scale) {\r\n  const data = currentPosition\r\n  const eleRect = ele.getBoundingClientRect()\r\n  const w = eleRect.width\r\n  const h = eleRect.height\r\n  let lx = 0,\r\n    ly = 0\r\n  if (scale === 1) {\r\n    return [0, 0]\r\n  }\r\n  lx = (w * (scale - 1)) / 2 / scale\r\n  ly = (h * (scale - 1)) / 2 / scale\r\n  let x = 0,\r\n    y = 0\r\n  if (data[0] >= 0 && data[0] > lx) {\r\n    x = lx\r\n  }\r\n  if (data[0] >= 0 && data[0] < lx) {\r\n    x = data[0]\r\n  }\r\n\r\n  if (data[0] < 0 && data[0] < -lx) {\r\n    x = -lx\r\n  }\r\n  if (data[0] < 0 && data[0] > -lx) {\r\n    x = data[0]\r\n  }\r\n\r\n  if (data[1] >= 0 && data[1] > ly) {\r\n    y = ly\r\n  }\r\n  if (data[1] >= 0 && data[1] < ly) {\r\n    y = data[1]\r\n  }\r\n\r\n  if (data[1] < 0 && data[1] < -ly) {\r\n    y = -ly\r\n  }\r\n  if (data[1] < 0 && data[1] > -ly) {\r\n    y = data[1]\r\n  }\r\n  if (x !== data[0] || y !== data[1]) {\r\n    return [x, y]\r\n  } else {\r\n    return\r\n  }\r\n}\r\n\r\nexport function getRandom() {\r\n  return Math.random().toString(36).substr(2)\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport './style/iconfont.less'\r\n\r\nexport default function IconFont({ type, className = '', ...props }) {\r\n  return <i className={`lm-player-iconfont ${type} ${className}`} {...props} />\r\n}\r\n\r\nIconFont.propTypes = {\r\n  type: PropTypes.string,\r\n  className: PropTypes.string\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport PropTypes from 'prop-types'\r\nimport './style/slider.less'\r\n\r\nclass Slider extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.sliderDomRef = React.createRef()\r\n    this.layoutDom = null\r\n    this.lineDom = null\r\n    this.dragDom = null\r\n    this.dragFlag = false\r\n    this.state = {\r\n      value: this.props.currentPercent || 0,\r\n      tempValue: 0,\r\n      showTips: false,\r\n      tipsX: 0,\r\n      tipsY: 0\r\n    }\r\n  }\r\n  UNSAFE_componentWillReceiveProps(nextProps) {\r\n    if (!this.dragFlag) {\r\n      this.setState({ value: nextProps.currentPercent || 0 })\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.layoutDom = this.sliderDomRef.current\r\n    this.dragDom = this.layoutDom.querySelector('.drag-change-icon')\r\n    this.lineDom = this.layoutDom.querySelector('.slider-content')\r\n\r\n    this.layoutDom.addEventListener('mousemove', this.renderSliderTips, false)\r\n    this.layoutDom.addEventListener('mouseout', this.hideSliderTips, false)\r\n    this.lineDom.addEventListener('click', this.changeCurrentValue, false)\r\n    this.dragDom.addEventListener('click', this.cancelPropagation, false)\r\n    this.dragDom.addEventListener('mousedown', this.startDrag, false)\r\n  }\r\n  componentWillUnmount() {\r\n    clearTimeout(this.timer)\r\n    this.layoutDom.removeEventListener('mousemove', this.renderSliderTips, false)\r\n    this.layoutDom.removeEventListener('mouseout', this.hideSliderTips, false)\r\n    this.lineDom.removeEventListener('click', this.changeCurrentValue, false)\r\n    this.dragDom.removeEventListener('click', this.cancelPropagation, false)\r\n    this.dragDom.removeEventListener('mousedown', this.startDrag, false)\r\n\r\n    document.body.removeEventListener('mousemove', this.moveChange)\r\n    document.body.removeEventListener('mouseup', this.stopDrag)\r\n\r\n    this.sliderDomRef = null\r\n    this.layoutDom = null\r\n    this.lineDom = null\r\n    this.dragDom = null\r\n    this.dragFlag = null\r\n  }\r\n  renderSliderTips = e => {\r\n    const { renderTips } = this.props\r\n    if (!renderTips) {\r\n      return\r\n    }\r\n    clearTimeout(this.timer)\r\n    this.timer = setTimeout(() => {\r\n      const { x, width, top } = this.layoutDom.getBoundingClientRect()\r\n      const tipsX = e.pageX - x\r\n      let percent = (e.pageX - x) / width\r\n      percent = percent < 0 ? 0 : percent > 1 ? 1 : percent\r\n      this.setState({ tipsX, tipsY: top, showTips: true, tempValue: percent })\r\n    }, 200)\r\n  }\r\n  hideSliderTips = () => {\r\n    clearTimeout(this.timer)\r\n    this.setState({ showTips: false })\r\n  }\r\n  cancelPropagation = e => {\r\n    e.stopPropagation()\r\n  }\r\n  startDrag = e => {\r\n    e.stopPropagation()\r\n    this.dragFlag = true\r\n    document.body.addEventListener('mousemove', this.moveChange)\r\n    document.body.addEventListener('mouseup', this.stopDrag)\r\n  }\r\n  moveChange = e => {\r\n    e.stopPropagation()\r\n    const percent = this.computedPositionForEvent(e)\r\n    this.setState({ value: percent })\r\n  }\r\n  stopDrag = e => {\r\n    e.stopPropagation()\r\n    document.body.removeEventListener('mousemove', this.moveChange)\r\n    document.body.removeEventListener('mouseup', this.stopDrag)\r\n    this.dragFlag = false\r\n    let percent = this.state.value / 100\r\n    percent = percent < 0 ? 0 : percent > 1 ? 1 : percent\r\n    this.props.onChange && this.props.onChange(percent)\r\n  }\r\n  computedPositionForEvent(e) {\r\n    const { x, width } = this.layoutDom.getBoundingClientRect()\r\n    const { pageX } = e\r\n    let dx = pageX - x\r\n    if (dx > width) {\r\n      dx = width\r\n    }\r\n    if (dx < 0) {\r\n      dx = 0\r\n    }\r\n    return (dx / width) * 100\r\n  }\r\n  changeCurrentValue = event => {\r\n    event.stopPropagation()\r\n    const { width, x } = this.layoutDom.getBoundingClientRect()\r\n    let percent = (event.pageX - x) / width\r\n    this.props.onChange && this.props.onChange(percent)\r\n  }\r\n  render() {\r\n    const { value, showTips, tipsX } = this.state\r\n    const { availablePercent = 0, className = '', tipsY } = this.props\r\n    return (\r\n      <div className={`slider-layout ${className}`} ref={this.sliderDomRef}>\r\n        <div className=\"slider-content\">\r\n          <div className=\"slider-max-line\" />\r\n          <div className=\"slider-visibel-line\" style={{ width: `${availablePercent}%` }} />\r\n          <div className=\"slider-current-line\" style={{ width: `${value}%` }} />\r\n          {this.props.children}\r\n        </div>\r\n        <div className=\"slider-other-content\">\r\n          <div className=\"drag-change-icon\" draggable={false} style={{ left: `${value}%` }} />\r\n        </div>\r\n        <Tips visibel={showTips} className=\"lm-player-slide-tips\" style={{ left: tipsX, top: tipsY }} getContainer={() => this.sliderDomRef.current}>\r\n          {this.props.renderTips && this.props.renderTips(this.state.tempValue)}\r\n        </Tips>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nSlider.propTypes = {\r\n  currentPercent: PropTypes.number,\r\n  seekTo: PropTypes.func,\r\n  video: PropTypes.element,\r\n  renderTips: PropTypes.func,\r\n  availablePercent: PropTypes.number,\r\n  onChange: PropTypes.func,\r\n  children: PropTypes.any,\r\n  className: PropTypes.string,\r\n  tipsY: PropTypes.number\r\n}\r\nSlider.defaultProps = {\r\n  tipsY: -10\r\n}\r\n\r\nfunction Tips({ getContainer, visibel, children, style, className = '' }) {\r\n  const ele = useRef(document.createElement('div'))\r\n  useEffect(() => {\r\n    const box = getContainer ? getContainer() || document.body : document.body\r\n    box.appendChild(ele.current)\r\n    return () => box.removeChild(ele.current)\r\n  }, [getContainer])\r\n\r\n  if (!visibel) {\r\n    return null\r\n  }\r\n  return ReactDOM.createPortal(\r\n    <div className={className} style={style}>\r\n      {children}\r\n    </div>,\r\n    ele.current\r\n  )\r\n}\r\n\r\nTips.propTypes = {\r\n  visibel: PropTypes.bool,\r\n  children: PropTypes.element,\r\n  style: PropTypes.any,\r\n  className: PropTypes.string\r\n}\r\n\r\nexport default Slider\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Bar({ visibel = true, className = '', children, ...props }) {\r\n  if (visibel === false) {\r\n    return null\r\n  }\r\n  return (\r\n    <span className={`contraller-bar-item ${className}`} {...props}>\r\n      {children}\r\n    </span>\r\n  )\r\n}\r\n\r\nBar.propTypes = {\r\n  visibel: PropTypes.bool,\r\n  className: PropTypes.string,\r\n  children: PropTypes.any\r\n}\r\n","export default {\r\n  RELOAD: \"reload\", //手动视频重载\r\n  RELOAD_FAIL: \"reloadFail\", // 视频出错，重连失败\r\n  RELOAD_SUCCESS: \"reloadSuccess\", //视频出错，重连成功\r\n  ERROR: \"error\", //视频出错\r\n  ERROR_RELOAD: \"errorRload\", //视频出错，自动重连\r\n  HISTORY_PLAY_END: \"historyPlayEnd\", //历史视频列表播放结束\r\n  SEEK: \"seek\", //跳跃播放时间\r\n  TRANSFORM: \"transform\", //视频容器缩放\r\n  CHANGE_PLAY_INDEX: \"changePlayIndex\", //历史视频列表播放索引改变\r\n  HIDE_CONTRALLER:\"hideContraller\",\r\n  SHOW_CONTRALLER:\"showContraller\",\r\n  CLEAR_ERROR_TIMER:\"clearErrorTimer\"\r\n};\r\n","import React, { useState, useEffect, useCallback, useMemo } from 'react'\r\nimport IconFont from '../iconfont'\r\nimport Slider from '../slider'\r\nimport Bar from './bar'\r\nimport EventName from '../event/eventName'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction LeftBar({ api, event, video, isHistory, reloadHistory, isLive, leftExtContents, leftMidExtContents }) {\r\n  const [openSliderVolume, setOpenSliderVolume] = useState(false)\r\n  const [dep, setDep] = useState(Date.now())\r\n  useEffect(() => {\r\n    const updateRender = () => {\r\n      setDep(Date.now())\r\n    }\r\n    event.addEventListener('play', updateRender)\r\n    event.addEventListener('pause', updateRender)\r\n    event.addEventListener('volumechange', updateRender)\r\n\r\n    return () => {\r\n      event.removeEventListener('play', updateRender)\r\n      event.removeEventListener('pause', updateRender)\r\n      event.removeEventListener('volumechange', updateRender)\r\n    }\r\n  }, [event])\r\n\r\n  //缓存值\r\n  const paused = useMemo(() => video.paused, [dep, video])\r\n  const statusIconClassName = useMemo(() => (paused ? 'lm-player-Play_Main' : 'lm-player-Pause_Main'), [paused])\r\n  const statusText = useMemo(() => (paused ? '播放' : '暂停'), [paused])\r\n  const volumeVal = useMemo(() => (video.muted ? 0 : video.volume), [dep, video])\r\n  const volumeIcon = useMemo(() => (volumeVal === 0 ? 'lm-player-volume-close' : video.volume === 1 ? 'lm-player-volume-max' : 'lm-player-volume-normal-fuben'), [volumeVal])\r\n  const volumePercent = useMemo(() => (volumeVal === 0 ? 0 : volumeVal * 100), [volumeVal])\r\n  const sliderClassName = useMemo(() => (openSliderVolume ? 'contraller-bar-hover-volume' : ''), [openSliderVolume])\r\n\r\n  //TODO 方法\r\n  const changePlayStatus = useCallback(() => (video.paused ? api.play() : api.pause()), [video, api])\r\n\r\n  const mutedChantgeStatus = useCallback(() => (video.muted ? api.unmute() : api.mute()), [api, video])\r\n\r\n  const onChangeVolume = useCallback(\r\n    volume => {\r\n      api.setVolume(parseFloat(volume.toFixed(1)))\r\n      volume > 0 && video.muted && api.unmute()\r\n    },\r\n    [api, video]\r\n  )\r\n\r\n  const reload = useCallback(() => {\r\n    isHistory ? reloadHistory() : api.reload()\r\n    event.emit(EventName.CLEAR_ERROR_TIMER)\r\n  }, [event, isHistory, api])\r\n\r\n  return (\r\n    <div className=\"contraller-left-bar\">\r\n      {leftExtContents}\r\n      <Bar visibel={!isLive}>\r\n        <IconFont onClick={changePlayStatus} type={statusIconClassName} title={statusText} />\r\n      </Bar>\r\n      <Bar className={`contraller-bar-volume ${sliderClassName}`} onMouseOver={() => setOpenSliderVolume(true)} onMouseOut={() => setOpenSliderVolume(false)}>\r\n        <IconFont onClick={mutedChantgeStatus} type={volumeIcon} title=\"音量\" />\r\n        <div className=\"volume-slider-layout\">\r\n          <Slider className=\"volume-slider\" currentPercent={volumePercent} onChange={onChangeVolume} renderTips={precent => <span>{Math.round(precent * 100)}%</span>} tipsY={-2} />\r\n        </div>\r\n      </Bar>\r\n      <Bar>\r\n        <IconFont onClick={reload} type=\"lm-player-Refresh_Main\" title=\"重载\" />\r\n      </Bar>\r\n      {leftMidExtContents}\r\n    </div>\r\n  )\r\n}\r\n\r\nLeftBar.propTypes = {\r\n  api: PropTypes.object,\r\n  event: PropTypes.object,\r\n  playerProps: PropTypes.object,\r\n  video: PropTypes.node,\r\n  reloadHistory: PropTypes.func,\r\n  isHistory: PropTypes.bool\r\n}\r\n\r\nexport default LeftBar\r\n","import React, { useState, useMemo, useEffect, useCallback } from 'react'\r\nimport IconFont from '../iconfont'\r\nimport Bar from './bar'\r\nimport { isFullscreen, fullScreenListener, computedBound } from '../util'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction RightBar({ playContainer, api, scale, snapshot, rightExtContents, rightMidExtContents }) {\r\n  const [dep, setDep] = useState(Date.now())\r\n\r\n  useEffect(() => {\r\n    const update = () => setDep(Date.now())\r\n    fullScreenListener(true, update)\r\n    return () => fullScreenListener(false, update)\r\n  }, [])\r\n\r\n  const isfull = useMemo(() => isFullscreen(playContainer), [dep, playContainer])\r\n\r\n  const fullscreen = useCallback(() => {\r\n    !isFullscreen(playContainer) ? api.requestFullScreen() : api.cancelFullScreen()\r\n    setDep(Date.now())\r\n  }, [api, playContainer])\r\n\r\n  const setScale = useCallback(\r\n    (...args) => {\r\n      const dragDom = playContainer.querySelector('.player-mask-layout')\r\n      api.setScale(...args)\r\n      let position = computedBound(dragDom, api.getPosition(), api.getScale())\r\n      if (position) {\r\n        api.setPosition(position, true)\r\n      }\r\n    },\r\n    [api, playContainer]\r\n  )\r\n\r\n  return (\r\n    <div className=\"contraller-right-bar\">\r\n      {rightMidExtContents}\r\n      {scale && (\r\n        <>\r\n          <Bar>\r\n            <IconFont title=\"缩小\" onClick={() => setScale(-0.2)} type={'lm-player-ZoomOut_Main'} />\r\n          </Bar>\r\n          <Bar>\r\n            <IconFont title=\"复位\" onClick={() => setScale(1, true)} type={'lm-player-ZoomDefault_Main'} />\r\n          </Bar>\r\n          <Bar>\r\n            <IconFont title=\"放大\" onClick={() => setScale(0.2)} type={'lm-player-ZoomIn_Main'} />\r\n          </Bar>\r\n        </>\r\n      )}\r\n\r\n      {snapshot && (\r\n        <Bar>\r\n          <IconFont title=\"截图\" onClick={() => snapshot(api.snapshot())} type=\"lm-player-SearchBox\" />\r\n        </Bar>\r\n      )}\r\n      <Bar>\r\n        <IconFont title={isfull ? '窗口' : '全屏'} onClick={fullscreen} type={isfull ? 'lm-player-ExitFull_Main' : 'lm-player-Full_Main'} />\r\n      </Bar>\r\n      {rightExtContents}\r\n    </div>\r\n  )\r\n}\r\n\r\nRightBar.propTypes = {\r\n  api: PropTypes.object,\r\n  event: PropTypes.object,\r\n  playerProps: PropTypes.object,\r\n  playContainer: PropTypes.node,\r\n  reloadHistory: PropTypes.func,\r\n  isHistory: PropTypes.bool,\r\n}\r\nexport default RightBar\r\n","import React, { useCallback } from 'react'\r\nimport IconFont from '../iconfont'\r\nimport Bar from './bar'\r\nimport { computedBound } from '../util'\r\n\r\nfunction ScaleBar({ playContainer, api, scale }) {\r\n  const setScale = useCallback(\r\n    (...args) => {\r\n      const dragDom = playContainer.querySelector('.player-mask-layout')\r\n      api.setScale(...args)\r\n      let position = computedBound(dragDom, api.getPosition(), api.getScale())\r\n      if (position) {\r\n        api.setPosition(position, true)\r\n      }\r\n    },\r\n    [api, playContainer]\r\n  )\r\n\r\n  return (\r\n    <div className=\"contraller-scale-bar\">\r\n      {scale && (\r\n        <>\r\n          <Bar>\r\n            <IconFont title=\"缩小\" onClick={() => setScale(-0.2)} type={'lm-player-ZoomOut_Main'} />\r\n          </Bar>\r\n          <Bar>\r\n            <IconFont title=\"复位\" onClick={() => setScale(1, true)} type={'lm-player-ZoomDefault_Main'} />\r\n          </Bar>\r\n          <Bar>\r\n            <IconFont title=\"放大\" onClick={() => setScale(0.2)} type={'lm-player-ZoomIn_Main'} />\r\n          </Bar>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ScaleBar\r\n","import React from 'react'\r\nimport LeftBar from './left_bar'\r\nimport RightBar from './right_bar'\r\nimport PropTypes from 'prop-types'\r\nimport ScaleBar from './scale_bar'\r\nimport '../style/bar.less'\r\n\r\nfunction ContrallerBar({\r\n  playContainer,\r\n  snapshot,\r\n  rightExtContents,\r\n  rightMidExtContents,\r\n  scale,\r\n  visibel,\r\n  api,\r\n  event,\r\n  video,\r\n  isHistory,\r\n  reloadHistory,\r\n  isLive,\r\n  leftExtContents,\r\n  leftMidExtContents,\r\n}) {\r\n  return (\r\n    <>\r\n      <div className={`contraller-bar-layout ${!visibel ? 'hide-contraller-bar' : ''}`}>\r\n        <LeftBar\r\n          api={api}\r\n          event={event}\r\n          video={video}\r\n          isHistory={isHistory}\r\n          reloadHistory={reloadHistory}\r\n          isLive={isLive}\r\n          leftMidExtContents={leftMidExtContents}\r\n          leftExtContents={leftExtContents}\r\n        />\r\n        <RightBar\r\n          api={api}\r\n          event={event}\r\n          playContainer={playContainer}\r\n          snapshot={snapshot}\r\n          rightExtContents={rightExtContents}\r\n          rightMidExtContents={rightMidExtContents}\r\n        />\r\n      </div>\r\n      <div className={`contraller-scale-layout ${!visibel ? 'hide-contraller-bar' : ''}`}>\r\n        <ScaleBar api={api} playContainer={playContainer} scale={scale} />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nContrallerBar.propTypes = {\r\n  visibel: PropTypes.bool,\r\n}\r\n\r\nexport default ContrallerBar\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport EventName from './eventName'\r\n\r\nfunction ContrallerEvent({ event, playContainer, children }) {\r\n  const timer = useRef(null)\r\n  const [visibel, setVisibel] = useState(true)\r\n  useEffect(() => {\r\n    const showContraller = () => {\r\n      setVisibel(true)\r\n      hideContraller()\r\n      event.emit(EventName.SHOW_CONTRALLER)\r\n    }\r\n    const hideContraller = () => {\r\n      clearTimeout(timer.current)\r\n      timer.current = setTimeout(() => {\r\n        setVisibel(false)\r\n        event.emit(EventName.HIDE_CONTRALLER)\r\n      }, 3 * 1000)\r\n    }\r\n    playContainer.addEventListener('mousemove', showContraller, false)\r\n    playContainer.addEventListener('mouseout', hideContraller, false)\r\n\r\n    return () => {\r\n      playContainer.removeEventListener('mousemove', showContraller, false)\r\n      playContainer.removeEventListener('mouseout', hideContraller, false)\r\n    }\r\n  }, [])\r\n\r\n  return React.Children.map(children, child => (React.isValidElement(child) ? React.cloneElement(child, { visibel }) : child))\r\n}\r\n\r\nexport default ContrallerEvent\r\n","import React, { useEffect, useState, useMemo } from 'react'\r\nimport IconFont from './iconfont'\r\nimport EventName from './event/eventName'\r\nimport './style/message.less'\r\n\r\nfunction VideoMessage({ event, api }) {\r\n  const [state, setState] = useState({ status: null, errorTimer: null, loading: false })\r\n\r\n  const message = useMemo(() => {\r\n    if (!state.status) {\r\n      return ''\r\n    }\r\n    if (state.status === 'fail') {\r\n      return '视频错误'\r\n    }\r\n    if (state.status === 'reload') {\r\n      return `视频加载错误，正在进行重连第${state.errorTimer}次重连`\r\n    }\r\n  }, [state.errorTimer, state.status])\r\n\r\n  useEffect(() => {\r\n    const openLoading = () => setState(old => ({ ...old, loading: true }))\r\n    const closeLoading = () => setState(old => ({ ...old, loading: false }))\r\n    const errorReload = timer => setState(() => ({ status: 'reload', errorTimer: timer, loading: true }))\r\n    const reloadFail = () => setState(old => ({ ...old, status: 'fail' }))\r\n    const reloadSuccess = () => setState(old => ({ ...old, status: null }))\r\n    const reload = () => setState(old => ({ ...old, status: 'reload' }))\r\n    const playEnd = () => (setState(old => ({ ...old, status: null, loading: false })), api.pause())\r\n\r\n    event.addEventListener('loadstart', openLoading)\r\n    event.addEventListener('waiting', openLoading)\r\n    event.addEventListener('seeking', openLoading)\r\n    event.addEventListener('loadeddata', closeLoading)\r\n    event.addEventListener('canplay', closeLoading)\r\n    event.on(EventName.ERROR_RELOAD, errorReload)\r\n    event.on(EventName.RELOAD_FAIL, reloadFail)\r\n    event.on(EventName.RELOAD_SUCCESS, reloadSuccess)\r\n    event.on(EventName.RELOAD, reload)\r\n    event.on(EventName.HISTORY_PLAY_END, playEnd)\r\n    event.on(EventName.CLEAR_ERROR_TIMER, reloadSuccess)\r\n\r\n    return () => {\r\n      event.removeEventListener('loadstart', openLoading)\r\n      event.removeEventListener('waiting', openLoading)\r\n      event.removeEventListener('seeking', openLoading)\r\n      event.removeEventListener('loadeddata', closeLoading)\r\n      event.removeEventListener('canplay', closeLoading)\r\n      event.off(EventName.ERROR_RELOAD, errorReload)\r\n      event.off(EventName.RELOAD_FAIL, reloadFail)\r\n      event.off(EventName.RELOAD_SUCCESS, reloadSuccess)\r\n      event.off(EventName.RELOAD, reload)\r\n      event.off(EventName.HISTORY_PLAY_END, playEnd)\r\n      event.off(EventName.CLEAR_ERROR_TIMER, reloadSuccess)\r\n    }\r\n  }, [event])\r\n\r\n  const { loading, status } = state\r\n  return (\r\n    <div className={`lm-player-message-mask ${loading || status === 'fail' ? 'lm-player-mask-loading-animation' : ''}`}>\r\n      <IconFont\r\n        type={status === 'fail' ? 'lm-player-YesorNo_No_Dark' : 'lm-player-Loading'}\r\n        className={`${loading && status !== 'fail' ? 'lm-player-loading-animation' : status === 'fail' ? 'lm-player-loadfail' : ''} lm-player-loading-icon`}\r\n      />\r\n      <span className=\"lm-player-message\">{message}</span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const NoSource = () => {\r\n  return (\r\n    <div className=\"lm-player-message-mask lm-player-mask-loading-animation\">\r\n      <IconFont style={{ fontSize: 80 }} type=\"lm-player-PlaySource\" title=\"请选择视频源\"></IconFont>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VideoMessage\r\n","import React, { useEffect, useState, useMemo, useCallback } from 'react'\r\nimport IconFont from './iconfont'\r\nimport Slider from './slider'\r\nimport { timeStamp } from './util'\r\nimport './style/time-line.less'\r\n\r\nfunction TineLine({ event, api, visibel }) {\r\n  const [state, setState] = useState({ duration: 0, currentTime: 0, buffered: 0 })\r\n\r\n  useEffect(() => {\r\n    const getDuration = () => setState((old) => ({ ...old, duration: api.getDuration() }))\r\n    const getCurrentTime = () => setState((old) => ({ ...old, currentTime: api.getCurrentTime(), buffered: api.getSecondsLoaded() }))\r\n    const getBuffered = () => setState((old) => ({ ...old, buffered: api.getSecondsLoaded() }))\r\n    const seekendPlay = () => api.play()\r\n\r\n    event.addEventListener('loadedmetadata', getDuration)\r\n    event.addEventListener('durationchange', getDuration)\r\n    event.addEventListener('timeupdate', getCurrentTime)\r\n    event.addEventListener('progress', getBuffered)\r\n    event.addEventListener('suspend', getBuffered)\r\n    event.addEventListener('seeked', seekendPlay)\r\n\r\n    return () => {\r\n      event.removeEventListener('loadedmetadata', getDuration)\r\n      event.removeEventListener('durationchange', getDuration)\r\n      event.removeEventListener('timeupdate', getCurrentTime)\r\n      event.removeEventListener('progress', getBuffered)\r\n      event.removeEventListener('suspend', getBuffered)\r\n      event.removeEventListener('seeked', seekendPlay)\r\n    }\r\n  }, [event, api])\r\n\r\n  const { duration, currentTime, buffered } = state\r\n  const playPercent = useMemo(() => Math.round((currentTime / duration) * 100), [currentTime, duration])\r\n  const bufferedPercent = useMemo(() => Math.round((buffered / duration) * 100), [buffered, duration])\r\n\r\n  const changePlayTime = useCallback(\r\n    (percent) => {\r\n      const currentTime = percent * duration\r\n      api.pause()\r\n      api.seekTo(currentTime)\r\n      setState((old) => ({ ...old, currentTime }))\r\n    },\r\n    [duration, api]\r\n  )\r\n\r\n  const renderTimeLineTips = (percent) => {\r\n    const currentTime = percent * duration\r\n    const time = timeStamp(currentTime)\r\n    return <span>{time}</span>\r\n  }\r\n\r\n  return (\r\n    <div className={`video-time-line-layout ${!visibel ? 'hide-time-line' : ''}`}>\r\n      <IconFont type=\"lm-player-PrevFast\" onClick={() => api.backWind()} className=\"time-line-action-item\" />\r\n      <Slider className=\"time-line-box\" currentPercent={playPercent} availablePercent={bufferedPercent} onChange={changePlayTime} renderTips={renderTimeLineTips} />\r\n      <IconFont type=\"lm-player-NextFast_Light\" onClick={() => api.fastForward()} className=\"time-line-action-item\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TineLine\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport EventName from './eventName'\r\n\r\nfunction ErrorEvent({ event, api, errorReloadTimer, flv, hls, changePlayIndex, isHistory, playIndex }) {\r\n  const [errorTimer, setErrorTime] = useState(0)\r\n  const errorInfo = useRef(null)\r\n  const reloadTimer = useRef(null)\r\n\r\n  useEffect(() => {\r\n    const errorHandle = (...args) => {\r\n      if (args[2] && args[2].msg && args[2].msg.includes('Unsupported audio')) {\r\n        return\r\n      }\r\n      console.error(...args)\r\n      errorInfo.current = args\r\n      setErrorTime(errorTimer + 1)\r\n    }\r\n\r\n    const reloadSuccess = () => {\r\n      if (errorTimer > 0) {\r\n        console.warn('视频重连成功！')\r\n        event.emit(EventName.RELOAD_SUCCESS)\r\n        clearErrorTimer()\r\n      }\r\n    }\r\n    const clearErrorTimer = () => setErrorTime(0)\r\n    try {\r\n      if (flv) {\r\n        flv.on('error', errorHandle)\r\n      }\r\n      if (hls) {\r\n        hls.on('hlsError', errorHandle)\r\n      }\r\n    } catch (e) {\r\n      //\r\n    }\r\n\r\n    if (isHistory) {\r\n      //历史视频切换播放索引时清除错误次数\r\n      event.on(EventName.CHANGE_PLAY_INDEX, clearErrorTimer)\r\n      //历史视频主动清除错误次数\r\n      event.on(EventName.CLEAR_ERROR_TIMER, clearErrorTimer)\r\n    }\r\n    event.addEventListener('error', errorHandle, false)\r\n    //获取video状态清除错误状态\r\n    event.addEventListener('canplay', reloadSuccess, false)\r\n\r\n    return () => {\r\n      try {\r\n        if (flv) {\r\n          flv.off('error', errorHandle)\r\n        }\r\n        if (hls) {\r\n          hls.off('hlsError', errorHandle)\r\n        }\r\n      } catch (e) {\r\n        console.warn(e)\r\n      }\r\n      if (isHistory) {\r\n        event.off(EventName.CHANGE_PLAY_INDEX, clearErrorTimer)\r\n        event.off(EventName.CLEAR_ERROR_TIMER, clearErrorTimer)\r\n      }\r\n      event.removeEventListener('error', errorHandle, false)\r\n      event.removeEventListener('canplay', reloadSuccess, false)\r\n    }\r\n  }, [event, flv, hls, errorTimer])\r\n\r\n  useEffect(() => {\r\n    if (errorTimer === 0) {\r\n      return\r\n    }\r\n    if (errorTimer > errorReloadTimer) {\r\n      isHistory ? changePlayIndex(playIndex + 1) : event.emit(EventName.RELOAD_FAIL)\r\n      api.unload()\r\n      return\r\n    }\r\n\r\n    console.warn(`视频播放出错，正在进行重连${errorTimer}`)\r\n    reloadTimer.current = setTimeout(() => {\r\n      event.emit(EventName.ERROR_RELOAD, errorTimer, ...errorInfo.current)\r\n      api.reload(true)\r\n    }, 2 * 1000)\r\n\r\n    return () => {\r\n      clearTimeout(reloadTimer.current)\r\n    }\r\n  }, [errorTimer, api, event, flv, hls])\r\n\r\n  return <></>\r\n}\r\n\r\nexport default ErrorEvent\r\n","import React from 'react'\r\nimport { computedBound } from '../util'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass DragEvent extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    const { playContainer } = props\r\n\r\n    this.dragDom = playContainer.querySelector('.player-mask-layout')\r\n    this.position = {\r\n      start: [0, 0],\r\n      end: [0, 0]\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.dragDom.addEventListener('mousedown', this.openDrag)\r\n    this.props.event.addEventListener('transform', this.transformChange, true)\r\n  }\r\n  componentWillUnmount() {\r\n    this.dragDom.removeEventListener('mousedown', this.openDrag)\r\n  }\r\n  openDrag = e => {\r\n    this.position.start = [e.pageX, e.pageY]\r\n    this.dragDom.addEventListener('mousemove', this.moveChange)\r\n    document.body.addEventListener('mouseup', this.stopDrag)\r\n  }\r\n  moveChange = e => {\r\n    const { api } = this.props\r\n    const currentPosition = api.getPosition()\r\n    this.position.end = [e.pageX, e.pageY]\r\n    const x = currentPosition[0] + (this.position.end[0] - this.position.start[0])\r\n    const y = currentPosition[1] + (this.position.end[1] - this.position.start[1])\r\n    const position = [x, y]\r\n    api.setPosition(position)\r\n    this.position.start = [e.pageX, e.pageY]\r\n  }\r\n  stopDrag = () => {\r\n    this.dragDom.removeEventListener('mousemove', this.moveChange)\r\n    document.body.removeEventListener('mouseup', this.stopDrag)\r\n    this.transformChange()\r\n  }\r\n  transformChange = () => {\r\n    const { api } = this.props\r\n    let position = computedBound(this.dragDom, api.getPosition(), api.getScale())\r\n    position && api.setPosition(position, true)\r\n  }\r\n\r\n  render() {\r\n    return null\r\n  }\r\n}\r\n\r\nDragEvent.propTypes = {\r\n  api: PropTypes.object,\r\n  event: PropTypes.object,\r\n  playContainer: PropTypes.node,\r\n  playerProps: PropTypes.object\r\n}\r\nexport default DragEvent\r\n","import { fullscreen, isFullscreen, exitFullscreen } from './util'\r\nimport EventName from './event/eventName'\r\n\r\nlet index = 0\r\nexport default class Api {\r\n  constructor({ video, playContainer, event, flv, hls }) {\r\n    this.player = video\r\n    this.playContainer = playContainer\r\n    this.flv = flv\r\n    this.hls = hls\r\n    this.event = event\r\n    this.scale = 1\r\n    this.position = [0, 0]\r\n  }\r\n  /**\r\n   * 播放器销毁后 动态跟新api下的flv，hls对象\r\n   * @param {*} param0\r\n   */\r\n  updateChunk({ flv, hls }) {\r\n    this.flv = flv\r\n    this.hls = hls\r\n  }\r\n  /**\r\n   * 全屏\r\n   */\r\n  requestFullScreen() {\r\n    if (!isFullscreen(this.playContainer)) {\r\n      fullscreen(this.playContainer)\r\n    }\r\n  }\r\n  /**\r\n   * 退出全屏\r\n   */\r\n  cancelFullScreen() {\r\n    if (isFullscreen(this.playContainer)) {\r\n      exitFullscreen()\r\n    }\r\n  }\r\n  play() {\r\n    if (this.player.paused) {\r\n      this.player.play()\r\n    }\r\n  }\r\n  pause() {\r\n    if (!this.player.paused) {\r\n      this.player.pause()\r\n    }\r\n  }\r\n  destroy() {\r\n    this.player.removeAttribute('src')\r\n    this.unload()\r\n    if (this.flv) {\r\n      index++\r\n      this.flv.destroy()\r\n    }\r\n    if (this.hls) {\r\n      index++\r\n      this.hls.destroy()\r\n    }\r\n    this.player = null\r\n    this.playContainer = null\r\n    this.flv = null\r\n    this.hls = null\r\n    this.event = null\r\n    this.scale = null\r\n    this.position = null\r\n    console.warn('destroy', index)\r\n  }\r\n\r\n  /**\r\n   * 设置currentTime实现seek\r\n   * @param {*} seconds\r\n   * @param {*} noEmit\r\n   */\r\n  seekTo(seconds, noEmit) {\r\n    const buffered = this.getBufferedTime()\r\n    if (this.flv && buffered[0] > seconds) {\r\n      this.flv.unload()\r\n      this.flv.load()\r\n    }\r\n    console.log(this.player)\r\n    if (this.player) {\r\n      console.log(this.player.currentTime)\r\n      this.player.currentTime = seconds\r\n      if (!noEmit) {\r\n        this.event.emit(EventName.SEEK, seconds)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 视频重载\r\n   */\r\n  reload(notEmit) {\r\n    if (this.getCurrentTime !== 0) {\r\n      this.seekTo(0)\r\n    }\r\n    if (this.hls) {\r\n      this.hls.swapAudioCodec()\r\n      this.hls.recoverMediaError()\r\n    }\r\n    this.unload()\r\n    this.load()\r\n    this.play()\r\n    !notEmit && this.event.emit(EventName.RELOAD)\r\n  }\r\n  unload() {\r\n    this.flv && this.flv.unload()\r\n    this.hls && this.hls.stopLoad()\r\n  }\r\n  load() {\r\n    if (this.flv) {\r\n      this.flv.load()\r\n    }\r\n    if (this.hls) {\r\n      this.hls.startLoad()\r\n      this.hls.loadSource(this.hls.url)\r\n    }\r\n  }\r\n  setVolume(fraction) {\r\n    this.player.volume = fraction\r\n  }\r\n  mute() {\r\n    this.player.muted = true\r\n  }\r\n  unmute() {\r\n    this.player.muted = false\r\n  }\r\n\r\n  /**\r\n   * 开启画中画功能\r\n   */\r\n  requestPictureInPicture() {\r\n    if (this.player.requestPictureInPicture && document.pictureInPictureElement !== this.player) {\r\n      this.player.requestPictureInPicture()\r\n    }\r\n  }\r\n  /**\r\n   * 关闭画中画功能\r\n   */\r\n  exitPictureInPicture() {\r\n    if (document.exitPictureInPicture && document.pictureInPictureElement === this.player) {\r\n      document.exitPictureInPicture()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 设置播放速率\r\n   * @param {*} rate\r\n   */\r\n  setPlaybackRate(rate) {\r\n    this.player.playbackRate = rate\r\n  }\r\n  /**\r\n   * 获取视频总时长\r\n   */\r\n  getDuration() {\r\n    if (!this.player) return null\r\n    const { duration, seekable } = this.player\r\n    if (duration === Infinity && seekable.length > 0) {\r\n      return seekable.end(seekable.length - 1)\r\n    }\r\n    return duration\r\n  }\r\n  /**\r\n   * 获取当前播放时间\r\n   */\r\n  getCurrentTime() {\r\n    if (!this.player) return null\r\n    return this.player.currentTime\r\n  }\r\n\r\n  /**\r\n   * 获取缓存时间\r\n   */\r\n  getSecondsLoaded() {\r\n    return this.getBufferedTime()[1]\r\n  }\r\n\r\n  /**\r\n   * 获取当前视频缓存的起止时间\r\n   */\r\n  getBufferedTime() {\r\n    if (!this.player) return []\r\n    const { buffered } = this.player\r\n    if (buffered.length === 0) {\r\n      return [0, 0]\r\n    }\r\n    const end = buffered.end(buffered.length - 1)\r\n    const start = buffered.start(buffered.length - 1)\r\n    const duration = this.getDuration()\r\n    if (end > duration) {\r\n      return duration\r\n    }\r\n    return [start, end]\r\n  }\r\n  /**\r\n   * 快进通过seekTo方法实现\r\n   * @param {*} second\r\n   */\r\n  fastForward(second = 5) {\r\n    const duration = this.getDuration()\r\n    const currentTime = this.getCurrentTime()\r\n    const time = currentTime + second\r\n    this.seekTo(time > duration - 1 ? duration - 1 : time)\r\n  }\r\n\r\n  /**\r\n   * 快退通过seekTo方法实现\r\n   * @param {*} second\r\n   */\r\n  backWind(second = 5) {\r\n    const currentTime = this.getCurrentTime()\r\n    const time = currentTime - second\r\n    this.seekTo(time < 1 ? 1 : time)\r\n  }\r\n\r\n  /**\r\n   * 视频截屏方法\r\n   */\r\n  snapshot() {\r\n    let canvas = document.createElement('canvas')\r\n    let ctx = canvas.getContext('2d')\r\n    canvas.width = this.player.videoWidth\r\n    canvas.height = this.player.videoHeight\r\n    ctx.drawImage(this.player, 0, 0, canvas.width, canvas.height)\r\n    setTimeout(() => {\r\n      canvas.remove()\r\n      canvas = null\r\n      ctx = null\r\n    }, 200)\r\n    return canvas.toDataURL()\r\n  }\r\n  setScale(num, isRest = false) {\r\n    let scale = this.scale + num\r\n    if (isRest) {\r\n      scale = num\r\n    } else {\r\n      if (scale < 1) {\r\n        scale = 1\r\n      }\r\n      if (scale > 3) {\r\n        scale = 3\r\n      }\r\n    }\r\n    this.scale = scale\r\n    this.player.style.transition = 'transform 0.3s'\r\n    this.__setTransform()\r\n    this.event.emit(EventName.TRANSFORM)\r\n    setTimeout(() => {\r\n      this.player.style.transition = 'unset'\r\n    }, 1000)\r\n  }\r\n  getScale() {\r\n    return this.scale\r\n  }\r\n  setPosition(position, isAnimate) {\r\n    this.position = position\r\n    this.player.style.transition = isAnimate ? 'transform 0.3s' : 'unset'\r\n    this.__setTransform()\r\n  }\r\n  getPosition() {\r\n    return this.position\r\n  }\r\n  __setTransform() {\r\n    this.player.style.transform = `scale(${this.scale}) translate(${this.position[0]}px,${this.position[1]}px)`\r\n  }\r\n  getApi() {\r\n    return {\r\n      play: this.play.bind(this),\r\n      reload: this.reload.bind(this),\r\n      pause: this.pause.bind(this),\r\n      seekTo: this.seekTo.bind(this),\r\n      setVolume: this.setVolume.bind(this),\r\n      mute: this.mute.bind(this),\r\n      unmute: this.unmute.bind(this),\r\n      requestPictureInPicture: this.requestPictureInPicture.bind(this),\r\n      exitPictureInPicture: this.exitPictureInPicture.bind(this),\r\n      setPlaybackRate: this.setPlaybackRate.bind(this),\r\n      destroy: this.destroy.bind(this),\r\n      getDuration: this.getDuration.bind(this),\r\n      getCurrentTime: this.getCurrentTime.bind(this),\r\n      getSecondsLoaded: this.getSecondsLoaded.bind(this),\r\n      getBufferedTime: this.getBufferedTime.bind(this),\r\n      fastForward: this.fastForward.bind(this),\r\n      backWind: this.backWind.bind(this),\r\n      snapshot: this.snapshot.bind(this),\r\n      requestFullScreen: this.requestFullScreen.bind(this),\r\n      cancelFullScreen: this.cancelFullScreen.bind(this),\r\n      __player: this.player,\r\n      flv: this.flv,\r\n      hls: this.hls,\r\n    }\r\n  }\r\n}\r\n","function getHiddenProp() {\r\n  const prefixes = [\"webkit\", \"moz\", \"ms\", \"o\"];\r\n  // 如果hidden 属性是原生支持的，我们就直接返回\r\n  if (\"hidden\" in document) {\r\n    return \"hidden\";\r\n  }\r\n\r\n  // 其他的情况就循环现有的浏览器前缀，拼接我们所需要的属性\r\n  for (let i = 0; i < prefixes.length; i++) {\r\n    // 如果当前的拼接的前缀在 document对象中存在 返回即可\r\n    if (prefixes[i] + \"Hidden\" in document) {\r\n      return prefixes[i] + \"Hidden\";\r\n    }\r\n  }\r\n\r\n  // 其他的情况 直接返回null\r\n  return null;\r\n}\r\n\r\nfunction getVisibilityState() {\r\n  const prefixes = [\"webkit\", \"moz\", \"ms\", \"o\"];\r\n\r\n  if (\"visibilityState\" in document) {\r\n    return \"visibilityState\";\r\n  }\r\n\r\n  for (let i = 0; i < prefixes.length; i++) {\r\n    if (prefixes[i] + \"VisibilityState\" in document) {\r\n      return prefixes[i] + \"VisibilityState\";\r\n    }\r\n  }\r\n  // 找不到返回 null\r\n  return null;\r\n}\r\n\r\nfunction visibilityState() {\r\n  return document[getVisibilityState()];\r\n}\r\n\r\nfunction addEventListener(listener) {\r\n  const visProp = getHiddenProp();\r\n  const evtname = visProp.replace(/[H|h]idden/, \"\") + \"visibilitychange\";\r\n  document.addEventListener(evtname, listener, false);\r\n}\r\n\r\nfunction removeEventListener(listener) {\r\n  const visProp = getHiddenProp();\r\n  const evtname = visProp.replace(/[H|h]idden/, \"\") + \"visibilitychange\";\r\n  document.removeEventListener(evtname, listener, false);\r\n}\r\n\r\nexport default {\r\n  addEventListener,\r\n  removeEventListener,\r\n  visibilityState\r\n};\r\n","import React, { useEffect } from 'react'\r\nimport BrowserTab from './event/browserTabEvent'\r\n\r\nfunction LiveHeart({ api }) {\r\n  useEffect(() => {\r\n    const browserTabChange = function() {\r\n      if (BrowserTab.visibilityState() === 'visible') {\r\n        const current = api.getCurrentTime()\r\n        const buffered = api.getSecondsLoaded()\r\n        if (buffered - current > 5) {\r\n          console.warn(`当前延时过大current->${current} buffered->${buffered}, 基于视频当前缓存时间更新当前播放时间 updateTime -> ${buffered - 2}`)\r\n          api.seekTo(buffered - 2 > 0 ? buffered - 2 : 0)\r\n        }\r\n      }\r\n    }\r\n    BrowserTab.addEventListener(browserTabChange)\r\n    return () => {\r\n      BrowserTab.removeEventListener(browserTabChange)\r\n    }\r\n  }, [api])\r\n  return <></>\r\n}\r\n\r\nexport default LiveHeart\r\n","import React, { useRef, useEffect, useState } from 'react';\r\nimport VideoEvent from './event';\r\nimport { getVideoType, createFlvPlayer, createHlsPlayer } from './util';\r\nimport ContrallerBar from './contraller_bar';\r\nimport ContrallerEvent from './event/contrallerEvent';\r\nimport VideoMessage, { NoSource } from './message';\r\nimport TimeLine from './time_line';\r\nimport ErrorEvent from './event/errorEvent';\r\nimport DragEvent from './event/dragEvent';\r\nimport Api from './api';\r\nimport LiveHeart from './live_heart';\r\nimport PropTypes from 'prop-types';\r\nimport './style/index.less';\r\n\r\nfunction SinglePlayer({ type, file, className, autoPlay, muted, poster, playsinline, loop, preload, children, onInitPlayer, ...props }) {\r\n  const playContainerRef = useRef(null);\r\n  const [playerObj, setPlayerObj] = useState(null);\r\n  const playerRef = useRef(null);\r\n\r\n  useEffect(\r\n    () => () => {\r\n      if (playerRef.current && playerRef.current.event) {\r\n        playerRef.current.event.destroy();\r\n      }\r\n      if (playerRef.current && playerRef.current.api) {\r\n        playerRef.current.api.destroy();\r\n      }\r\n      playerRef.current = null;\r\n    },\r\n    [file]\r\n  );\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const playerObject = {\r\n      playContainer: playContainerRef.current,\r\n      video: playContainerRef.current.querySelector('video'),\r\n    };\r\n    let isInit = false;\r\n    const formartType = getVideoType(file);\r\n    if (formartType === 'flv' || type === 'flv') {\r\n      isInit = true;\r\n      playerObject.flv = createFlvPlayer(playerObject.video, { ...props, file });\r\n    }\r\n    if (formartType === 'm3u8' || type === 'hls') {\r\n      isInit = true;\r\n      playerObject.hls = createHlsPlayer(playerObject.video, file);\r\n    }\r\n    if (!isInit && (!['flv', 'm3u8'].includes(formartType) || type === 'native')) {\r\n      playerObject.video.src = file;\r\n    }\r\n    if (playerObject.event) {\r\n      playerObject.event.destroy();\r\n    }\r\n    playerObject.event = new VideoEvent(playerObject.video);\r\n    if (playerObject.api) {\r\n      playerObject.api.destroy();\r\n    }\r\n    playerObject.api = new Api(playerObject);\r\n    playerRef.current = playerObject;\r\n    setPlayerObj(() => playerObject);\r\n\r\n    if (onInitPlayer) {\r\n      onInitPlayer(Object.assign({}, playerObject.api.getApi(), playerObject.event.getApi()));\r\n    }\r\n  }, [file]);\r\n  return (\r\n    <div className={`lm-player-container ${className}`} ref={playContainerRef}>\r\n      <div className=\"player-mask-layout\">\r\n        <video autoPlay={autoPlay} preload={preload} muted={muted} poster={poster} controls={false} playsInline={playsinline} loop={loop} />\r\n      </div>\r\n      <VideoTools\r\n        playerObj={playerObj}\r\n        isLive={props.isLive}\r\n        key={file}\r\n        hideContrallerBar={props.hideContrallerBar}\r\n        errorReloadTimer={props.errorReloadTimer}\r\n        scale={props.scale}\r\n        snapshot={props.snapshot}\r\n        leftExtContents={props.leftExtContents}\r\n        leftMidExtContents={props.leftMidExtContents}\r\n        rightExtContents={props.rightExtContents}\r\n        rightMidExtContents={props.rightMidExtContents}\r\n        draggable={props.draggable}\r\n      />\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction VideoTools({\r\n  playerObj,\r\n  draggable,\r\n  isLive,\r\n  hideContrallerBar,\r\n  scale,\r\n  snapshot,\r\n  leftExtContents,\r\n  leftMidExtContents,\r\n  rightExtContents,\r\n  rightMidExtContents,\r\n  errorReloadTimer,\r\n}) {\r\n  if (!playerObj) {\r\n    return <NoSource />;\r\n  }\r\n  return (\r\n    <>\r\n      <VideoMessage api={playerObj.api} event={playerObj.event} />\r\n      {draggable && <DragEvent playContainer={playerObj.playContainer} api={playerObj.api} event={playerObj.event} />}\r\n      {!hideContrallerBar && (\r\n        <ContrallerEvent event={playerObj.event} playContainer={playerObj.playContainer}>\r\n          <ContrallerBar\r\n            api={playerObj.api}\r\n            event={playerObj.event}\r\n            playContainer={playerObj.playContainer}\r\n            video={playerObj.video}\r\n            snapshot={snapshot}\r\n            rightExtContents={rightExtContents}\r\n            rightMidExtContents={rightMidExtContents}\r\n            scale={scale}\r\n            isHistory={false}\r\n            isLive={isLive}\r\n            leftExtContents={leftExtContents}\r\n            leftMidExtContents={leftMidExtContents}\r\n          />\r\n          {!isLive && <TimeLine api={playerObj.api} event={playerObj.event} />}\r\n        </ContrallerEvent>\r\n      )}\r\n      <ErrorEvent flv={playerObj.flv} hls={playerObj.hls} api={playerObj.api} event={playerObj.event} errorReloadTimer={errorReloadTimer} />\r\n      {isLive && <LiveHeart api={playerObj.api} />}\r\n    </>\r\n  );\r\n}\r\n\r\nSinglePlayer.propTypes = {\r\n  file: PropTypes.string.isRequired, //播放地址 必填\r\n  isLive: PropTypes.bool, //是否实时视频\r\n  errorReloadTimer: PropTypes.number, //视频错误重连次数\r\n  type: PropTypes.oneOf(['flv', 'hls', 'native']), //强制视频流类型\r\n  onInitPlayer: PropTypes.func,\r\n  draggable: PropTypes.bool,\r\n  hideContrallerBar: PropTypes.bool,\r\n  scale: PropTypes.bool,\r\n  muted: PropTypes.string,\r\n  autoPlay: PropTypes.bool,\r\n  playsInline: PropTypes.bool,\r\n  preload: PropTypes.string,\r\n  poster: PropTypes.string,\r\n  loop: PropTypes.bool,\r\n  snapshot: PropTypes.func,\r\n  className: PropTypes.string,\r\n  rightExtContents: PropTypes.element,\r\n  rightMidExtContents: PropTypes.element,\r\n  leftExtContents: PropTypes.element,\r\n  leftMidExtContents: PropTypes.element,\r\n  flvOptions: PropTypes.object,\r\n  flvConfig: PropTypes.object,\r\n  children: PropTypes.element,\r\n};\r\nSinglePlayer.defaultProps = {\r\n  isLive: true,\r\n  draggable: true,\r\n  scale: true,\r\n  errorReloadTimer: 5,\r\n  muted: 'muted',\r\n  autoPlay: true,\r\n  playsInline: false,\r\n  preload: 'auto',\r\n  loop: false,\r\n  hideContrallerBar: false,\r\n};\r\n\r\nexport default SinglePlayer;\r\n","export const computedIndexFormTime = (historyList, time) => {\r\n  let index = 0\r\n  try {\r\n    index = historyList.fragments.findIndex((v) => v.end > time)\r\n  } catch (e) {\r\n    console.error('historyList data error', historyList)\r\n  }\r\n  return index\r\n}\r\nexport const computedTimeAndIndex = (historyList, currentTime) => {\r\n  const index = computedIndexFormTime(historyList, currentTime)\r\n  let seekTime = 0\r\n  try {\r\n    const fragment = historyList.fragments[index]\r\n    if (!fragment) {\r\n      return [0, 0]\r\n    }\r\n    seekTime = currentTime - fragment.begin - 1\r\n  } catch (e) {\r\n    console.error('historyList data error', historyList)\r\n  }\r\n  return [index, seekTime]\r\n}\r\n","import React, { useState, useEffect, useMemo, useCallback } from 'react'\r\nimport IconFont from '../iconfont'\r\nimport Slider from '../slider'\r\nimport { dateFormat } from '../util'\r\nimport EventName from '../event/eventName'\r\nimport PropTypes from 'prop-types'\r\nimport { computedTimeAndIndex } from './utils'\r\nimport '../style/time-line.less'\r\n\r\nconst computedLineList = (historyList) => {\r\n  const duration = historyList.duration\r\n  return historyList.fragments.map((v) => {\r\n    return {\r\n      disabled: !v.file,\r\n      size: ((v.end - v.begin) / duration) * 100,\r\n    }\r\n  })\r\n}\r\n\r\nfunction TineLine({ event, api, visibel, historyList, playIndex, seekTo, defaultTime }) {\r\n  const [state, setState] = useState({ duration: 1, currentTime: defaultTime, buffered: 0, isEnd: false })\r\n\r\n  useEffect(() => setState((old) => ({ ...old, currentTime: defaultTime })), [defaultTime])\r\n\r\n  useEffect(() => {\r\n    const getDuration = () => setState((old) => ({ ...old, duration: api.getDuration() }))\r\n    const getCurrentTime = () => setState((old) => ({ ...old, currentTime: api.getCurrentTime(), buffered: api.getSecondsLoaded() }))\r\n    const getBuffered = () => setState((old) => ({ ...old, buffered: api.getSecondsLoaded() }))\r\n    const historyPlayEnd = () => setState((old) => ({ ...old, isEnd: true }))\r\n    const reload = () => setState((old) => ({ ...old, isEnd: false, currentTime: api.getCurrentTime() }))\r\n    const seekendPlay = () => api.play()\r\n\r\n    event.addEventListener('loadedmetadata', getDuration)\r\n    event.addEventListener('durationchange', getDuration)\r\n    event.addEventListener('timeupdate', getCurrentTime)\r\n    event.addEventListener('progress', getBuffered)\r\n    event.addEventListener('suspend', getBuffered)\r\n    event.addEventListener('seeked', seekendPlay)\r\n    event.on(EventName.HISTORY_PLAY_END, historyPlayEnd)\r\n    event.on(EventName.RELOAD, reload)\r\n\r\n    return () => {\r\n      event.removeEventListener('loadedmetadata', getDuration)\r\n      event.removeEventListener('durationchange', getDuration)\r\n      event.removeEventListener('timeupdate', getCurrentTime)\r\n      event.removeEventListener('progress', getBuffered)\r\n      event.removeEventListener('suspend', getBuffered)\r\n      event.removeEventListener('seeked', seekendPlay)\r\n      event.off(EventName.HISTORY_PLAY_END, historyPlayEnd)\r\n      event.off(EventName.RELOAD, reload)\r\n    }\r\n  }, [event, api])\r\n\r\n  const changePlayTime = useCallback(\r\n    (percent) => {\r\n      const currentTime = percent * historyList.duration //修正一下误差\r\n      const [index, time] = computedTimeAndIndex(historyList, currentTime)\r\n      console.log(index, time)\r\n      seekTo(currentTime, index)\r\n      setState((old) => ({ ...old, currentTime: time, isEnd: false }))\r\n    },\r\n    [historyList]\r\n  )\r\n\r\n  const renderTimeLineTips = (percent) => {\r\n    const currentTime = percent * historyList.duration * 1000\r\n    const date = dateFormat(historyList.beginDate + currentTime)\r\n    return <span>{date}</span>\r\n  }\r\n\r\n  const { currentTime, buffered, isEnd } = state\r\n  const lineList = useMemo(() => computedLineList(historyList), [historyList])\r\n  const currentLine = useMemo(() => lineList.filter((_, i) => i < playIndex).map((v) => v.size), [playIndex, lineList])\r\n  const currentIndexTime = useMemo(() => (currentLine.length === 0 ? 0 : currentLine.length > 1 ? currentLine.reduce((p, c) => p + c) : currentLine[0]), [currentLine])\r\n  const playPercent = useMemo(() => (currentTime / historyList.duration) * 100 + currentIndexTime, [currentIndexTime, historyList, currentTime])\r\n  const bufferedPercent = useMemo(() => (buffered / historyList.duration) * 100 + currentIndexTime, [historyList, currentIndexTime, buffered])\r\n\r\n  return (\r\n    <div className={`video-time-line-layout ${!visibel ? 'hide-time-line' : ''}`}>\r\n      <IconFont type=\"lm-player-PrevFast\" onClick={() => api.backWind()} className=\"time-line-action-item\" />\r\n      <Slider className=\"time-line-box\" currentPercent={isEnd ? '100' : playPercent} availablePercent={bufferedPercent} onChange={changePlayTime} renderTips={renderTimeLineTips}>\r\n        <>\r\n          {lineList.map((v, i) => {\r\n            const currentSizeLine = lineList.filter((v, i2) => i2 < i).map((v) => v.size)\r\n            const currentIndexSize = currentSizeLine.length === 0 ? 0 : currentSizeLine.length > 1 ? currentSizeLine.reduce((p, c) => p + c) : currentSizeLine[0]\r\n            return (\r\n              <div className={`history-time-line-item ${v.disabled ? 'history-time-line-disabled' : ''}`} key={i} style={{ width: `${v.size}%`, left: `${currentIndexSize}%` }} />\r\n            )\r\n          })}\r\n        </>\r\n      </Slider>\r\n      <IconFont type=\"lm-player-NextFast_Light\" onClick={() => api.fastForward()} className=\"time-line-action-item\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nTineLine.propTypes = {\r\n  event: PropTypes.object,\r\n  api: PropTypes.object,\r\n  changePlayIndex: PropTypes.func,\r\n  playIndex: PropTypes.number,\r\n  historyList: PropTypes.array,\r\n  seekTo: PropTypes.func,\r\n  visibel: PropTypes.bool,\r\n}\r\n\r\nexport default TineLine\r\n","/**\r\n * history下使用 用户切换下个播放地址\r\n */\r\n\r\nimport React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction PlayEnd({ event, changePlayIndex, playIndex }) {\r\n  useEffect(() => {\r\n    const endedHandle = () => changePlayIndex(playIndex + 1)\r\n    event.addEventListener('ended', endedHandle, false)\r\n    return () => {\r\n      event.removeEventListener('ended', endedHandle, false)\r\n    }\r\n  }, [event, playIndex, changePlayIndex])\r\n  return <></>\r\n}\r\n\r\nPlayEnd.propTypes = {\r\n  event: PropTypes.object,\r\n  changePlayIndex: PropTypes.func,\r\n  playIndex: PropTypes.number,\r\n}\r\nexport default PlayEnd\r\n","import React, { useRef, useState, useCallback, useEffect, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ContrallerBar from '../contraller_bar';\r\nimport VideoMessage, { NoSource } from '../message';\r\nimport HistoryTimeLine from './time_line_history';\r\nimport ErrorEvent from '../event/errorEvent';\r\nimport DragEvent from '../event/dragEvent';\r\nimport Api from '../api';\r\nimport VideoEvent from '../event';\r\nimport PlayEnd from './play_end';\r\nimport EventName from '../event/eventName';\r\nimport ContrallerEvent from '../event/contrallerEvent';\r\nimport { getVideoType, createFlvPlayer, createHlsPlayer } from '../util';\r\nimport { computedTimeAndIndex } from './utils';\r\n\r\nfunction HistoryPlayer({ type, historyList, defaultTime, className, autoPlay, muted, poster, playsinline, loop, preload, children, onInitPlayer, ...props }) {\r\n  const playContainerRef = useRef(null);\r\n  const [playerObj, setPlayerObj] = useState(null);\r\n  const playerRef = useRef(null);\r\n  const [playStatus, setPlayStatus] = useState(() => computedTimeAndIndex(historyList, defaultTime));\r\n  const playIndex = useMemo(() => playStatus[0], [playStatus]);\r\n  const defaultSeekTime = useMemo(() => playStatus[1], [playStatus]);\r\n  const file = useMemo(() => {\r\n    let url;\r\n    try {\r\n      url = historyList.fragments[playIndex].file;\r\n    } catch (e) {\r\n      console.warn('未找打播放地址！', historyList);\r\n    }\r\n    return url;\r\n  }, [historyList, playIndex]);\r\n\r\n  /**\r\n   * 重写api下的seekTo方法\r\n   */\r\n  const seekTo = useCallback(\r\n    (currentTime) => {\r\n      const [index, seekTime] = computedTimeAndIndex(historyList, currentTime);\r\n      if (playerRef.current.event && playerRef.current.api) {\r\n        //判断是否需要更新索引\r\n        setPlayStatus((old) => {\r\n          if (old[0] !== index) {\r\n            return [index, seekTime];\r\n          } else {\r\n            playerRef.current.api.seekTo(seekTime, true);\r\n            return old;\r\n          }\r\n        });\r\n      }\r\n    },\r\n    [playIndex, historyList]\r\n  );\r\n\r\n  const changePlayIndex = useCallback(\r\n    (index) => {\r\n      if (index > historyList.fragments.length - 1) {\r\n        return playerRef.current && playerRef.current.event && playerRef.current.event.emit(EventName.HISTORY_PLAY_END);\r\n      }\r\n\r\n      if (!historyList.fragments[index].file) {\r\n        return changePlayIndex(index + 1);\r\n      }\r\n\r\n      if (playerRef.current && playerRef.current.event) {\r\n        playerRef.current.event.emit(EventName.CHANGE_PLAY_INDEX, index);\r\n      }\r\n      setPlayStatus([index, 0]);\r\n    },\r\n    [historyList]\r\n  );\r\n\r\n  const reloadHistory = useCallback(() => {\r\n    if (playStatus[0] === 0) {\r\n      playerRef.current.api.seekTo(defaultSeekTime);\r\n    }\r\n    setPlayStatus([0, 0]);\r\n\r\n    playerRef.current.event.emit(EventName.RELOAD);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      changePlayIndex(playIndex + 1);\r\n    }\r\n  }, [file, playIndex, historyList]);\r\n\r\n  useEffect(\r\n    () => () => {\r\n      if (playerRef.current && playerRef.current.event) {\r\n        playerRef.current.event.destroy();\r\n      }\r\n      if (playerRef.current && playerRef.current.api) {\r\n        playerRef.current.api.destroy();\r\n      }\r\n      playerRef.current = null;\r\n    },\r\n    [file]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const playerObject = {\r\n      playContainer: playContainerRef.current,\r\n      video: playContainerRef.current.querySelector('video'),\r\n    };\r\n    let isInit = false;\r\n    const formartType = getVideoType(file);\r\n    if (formartType === 'flv' || type === 'flv') {\r\n      isInit = true;\r\n      playerObject.flv = createFlvPlayer(playerObject.video, { ...props, file });\r\n    }\r\n    if (formartType === 'm3u8' || type === 'hls') {\r\n      isInit = true;\r\n      playerObject.hls = createHlsPlayer(playerObject.video, file);\r\n    }\r\n    if (!isInit && (!['flv', 'm3u8'].includes(formartType) || type === 'native')) {\r\n      playerObject.video.src = file;\r\n    }\r\n    if (playerObject.event) {\r\n      playerObject.event.destroy();\r\n    }\r\n    playerObject.event = new VideoEvent(playerObject.video);\r\n    if (playerObject.api) {\r\n      playerObject.api.destroy();\r\n    }\r\n    playerObject.api = new Api(playerObject);\r\n    playerRef.current = playerObject;\r\n    setPlayerObj(playerObject);\r\n    if (defaultSeekTime) {\r\n      playerObject.api.seekTo(defaultSeekTime);\r\n    }\r\n    if (onInitPlayer) {\r\n      onInitPlayer(Object.assign({}, playerObject.api.getApi(), playerObject.event.getApi(), { seekTo, changePlayIndex, reload: reloadHistory }));\r\n    }\r\n  }, [historyList, file]);\r\n\r\n  return (\r\n    <div className={`lm-player-container ${className}`} ref={playContainerRef}>\r\n      <div className=\"player-mask-layout\">\r\n        <video autoPlay={autoPlay} preload={preload} muted={muted} poster={poster} controls={false} playsInline={playsinline} loop={loop} />\r\n      </div>\r\n      <VideoTools\r\n        defaultTime={defaultSeekTime}\r\n        playerObj={playerObj}\r\n        isLive={props.isLive}\r\n        hideContrallerBar={props.hideContrallerBar}\r\n        errorReloadTimer={props.errorReloadTimer}\r\n        scale={props.scale}\r\n        snapshot={props.snapshot}\r\n        leftExtContents={props.leftExtContents}\r\n        leftMidExtContents={props.leftMidExtContents}\r\n        rightExtContents={props.rightExtContents}\r\n        rightMidExtContents={props.rightMidExtContents}\r\n        draggable={props.draggable}\r\n        changePlayIndex={changePlayIndex}\r\n        reloadHistory={reloadHistory}\r\n        historyList={historyList}\r\n        playIndex={playIndex}\r\n        seekTo={seekTo}\r\n        key={file}\r\n      />\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction VideoTools({\r\n  playerObj,\r\n  draggable,\r\n  isLive,\r\n  hideContrallerBar,\r\n  scale,\r\n  snapshot,\r\n  leftExtContents,\r\n  leftMidExtContents,\r\n  rightExtContents,\r\n  rightMidExtContents,\r\n  errorReloadTimer,\r\n  changePlayIndex,\r\n  reloadHistory,\r\n  historyList,\r\n  seekTo,\r\n  playIndex,\r\n  defaultTime,\r\n}) {\r\n  if (!playerObj) {\r\n    return <NoSource />;\r\n  }\r\n  return (\r\n    <>\r\n      <VideoMessage api={playerObj.api} event={playerObj.event} />\r\n      {draggable && <DragEvent playContainer={playerObj.playContainer} api={playerObj.api} event={playerObj.event} />}\r\n      {!hideContrallerBar && (\r\n        <ContrallerEvent event={playerObj.event} playContainer={playerObj.playContainer}>\r\n          <ContrallerBar\r\n            api={playerObj.api}\r\n            event={playerObj.event}\r\n            playContainer={playerObj.playContainer}\r\n            video={playerObj.video}\r\n            snapshot={snapshot}\r\n            rightExtContents={rightExtContents}\r\n            rightMidExtContents={rightMidExtContents}\r\n            scale={scale}\r\n            isHistory={true}\r\n            isLive={isLive}\r\n            leftExtContents={leftExtContents}\r\n            leftMidExtContents={leftMidExtContents}\r\n            reloadHistory={reloadHistory}\r\n          />\r\n          <HistoryTimeLine\r\n            defaultTime={defaultTime}\r\n            changePlayIndex={changePlayIndex}\r\n            historyList={historyList}\r\n            playIndex={playIndex}\r\n            seekTo={seekTo}\r\n            api={playerObj.api}\r\n            event={playerObj.event}\r\n          />\r\n        </ContrallerEvent>\r\n      )}\r\n      <ErrorEvent\r\n        changePlayIndex={changePlayIndex}\r\n        playIndex={playIndex}\r\n        isHistory={true}\r\n        flv={playerObj.flv}\r\n        hls={playerObj.hls}\r\n        api={playerObj.api}\r\n        event={playerObj.event}\r\n        errorReloadTimer={errorReloadTimer}\r\n      />\r\n      <PlayEnd event={playerObj.event} changePlayIndex={changePlayIndex} playIndex={playIndex} />\r\n    </>\r\n  );\r\n}\r\n\r\nHistoryPlayer.propTypes = {\r\n  historyList: PropTypes.object.isRequired, //播放地址 必填\r\n  errorReloadTimer: PropTypes.number, //视频错误重连次数\r\n  type: PropTypes.oneOf(['flv', 'hls', 'native']), //强制视频流类型\r\n  onInitPlayer: PropTypes.func,\r\n  isDraggable: PropTypes.bool,\r\n  isScale: PropTypes.bool,\r\n  muted: PropTypes.string,\r\n  autoPlay: PropTypes.bool,\r\n  playsInline: PropTypes.bool,\r\n  preload: PropTypes.string,\r\n  poster: PropTypes.string,\r\n  loop: PropTypes.bool,\r\n  defaultTime: PropTypes.number,\r\n  className: PropTypes.string,\r\n  playsinline: PropTypes.bool,\r\n  children: PropTypes.any,\r\n  autoplay: PropTypes.bool,\r\n  rightExtContents: PropTypes.element,\r\n  rightMidExtContents: PropTypes.element,\r\n  leftExtContents: PropTypes.element,\r\n  leftMidExtContents: PropTypes.element,\r\n  flvOptions: PropTypes.object,\r\n  flvConfig: PropTypes.object,\r\n};\r\nHistoryPlayer.defaultProps = {\r\n  draggable: true,\r\n  scale: true,\r\n  errorReloadTimer: 5,\r\n  muted: 'muted',\r\n  autoPlay: true,\r\n  playsInline: false,\r\n  preload: 'auto',\r\n  loop: false,\r\n  defaultTime: 0,\r\n  historyList: { beginDate: 0, duration: 0, fragments: [] },\r\n};\r\n\r\nexport default HistoryPlayer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport Player from \"./player\";\r\nimport HistoryPlayer from \"./history\";\r\n\r\nexport function createPlayer({ container, children, onInitPlayer, ...props }) {\r\n  ReactDOM.render(\r\n    <Player\r\n      {...props}\r\n      onInitPlayer={player => {\r\n        player.destroy = function() {\r\n          ReactDOM.unmountComponentAtNode(container);\r\n        };\r\n        onInitPlayer && onInitPlayer(player);\r\n      }}\r\n    >\r\n      {children}\r\n    </Player>,\r\n    container\r\n  );\r\n}\r\nexport function createHistoryPlayer({ container, children, onInitPlayer, ...props }) {\r\n  ReactDOM.render(\r\n    <HistoryPlayer\r\n      {...props}\r\n      onInitPlayer={player => {\r\n        player.destroy = function() {\r\n          ReactDOM.unmountComponentAtNode(container);\r\n        };\r\n        onInitPlayer && onInitPlayer(player);\r\n      }}\r\n    >\r\n      {children}\r\n    </HistoryPlayer>,\r\n    container\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}