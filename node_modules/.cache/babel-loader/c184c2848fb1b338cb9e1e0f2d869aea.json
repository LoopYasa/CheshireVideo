{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.namespace = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nexports.default = function () {\n  return {\n    namespace: namespace,\n    state: {\n      percent: null,\n      duration: null,\n      timeDuration: null,\n      data: null\n    },\n    reducers: {\n      fragmentReducer: _util.standardReducer,\n      //合成录像，摄像头上传视频会中断，会分成几个视频，然后这几个视频会合并成一个视频\n      //但是这个视频不是整个时段的，会有断的，为了给用户知道这段录像哪里断了，需要而外处理\n      //sldierReducer这里是为了算出播放中，遇到断片的情况，进行一些跳过处理\n      sliderReducer: _util.standardReducer,\n      clear: function clear(state, _ref) {\n        var payload = _ref.payload;\n        cancel && cancel();\n        return this.state;\n      }\n    },\n    sagas: {\n      fragmentSaga: /*#__PURE__*/_regenerator2.default.mark(function fragmentSaga(_ref2, _ref3) {\n        var payload = _ref2.payload;\n        var put = _ref3.put,\n            call = _ref3.call;\n\n        var data, _data, total, fragments, total_begin, total_end, dataAfterAdapter, duration, gaps, fragmentData;\n\n        return _regenerator2.default.wrap(function fragmentSaga$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = void 0;\n\n                if (!(0, _isString2.default)(payload)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 4;\n                return call(fetchFragment, payload);\n\n              case 4:\n                data = _context.sent;\n                _context.next = 8;\n                break;\n\n              case 7:\n                //防止源数据被改动\n                data = payload;\n\n              case 8:\n                if (data) {\n                  _context.next = 10;\n                  break;\n                }\n\n                return _context.abrupt('return');\n\n              case 10:\n                _data = data, total = _data.total, fragments = _data.fragments;\n\n                if (!(!total || !fragments)) {\n                  _context.next = 13;\n                  break;\n                }\n\n                return _context.abrupt('return');\n\n              case 13:\n                //需要做safari的日期格式兼容。\n                total_begin = +new Date(total.begin.replace(/-/g, '/')) / 1000;\n                total_end = +new Date(total.end.replace(/-/g, '/')) / 1000;\n                dataAfterAdapter = [];\n                duration = total_end - total_begin;\n                gaps = 0;\n                fragments.forEach(function (obj) {\n                  if (!obj.begin || !obj.end) {\n                    return;\n                  }\n\n                  var obj_begin = +new Date(obj.begin.replace(/-/g, '/')) / 1000;\n                  var obj_end = +new Date(obj.end.replace(/-/g, '/')) / 1000; // duration中无视频的开始结束的时间，按秒算\n\n                  var begin = obj_begin - total_begin;\n                  var end = obj_end - total_begin; // duration 无视频的大小，按秒算\n\n                  var gap = obj_end - obj_begin;\n                  gaps += gap;\n                  dataAfterAdapter.push({\n                    gap: gap,\n                    //包括前面的gap\n                    gaps: gaps,\n                    begin: begin,\n                    end: end\n                  });\n                });\n                fragmentData = {};\n\n                if (dataAfterAdapter.length > 0) {\n                  fragmentData = {\n                    duration: duration,\n                    timeDuration: (0, _util.hms)(duration),\n                    data: dataAfterAdapter\n                  };\n                }\n\n                fragmentData.videoBeginDateTime = total_begin;\n                _context.next = 24;\n                return put({\n                  type: 'fragmentReducer',\n                  payload: fragmentData\n                });\n\n              case 24:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, fragmentSaga, this);\n      })\n    }\n  };\n};\n\nvar _util = require('../utils/util');\n\nvar _fetch = require('../utils/fetch');\n\nvar _fetch2 = _interopRequireDefault(_fetch);\n\nvar _isString = require('lodash/isString');\n\nvar _isString2 = _interopRequireDefault(_isString);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} //请求取消函数\n\n\nvar cancel = void 0;\n\nfunction fetchFragment(url, params) {\n  var cancelSource = _fetch2.default.getCancelSource();\n\n  cancel = cancelSource.cancel;\n  return _fetch2.default.get(url, {\n    params: params,\n    cancelToken: cancelSource.token\n  }).catch(function (error) {\n    return false;\n  });\n}\n\nvar namespace = exports.namespace = 'fragment';","map":{"version":3,"sources":["C:/Users/MaGent/Desktop/video/video/node_modules/html5-player/libs/model/fragment.js"],"names":["Object","defineProperty","exports","value","namespace","undefined","_regenerator","require","_regenerator2","_interopRequireDefault","default","state","percent","duration","timeDuration","data","reducers","fragmentReducer","_util","standardReducer","sliderReducer","clear","_ref","payload","cancel","sagas","fragmentSaga","mark","_ref2","_ref3","put","call","_data","total","fragments","total_begin","total_end","dataAfterAdapter","gaps","fragmentData","wrap","fragmentSaga$","_context","prev","next","_isString2","fetchFragment","sent","abrupt","Date","begin","replace","end","forEach","obj","obj_begin","obj_end","gap","push","length","hms","videoBeginDateTime","type","stop","_fetch","_fetch2","_isString","__esModule","url","params","cancelSource","getCancelSource","get","cancelToken","token","catch","error"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.namespace = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nexports.default = function () {\n  return {\n    namespace: namespace,\n    state: {\n      percent: null,\n      duration: null,\n      timeDuration: null,\n      data: null\n    },\n    reducers: {\n      fragmentReducer: _util.standardReducer,\n      //合成录像，摄像头上传视频会中断，会分成几个视频，然后这几个视频会合并成一个视频\n      //但是这个视频不是整个时段的，会有断的，为了给用户知道这段录像哪里断了，需要而外处理\n      //sldierReducer这里是为了算出播放中，遇到断片的情况，进行一些跳过处理\n      sliderReducer: _util.standardReducer,\n      clear: function clear(state, _ref) {\n        var payload = _ref.payload;\n\n        cancel && cancel();\n        return this.state;\n      }\n    },\n    sagas: {\n      fragmentSaga: /*#__PURE__*/_regenerator2.default.mark(function fragmentSaga(_ref2, _ref3) {\n        var payload = _ref2.payload;\n        var put = _ref3.put,\n            call = _ref3.call;\n\n        var data, _data, total, fragments, total_begin, total_end, dataAfterAdapter, duration, gaps, fragmentData;\n\n        return _regenerator2.default.wrap(function fragmentSaga$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = void 0;\n\n                if (!(0, _isString2.default)(payload)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 4;\n                return call(fetchFragment, payload);\n\n              case 4:\n                data = _context.sent;\n                _context.next = 8;\n                break;\n\n              case 7:\n                //防止源数据被改动\n                data = payload;\n\n              case 8:\n                if (data) {\n                  _context.next = 10;\n                  break;\n                }\n\n                return _context.abrupt('return');\n\n              case 10:\n                _data = data, total = _data.total, fragments = _data.fragments;\n\n                if (!(!total || !fragments)) {\n                  _context.next = 13;\n                  break;\n                }\n\n                return _context.abrupt('return');\n\n              case 13:\n                //需要做safari的日期格式兼容。\n                total_begin = +new Date(total.begin.replace(/-/g, '/')) / 1000;\n                total_end = +new Date(total.end.replace(/-/g, '/')) / 1000;\n                dataAfterAdapter = [];\n                duration = total_end - total_begin;\n                gaps = 0;\n\n                fragments.forEach(function (obj) {\n                  if (!obj.begin || !obj.end) {\n                    return;\n                  }\n                  var obj_begin = +new Date(obj.begin.replace(/-/g, '/')) / 1000;\n                  var obj_end = +new Date(obj.end.replace(/-/g, '/')) / 1000;\n                  // duration中无视频的开始结束的时间，按秒算\n                  var begin = obj_begin - total_begin;\n                  var end = obj_end - total_begin;\n                  // duration 无视频的大小，按秒算\n                  var gap = obj_end - obj_begin;\n                  gaps += gap;\n                  dataAfterAdapter.push({\n                    gap: gap,\n                    //包括前面的gap\n                    gaps: gaps,\n                    begin: begin,\n                    end: end\n                  });\n                });\n                fragmentData = {};\n\n                if (dataAfterAdapter.length > 0) {\n                  fragmentData = {\n                    duration: duration,\n                    timeDuration: (0, _util.hms)(duration),\n                    data: dataAfterAdapter\n                  };\n                }\n                fragmentData.videoBeginDateTime = total_begin;\n                _context.next = 24;\n                return put({\n                  type: 'fragmentReducer',\n                  payload: fragmentData\n                });\n\n              case 24:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, fragmentSaga, this);\n      })\n    }\n  };\n};\n\nvar _util = require('../utils/util');\n\nvar _fetch = require('../utils/fetch');\n\nvar _fetch2 = _interopRequireDefault(_fetch);\n\nvar _isString = require('lodash/isString');\n\nvar _isString2 = _interopRequireDefault(_isString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//请求取消函数\nvar cancel = void 0;\n\nfunction fetchFragment(url, params) {\n  var cancelSource = _fetch2.default.getCancelSource();\n  cancel = cancelSource.cancel;\n  return _fetch2.default.get(url, { params: params, cancelToken: cancelSource.token }).catch(function (error) {\n    return false;\n  });\n}\n\nvar namespace = exports.namespace = 'fragment';"]},"metadata":{},"sourceType":"script"}