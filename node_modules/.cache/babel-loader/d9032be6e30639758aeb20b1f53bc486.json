{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (elementContext, documentContext, changeCallback) {\n  var _requestFullscreen = elementContext.requestFullscreen || elementContext.webkitRequestFullscreen || elementContext.webkitRequestFullScreen || elementContext.mozRequestFullScreen || elementContext.msRequestFullscreen;\n\n  var _exitFullscreen = documentContext.exitFullscreen || documentContext.webkitExitFullscreen || documentContext.webkitCancelFullScreen || documentContext.mozCancelFullScreen || documentContext.msExitFullscreen;\n\n  var _supportsDomFullscreen = !!(_requestFullscreen && _exitFullscreen);\n\n  for (var i = DOCUMENT_FULLSCREEN_EVENTS.length; i--;) {\n    documentContext.addEventListener(DOCUMENT_FULLSCREEN_EVENTS[i], changeCallback);\n  }\n\n  return {\n    events: DOCUMENT_FULLSCREEN_EVENTS,\n    supportsDomFullscreen: function supportsDomFullscreen() {\n      return _supportsDomFullscreen;\n    },\n    requestFullscreen: function requestFullscreen() {\n      _requestFullscreen.apply(elementContext);\n    },\n    exitFullscreen: function exitFullscreen() {\n      _exitFullscreen.apply(documentContext);\n    },\n    fullscreenElement: function fullscreenElement() {\n      return documentContext.fullscreenElement || documentContext.webkitCurrentFullScreenElement || documentContext.mozFullScreenElement || documentContext.msFullscreenElement;\n    },\n    remove: function remove() {\n      for (var _i = DOCUMENT_FULLSCREEN_EVENTS.length; _i--;) {\n        documentContext.removeEventListener(DOCUMENT_FULLSCREEN_EVENTS[_i], changeCallback);\n      }\n    }\n  };\n};\n\nvar DOCUMENT_FULLSCREEN_EVENTS = ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'];","map":{"version":3,"sources":["C:/Users/MaGent/Desktop/video/video/node_modules/html5-player/libs/utils/dom/fullscreen.js"],"names":["Object","defineProperty","exports","value","default","elementContext","documentContext","changeCallback","_requestFullscreen","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","_exitFullscreen","exitFullscreen","webkitExitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","_supportsDomFullscreen","i","DOCUMENT_FULLSCREEN_EVENTS","length","addEventListener","events","supportsDomFullscreen","apply","fullscreenElement","webkitCurrentFullScreenElement","mozFullScreenElement","msFullscreenElement","remove","_i","removeEventListener"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIAD,OAAO,CAACE,OAAR,GAAkB,UAAUC,cAAV,EAA0BC,eAA1B,EAA2CC,cAA3C,EAA2D;AAC3E,MAAIC,kBAAkB,GAAGH,cAAc,CAACI,iBAAf,IAAoCJ,cAAc,CAACK,uBAAnD,IAA8EL,cAAc,CAACM,uBAA7F,IAAwHN,cAAc,CAACO,oBAAvI,IAA+JP,cAAc,CAACQ,mBAAvM;;AAEA,MAAIC,eAAe,GAAGR,eAAe,CAACS,cAAhB,IAAkCT,eAAe,CAACU,oBAAlD,IAA0EV,eAAe,CAACW,sBAA1F,IAAoHX,eAAe,CAACY,mBAApI,IAA2JZ,eAAe,CAACa,gBAAjM;;AAEA,MAAIC,sBAAsB,GAAG,CAAC,EAAEZ,kBAAkB,IAAIM,eAAxB,CAA9B;;AAEA,OAAK,IAAIO,CAAC,GAAGC,0BAA0B,CAACC,MAAxC,EAAgDF,CAAC,EAAjD,GAAsD;AACpDf,IAAAA,eAAe,CAACkB,gBAAhB,CAAiCF,0BAA0B,CAACD,CAAD,CAA3D,EAAgEd,cAAhE;AACD;;AAED,SAAO;AACLkB,IAAAA,MAAM,EAAEH,0BADH;AAELI,IAAAA,qBAAqB,EAAE,SAASA,qBAAT,GAAiC;AACtD,aAAON,sBAAP;AACD,KAJI;AAKLX,IAAAA,iBAAiB,EAAE,SAASA,iBAAT,GAA6B;AAC9CD,MAAAA,kBAAkB,CAACmB,KAAnB,CAAyBtB,cAAzB;AACD,KAPI;AAQLU,IAAAA,cAAc,EAAE,SAASA,cAAT,GAA0B;AACxCD,MAAAA,eAAe,CAACa,KAAhB,CAAsBrB,eAAtB;AACD,KAVI;AAWLsB,IAAAA,iBAAiB,EAAE,SAASA,iBAAT,GAA6B;AAC9C,aAAOtB,eAAe,CAACsB,iBAAhB,IAAqCtB,eAAe,CAACuB,8BAArD,IAAuFvB,eAAe,CAACwB,oBAAvG,IAA+HxB,eAAe,CAACyB,mBAAtJ;AACD,KAbI;AAcLC,IAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,WAAK,IAAIC,EAAE,GAAGX,0BAA0B,CAACC,MAAzC,EAAiDU,EAAE,EAAnD,GAAwD;AACtD3B,QAAAA,eAAe,CAAC4B,mBAAhB,CAAoCZ,0BAA0B,CAACW,EAAD,CAA9D,EAAoE1B,cAApE;AACD;AACF;AAlBI,GAAP;AAoBD,CA/BD;;AAiCA,IAAIe,0BAA0B,GAAG,CAAC,kBAAD,EAAqB,wBAArB,EAA+C,qBAA/C,EAAsE,oBAAtE,CAAjC","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (elementContext, documentContext, changeCallback) {\n  var _requestFullscreen = elementContext.requestFullscreen || elementContext.webkitRequestFullscreen || elementContext.webkitRequestFullScreen || elementContext.mozRequestFullScreen || elementContext.msRequestFullscreen;\n\n  var _exitFullscreen = documentContext.exitFullscreen || documentContext.webkitExitFullscreen || documentContext.webkitCancelFullScreen || documentContext.mozCancelFullScreen || documentContext.msExitFullscreen;\n\n  var _supportsDomFullscreen = !!(_requestFullscreen && _exitFullscreen);\n\n  for (var i = DOCUMENT_FULLSCREEN_EVENTS.length; i--;) {\n    documentContext.addEventListener(DOCUMENT_FULLSCREEN_EVENTS[i], changeCallback);\n  }\n\n  return {\n    events: DOCUMENT_FULLSCREEN_EVENTS,\n    supportsDomFullscreen: function supportsDomFullscreen() {\n      return _supportsDomFullscreen;\n    },\n    requestFullscreen: function requestFullscreen() {\n      _requestFullscreen.apply(elementContext);\n    },\n    exitFullscreen: function exitFullscreen() {\n      _exitFullscreen.apply(documentContext);\n    },\n    fullscreenElement: function fullscreenElement() {\n      return documentContext.fullscreenElement || documentContext.webkitCurrentFullScreenElement || documentContext.mozFullScreenElement || documentContext.msFullscreenElement;\n    },\n    remove: function remove() {\n      for (var _i = DOCUMENT_FULLSCREEN_EVENTS.length; _i--;) {\n        documentContext.removeEventListener(DOCUMENT_FULLSCREEN_EVENTS[_i], changeCallback);\n      }\n    }\n  };\n};\n\nvar DOCUMENT_FULLSCREEN_EVENTS = ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'];"]},"metadata":{},"sourceType":"script"}