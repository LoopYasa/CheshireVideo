{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\MaGent\\\\Desktop\\\\video\\\\video\\\\src\\\\components\\\\PlayerFanju\\\\index.jsx\";\nimport React, { Component } from 'react'; // import qs from 'query-string'\n\nimport axios from 'axios';\nimport Html5Player from 'html5-player'; // import LMPlayer from 'lm-player'\n// import { ReactFlvPlayer } from 'react-flv-player'\n// import ReactPlayer from 'react-player'\n\nimport { PageHeader, Drawer } from 'antd';\nimport { localStorageGet, localStorageSet } from '../../StorageGS';\nimport 'html5-player/libs/assets/css/style.css';\nimport './index.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class index extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      nowurl: \"\",\n      nowbv: \"\",\n      nowcid: \"\",\n      all: [],\n      visible: false,\n      isShow: \"\"\n    };\n\n    this.showDrawer = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.onClose = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.setNowvideo = (bvid, cid) => {\n      console.log(bvid, cid, localStorageGet(\"cookie\"));\n\n      const _this = this; // 设置被用户点击集数的块背景高亮\n\n\n      _this.setState({\n        isShow: bvid\n      });\n\n      axios.get(\"http://localhost:3001/api/clickvideo\", {\n        params: {\n          nowbv: bvid,\n          nowcid: cid,\n          cookie: localStorageGet(\"cookie\")\n        }\n      }).then(function (response) {\n        _this.setState({\n          nowurl: response.data.data.durl[0].url\n        });\n      }).catch(function (err) {\n        console.log(err);\n      });\n    };\n  }\n\n  // 接受参数\n  componentDidMount() {\n    const _this = this; // let { cookie, season_id, Episode } = this.props.location.state\n\n\n    if (this.props.location.state === null) {\n      console.log(\"这是从搜索页面来的\");\n    } else {\n      console.log(\"这是从new页面来的\");\n    }\n\n    console.log(this.props.location); // if( cookie !== \"\" ) {\n    //     localStorageSet(\"cookie\",cookie)\n    // }else {\n    //     cookie = localStorageGet(\"cookie\")\n    // }\n    // // 获取点进番剧的信息\n    // axios.get(\"http://localhost:3001/api/seasoninfo\", {\n    //     params: { season_id }\n    // })\n    // .then ( function (response) {\n    //     _this.setState({\n    //         all: response.data\n    //     })\n    //     let result = response.data\n    //     console.log(result)\n    //     for (var i = 0;i < result.length; i++) {\n    //         if (Number(result[i].title) === Number(Episode)) {\n    //             let nowbv = result[i].bvid\n    //             let nowcid = result[i].cid\n    //             _this.setState({\n    //                 nowbv,\n    //                 nowcid\n    //             })\n    //             // 获取点击进来的番剧播放链接\n    //             axios.get(\"http://localhost:3001/api/clickvideo\", {\n    //                 params: {\n    //                     nowbv,\n    //                     nowcid,\n    //                     cookie\n    //                 }\n    //             })\n    //             .then( function (response) {\n    //                 _this.setState({\n    //                     nowurl: response.data.data.durl[0].url,\n    //                     isShow: nowbv\n    //                 })\n    //             })\n    //             .catch( function (err) {\n    //                 console.log(err)\n    //             })\n    //         }\n    //     }\n    // })\n    // .catch ( function (err) {\n    //     console.log(err)\n    // })     \n  } // 展示抽屉调用函数\n\n\n  render() {\n    const {\n      nowurl,\n      all\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"video-container-top\",\n        children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n          className: \"site-page-header\",\n          onBack: () => this.props.history.go(-1),\n          title: \"\\u8FD4\\u56DE\",\n          subTitle: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"showDrawer\",\n          onClick: this.showDrawer,\n          children: \"\\u96C6 \\u6570\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n          placement: \"right\",\n          closable: false,\n          className: \"index\",\n          maskClosable: true,\n          onClose: this.onClose,\n          bodyStyle: {\n            backgroundColor: \"#3c3a3a\"\n          },\n          visible: this.state.visible,\n          getContainer: \"#video-container-top\",\n          style: {\n            position: 'absolute'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"countAr\",\n            children: all.map(info => {\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                className: this.state.isShow === info.bvid ? 'is-show' : '',\n                onClick: () => this.setNowvideo(info.bvid, info.cid),\n                children: info.title\n              }, info.bvid, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Html5Player, {\n        file: nowurl,\n        autoplay: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/MaGent/Desktop/video/video/src/components/PlayerFanju/index.jsx"],"names":["React","Component","axios","Html5Player","PageHeader","Drawer","localStorageGet","localStorageSet","index","state","nowurl","nowbv","nowcid","all","visible","isShow","showDrawer","setState","onClose","setNowvideo","bvid","cid","console","log","_this","get","params","cookie","then","response","data","durl","url","catch","err","componentDidMount","props","location","render","history","go","backgroundColor","position","map","info","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n// import qs from 'query-string'\r\nimport axios from 'axios';\r\n\r\nimport Html5Player from 'html5-player'\r\n// import LMPlayer from 'lm-player'\r\n// import { ReactFlvPlayer } from 'react-flv-player'\r\n// import ReactPlayer from 'react-player'\r\n\r\nimport { PageHeader, Drawer } from 'antd';\r\nimport { localStorageGet, localStorageSet } from '../../StorageGS';\r\n\r\nimport 'html5-player/libs/assets/css/style.css'\r\nimport './index.scss'\r\n\r\nexport default class index extends Component {\r\n    state = {\r\n        nowurl: \"\",\r\n        nowbv: \"\",\r\n        nowcid: \"\",\r\n        all: [],\r\n        visible: false,\r\n        isShow:\"\"\r\n    }\r\n\r\n    // 接受参数\r\n    componentDidMount(){\r\n        const _this = this\r\n        // let { cookie, season_id, Episode } = this.props.location.state\r\n        if(this.props.location.state === null) {\r\n            console.log(\"这是从搜索页面来的\")\r\n        } else {\r\n            console.log(\"这是从new页面来的\")\r\n        }\r\n        console.log(this.props.location)\r\n        // if( cookie !== \"\" ) {\r\n        //     localStorageSet(\"cookie\",cookie)\r\n        // }else {\r\n        //     cookie = localStorageGet(\"cookie\")\r\n        // }\r\n        // // 获取点进番剧的信息\r\n        // axios.get(\"http://localhost:3001/api/seasoninfo\", {\r\n        //     params: { season_id }\r\n        // })\r\n        // .then ( function (response) {\r\n        //     _this.setState({\r\n        //         all: response.data\r\n        //     })\r\n        //     let result = response.data\r\n        //     console.log(result)\r\n        //     for (var i = 0;i < result.length; i++) {\r\n        //         if (Number(result[i].title) === Number(Episode)) {\r\n        //             let nowbv = result[i].bvid\r\n        //             let nowcid = result[i].cid\r\n        //             _this.setState({\r\n        //                 nowbv,\r\n        //                 nowcid\r\n        //             })\r\n                    \r\n        //             // 获取点击进来的番剧播放链接\r\n        //             axios.get(\"http://localhost:3001/api/clickvideo\", {\r\n        //                 params: {\r\n        //                     nowbv,\r\n        //                     nowcid,\r\n        //                     cookie\r\n        //                 }\r\n        //             })\r\n        //             .then( function (response) {\r\n        //                 _this.setState({\r\n        //                     nowurl: response.data.data.durl[0].url,\r\n        //                     isShow: nowbv\r\n        //                 })\r\n        //             })\r\n        //             .catch( function (err) {\r\n        //                 console.log(err)\r\n        //             })\r\n        //         }\r\n        //     }\r\n        // })\r\n        // .catch ( function (err) {\r\n        //     console.log(err)\r\n        // })     \r\n    }\r\n\r\n    // 展示抽屉调用函数\r\n    showDrawer = () => {\r\n        this.setState({\r\n          visible: true,\r\n        });\r\n      };\r\n    \r\n    // 关闭抽屉调用函数\r\n    onClose = () => {\r\n        this.setState({\r\n          visible: false,\r\n        });\r\n      };\r\n\r\n    // 将当前播放视频设置为用户点击的对应集数\r\n    setNowvideo = (bvid, cid) => {\r\n        console.log(bvid, cid, localStorageGet(\"cookie\"))\r\n        const _this = this\r\n        // 设置被用户点击集数的块背景高亮\r\n        _this.setState({\r\n            isShow: bvid\r\n        })\r\n        axios.get(\"http://localhost:3001/api/clickvideo\", {\r\n            params: {\r\n                nowbv: bvid,\r\n                nowcid: cid,\r\n                cookie: localStorageGet(\"cookie\")\r\n            }\r\n        })\r\n        .then( function (response) {\r\n            _this.setState({\r\n                nowurl: response.data.data.durl[0].url\r\n            })\r\n        })\r\n        .catch( function (err) {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { nowurl, all } = this.state\r\n        return (\r\n            <div className=\"video-container\">\r\n                <div id=\"video-container-top\">\r\n                    <PageHeader\r\n                        className=\"site-page-header\"\r\n                        onBack={() => this.props.history.go(-1)}\r\n                        title=\"返回\"\r\n                        subTitle=\"\"                    \r\n                    />\r\n                    <button className=\"showDrawer\" onClick={ this.showDrawer }>集 数</button>\r\n\r\n                    <Drawer\r\n                    placement=\"right\"\r\n                    closable={false}\r\n                    className=\"index\"\r\n                    maskClosable={true}\r\n                    onClose={this.onClose}               \r\n                    bodyStyle={{\r\n                        backgroundColor:\"#3c3a3a\"\r\n                    }}\r\n                    visible={this.state.visible}\r\n                    getContainer={\"#video-container-top\"}\r\n                    style={{ position: 'absolute' }}\r\n                    >\r\n                        <div className=\"countAr\">\r\n                            {\r\n                                all.map((info) => {\r\n                                    return(\r\n                                        <p className={ this.state.isShow === info.bvid ? 'is-show' : '' }  key={ info.bvid } onClick={ () => this.setNowvideo(info.bvid, info.cid) }>{ info.title }</p>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                    </Drawer>\r\n                </div>\r\n                \r\n                {/* 播放器一  卡顿 */}\r\n                <Html5Player\r\n                file={ nowurl }\r\n                autoplay={ false }\r\n                />\r\n\r\n                {/* 播放器二  卡顿 */}\r\n                {/* <LMPlayer \r\n                file={ nowurl }\r\n                muted=\"false\"\r\n                autoplay={ true }\r\n                /> */}\r\n\r\n                {/* 播放器三  卡顿*/}\r\n                                \r\n                {/* <ReactFlvPlayer\r\n                url={ nowurl }\r\n                heigh=\"800px\"\r\n                width=\"800px\"\r\n                /> */}\r\n\r\n                \r\n                {/* <ReactPlayer \r\n                url={ nowurl }\r\n                width=\"80%\"\r\n                height=\"80%\"\r\n                playing={true}\r\n                controls\r\n                /> */}\r\n\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}