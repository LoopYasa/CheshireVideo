{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nexports.on = on;\nexports.once = once;\nexports.off = off;\nexports.trigger = trigger;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} //     Backbone.js 1.1.2\n// Backbone.Events\n// ---------------\n// A module that can be mixed in to *any object* in order to provide it with\n// custom events. You may bind with `on` or remove with `off` callback\n// functions to an event; `trigger`-ing an event fires all callbacks in\n// succession.\n//\n//     var object = {};\n//     Object.assign(object, Backbone.Events);\n//     object.on('expand', function(){ alert('expanded'); });\n//     object.trigger('expand');\n//\n\n\nvar slice = [].slice; // Bind an event to a `callback` function. Passing `\"all\"` will bind\n// the callback to all events fired.\n\nfunction on(name, callback, context) {\n  if (!eventsApi(this, 'on', name, [callback, context]) || !callback) {\n    return this;\n  }\n\n  var _events = this._events || (this._events = {});\n\n  var events = _events[name] || (_events[name] = []);\n  events.push({\n    callback: callback,\n    context: context\n  });\n  return this;\n} // Bind an event to only be triggered a single time. After the first time\n// the callback is invoked, it will be removed.\n\n\nfunction once(name, callback, context) {\n  if (!eventsApi(this, 'once', name, [callback, context]) || !callback) {\n    return this;\n  }\n\n  var count = 0;\n  var self = this;\n\n  var onceCallback = function onceCallback() {\n    if (count++) {\n      return;\n    }\n\n    self.off(name, onceCallback);\n    callback.apply(this, arguments);\n  };\n\n  onceCallback._callback = callback;\n  return this.on(name, onceCallback, context);\n} // Remove one or many callbacks. If `context` is null, removes all\n// callbacks with that function. If `callback` is null, removes all\n// callbacks for the event. If `name` is null, removes all bound\n// callbacks for all events.\n\n\nfunction off(name, callback, context) {\n  if (!this._events || !eventsApi(this, 'off', name, [callback, context])) {\n    return this;\n  }\n\n  if (!name && !callback && !context) {\n    delete this._events;\n    return this;\n  }\n\n  var names = name ? [name] : (0, _keys2.default)(this._events);\n\n  for (var i = 0, l = names.length; i < l; i++) {\n    name = names[i];\n    var events = this._events[name];\n\n    if (events) {\n      var retain = this._events[name] = [];\n\n      if (callback || context) {\n        for (var j = 0, k = events.length; j < k; j++) {\n          var ev = events[j];\n\n          if (callback && callback !== ev.callback && callback !== ev.callback._callback || context && context !== ev.context) {\n            retain.push(ev);\n          }\n        }\n      }\n\n      if (!retain.length) {\n        delete this._events[name];\n      }\n    }\n  }\n\n  return this;\n} // Trigger one or many events, firing all bound callbacks. Callbacks are\n// passed the same arguments as `trigger` is, apart from the event name\n// (unless you're listening on `\"all\"`, which will cause your callback to\n// receive the true name of the event as the first argument).\n\n\nfunction trigger(name) {\n  if (!this._events) {\n    return this;\n  }\n\n  var args = slice.call(arguments, 1);\n\n  if (!eventsApi(this, 'trigger', name, args)) {\n    return this;\n  }\n\n  var events = this._events[name];\n  var allEvents = this._events.all;\n\n  if (events) {\n    triggerEvents(events, args, this);\n  }\n\n  if (allEvents) {\n    triggerEvents(allEvents, arguments, this);\n  }\n\n  return this;\n} // export function triggerSafe(name) {\n//   if (!this._events) {\n//     return this;\n//   }\n//   const args = slice.call(arguments, 1);\n//   if (!eventsApi(this, 'trigger', name, args)) {\n//     return this;\n//   }\n//   const events = this._events[name];\n//   const allEvents = this._events.all;\n//   if (events) {\n//     triggerEvents(events, args, this, name);\n//   }\n//   if (allEvents) {\n//     triggerEvents(allEvents, arguments, this, name);\n//   }\n//   return this;\n// }\n// Regular expression used to split event strings.\n\n\nvar eventSplitter = /\\s+/; // Implement fancy features of the Events API such as multiple event\n// names `\"change blur\"` and jQuery-style event maps `{change: action}`\n// in terms of the existing API.\n\nfunction eventsApi(obj, action, name, rest) {\n  if (!name) {\n    return true;\n  } // Handle event maps.\n\n\n  if ((typeof name === 'undefined' ? 'undefined' : (0, _typeof3.default)(name)) === 'object') {\n    for (var key in name) {\n      if (Object.prototype.hasOwnProperty.call(name, key)) {\n        obj[action].apply(obj, [key, name[key]].concat(rest));\n      }\n    }\n\n    return false;\n  } // Handle space separated event names.\n\n\n  if (eventSplitter.test(name)) {\n    var names = name.split(eventSplitter);\n\n    for (var i = 0, l = names.length; i < l; i++) {\n      obj[action].apply(obj, [names[i]].concat(rest));\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction triggerEvents(events, args, context, catchExceptionsForName) {\n  var i = -1;\n  var l = events.length;\n\n  while (++i < l) {\n    var ev = events[i];\n\n    if (catchExceptionsForName) {\n      try {\n        ev.callback.apply(ev.context || context, args);\n      } catch (e) {\n        /* eslint-disable no-console */\n        console.error('Error in \"' + catchExceptionsForName + '\" event handler:', e);\n      }\n    } else {\n      ev.callback.apply(ev.context || context, args);\n    }\n  }\n}\n\nexports.default = {\n  on: on,\n  once: once,\n  off: off,\n  trigger: trigger\n};","map":{"version":3,"sources":["C:/Users/MaGent/Desktop/video/video/node_modules/html5-player/libs/utils/event.js"],"names":["Object","defineProperty","exports","value","_typeof2","require","_typeof3","_interopRequireDefault","_keys","_keys2","on","once","off","trigger","obj","__esModule","default","slice","name","callback","context","eventsApi","_events","events","push","count","self","onceCallback","apply","arguments","_callback","names","i","l","length","retain","j","k","ev","args","call","allEvents","all","triggerEvents","eventSplitter","action","rest","key","prototype","hasOwnProperty","concat","test","split","catchExceptionsForName","e","console","error"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _keys = require('babel-runtime/core-js/object/keys');\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nexports.on = on;\nexports.once = once;\nexports.off = off;\nexports.trigger = trigger;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//     Backbone.js 1.1.2\n\n// Backbone.Events\n// ---------------\n\n// A module that can be mixed in to *any object* in order to provide it with\n// custom events. You may bind with `on` or remove with `off` callback\n// functions to an event; `trigger`-ing an event fires all callbacks in\n// succession.\n//\n//     var object = {};\n//     Object.assign(object, Backbone.Events);\n//     object.on('expand', function(){ alert('expanded'); });\n//     object.trigger('expand');\n//\n\nvar slice = [].slice;\n\n// Bind an event to a `callback` function. Passing `\"all\"` will bind\n// the callback to all events fired.\nfunction on(name, callback, context) {\n  if (!eventsApi(this, 'on', name, [callback, context]) || !callback) {\n    return this;\n  }\n  var _events = this._events || (this._events = {});\n  var events = _events[name] || (_events[name] = []);\n  events.push({ callback: callback, context: context });\n  return this;\n}\n\n// Bind an event to only be triggered a single time. After the first time\n// the callback is invoked, it will be removed.\nfunction once(name, callback, context) {\n  if (!eventsApi(this, 'once', name, [callback, context]) || !callback) {\n    return this;\n  }\n  var count = 0;\n  var self = this;\n  var onceCallback = function onceCallback() {\n    if (count++) {\n      return;\n    }\n    self.off(name, onceCallback);\n    callback.apply(this, arguments);\n  };\n  onceCallback._callback = callback;\n  return this.on(name, onceCallback, context);\n}\n\n// Remove one or many callbacks. If `context` is null, removes all\n// callbacks with that function. If `callback` is null, removes all\n// callbacks for the event. If `name` is null, removes all bound\n// callbacks for all events.\nfunction off(name, callback, context) {\n  if (!this._events || !eventsApi(this, 'off', name, [callback, context])) {\n    return this;\n  }\n  if (!name && !callback && !context) {\n    delete this._events;\n    return this;\n  }\n  var names = name ? [name] : (0, _keys2.default)(this._events);\n  for (var i = 0, l = names.length; i < l; i++) {\n    name = names[i];\n    var events = this._events[name];\n    if (events) {\n      var retain = this._events[name] = [];\n      if (callback || context) {\n        for (var j = 0, k = events.length; j < k; j++) {\n          var ev = events[j];\n          if (callback && callback !== ev.callback && callback !== ev.callback._callback || context && context !== ev.context) {\n            retain.push(ev);\n          }\n        }\n      }\n      if (!retain.length) {\n        delete this._events[name];\n      }\n    }\n  }\n  return this;\n}\n\n// Trigger one or many events, firing all bound callbacks. Callbacks are\n// passed the same arguments as `trigger` is, apart from the event name\n// (unless you're listening on `\"all\"`, which will cause your callback to\n// receive the true name of the event as the first argument).\nfunction trigger(name) {\n  if (!this._events) {\n    return this;\n  }\n  var args = slice.call(arguments, 1);\n  if (!eventsApi(this, 'trigger', name, args)) {\n    return this;\n  }\n  var events = this._events[name];\n  var allEvents = this._events.all;\n  if (events) {\n    triggerEvents(events, args, this);\n  }\n  if (allEvents) {\n    triggerEvents(allEvents, arguments, this);\n  }\n  return this;\n}\n\n// export function triggerSafe(name) {\n//   if (!this._events) {\n//     return this;\n//   }\n//   const args = slice.call(arguments, 1);\n//   if (!eventsApi(this, 'trigger', name, args)) {\n//     return this;\n//   }\n//   const events = this._events[name];\n//   const allEvents = this._events.all;\n//   if (events) {\n//     triggerEvents(events, args, this, name);\n//   }\n//   if (allEvents) {\n//     triggerEvents(allEvents, arguments, this, name);\n//   }\n//   return this;\n// }\n\n// Regular expression used to split event strings.\nvar eventSplitter = /\\s+/;\n\n// Implement fancy features of the Events API such as multiple event\n// names `\"change blur\"` and jQuery-style event maps `{change: action}`\n// in terms of the existing API.\nfunction eventsApi(obj, action, name, rest) {\n  if (!name) {\n    return true;\n  }\n  // Handle event maps.\n  if ((typeof name === 'undefined' ? 'undefined' : (0, _typeof3.default)(name)) === 'object') {\n    for (var key in name) {\n      if (Object.prototype.hasOwnProperty.call(name, key)) {\n        obj[action].apply(obj, [key, name[key]].concat(rest));\n      }\n    }\n    return false;\n  }\n  // Handle space separated event names.\n  if (eventSplitter.test(name)) {\n    var names = name.split(eventSplitter);\n    for (var i = 0, l = names.length; i < l; i++) {\n      obj[action].apply(obj, [names[i]].concat(rest));\n    }\n    return false;\n  }\n  return true;\n}\n\nfunction triggerEvents(events, args, context, catchExceptionsForName) {\n  var i = -1;\n  var l = events.length;\n  while (++i < l) {\n    var ev = events[i];\n    if (catchExceptionsForName) {\n      try {\n        ev.callback.apply(ev.context || context, args);\n      } catch (e) {\n        /* eslint-disable no-console */\n        console.error('Error in \"' + catchExceptionsForName + '\" event handler:', e);\n      }\n    } else {\n      ev.callback.apply(ev.context || context, args);\n    }\n  }\n}\n\nexports.default = {\n  on: on,\n  once: once,\n  off: off,\n  trigger: trigger\n};"]},"metadata":{},"sourceType":"script"}