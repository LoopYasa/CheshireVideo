{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.namespace = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nexports.default = function () {\n  var state = {\n    fragments: null,\n    currentVideoIndex: null,\n    file: null,\n    percent: 0,\n    defaultCurrentVideoTime: undefined\n  };\n  return {\n    namespace: namespace,\n    state: (0, _extends3.default)({}, state),\n    reducers: {\n      setState: _util.standardReducer,\n      clear: function clear() {\n        return state;\n      }\n    },\n    sagas: {\n      time: /*#__PURE__*/_regenerator2.default.mark(function time(_ref, _ref2) {\n        var payload = _ref.payload;\n        var put = _ref2.put,\n            select = _ref2.select;\n\n        var currentVideoTime, _ref3, fragments, currentVideoIndex, historyDuration, totalHistoryTimeBefore, historyCurrentTime;\n\n        return _regenerator2.default.wrap(function time$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                currentVideoTime = payload.currentTime;\n                _context.next = 3;\n                return select(function (state) {\n                  return state[namespace];\n                });\n\n              case 3:\n                _ref3 = _context.sent;\n                fragments = _ref3.fragments;\n                currentVideoIndex = _ref3.currentVideoIndex;\n                historyDuration = _ref3.duration;\n                totalHistoryTimeBefore = getTotalHistoryTimeBeforeByIndex(currentVideoIndex, fragments);\n                historyCurrentTime = totalHistoryTimeBefore + currentVideoTime;\n                _context.next = 11;\n                return put({\n                  type: 'setSliderPercent',\n                  payload: {\n                    percent: historyCurrentTime / historyDuration,\n                    shouldNotSeek: true\n                  }\n                });\n\n              case 11:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, time, this);\n      }),\n      playNextVideo: /*#__PURE__*/_regenerator2.default.mark(function playNextVideo(_ref4, _ref5) {\n        var payload = _ref4.payload;\n        var put = _ref5.put,\n            select = _ref5.select;\n\n        var _ref6, fragments, currentVideoIndex, historyDuration, nextVideoIndex, totalHistoryTimeBefore, percent;\n\n        return _regenerator2.default.wrap(function playNextVideo$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return select(function (state) {\n                  return state[namespace];\n                });\n\n              case 2:\n                _ref6 = _context2.sent;\n                fragments = _ref6.fragments;\n                currentVideoIndex = _ref6.currentVideoIndex;\n                historyDuration = _ref6.duration;\n                nextVideoIndex = currentVideoIndex + 1;\n                totalHistoryTimeBefore = getTotalHistoryTimeBeforeByIndex(nextVideoIndex, fragments);\n                percent = totalHistoryTimeBefore / historyDuration;\n                _context2.next = 11;\n                return put({\n                  type: 'setSliderPercent',\n                  payload: {\n                    selectedIndex: nextVideoIndex,\n                    percent: percent\n                  }\n                });\n\n              case 11:\n              case 'end':\n                return _context2.stop();\n            }\n          }\n        }, playNextVideo, this);\n      }),\n      setSliderPercent: /*#__PURE__*/_regenerator2.default.mark(function setSliderPercent(_ref7, _ref8) {\n        var payload = _ref7.payload;\n        var put = _ref8.put,\n            select = _ref8.select;\n\n        var percent, selectedIndex, _payload$shouldNotSee, shouldNotSeek, hasDefaultCurrentTime, _ref9, fragments, historyDuration, prevVideoIndex, currentVideoIndex, currentVideoTime, isNoVideo, totalHistoryTimeBefore, _ref10, _ref10$duration, currentVideoDuration, defaultCurrentVideoTime, currentVideoPercent;\n\n        return _regenerator2.default.wrap(function setSliderPercent$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                percent = payload.percent, selectedIndex = payload.selectedIndex, _payload$shouldNotSee = payload.shouldNotSeek, shouldNotSeek = _payload$shouldNotSee === undefined ? false : _payload$shouldNotSee, hasDefaultCurrentTime = payload.hasDefaultCurrentTime;\n                _context3.next = 3;\n                return select(function (state) {\n                  return state[namespace];\n                });\n\n              case 3:\n                _ref9 = _context3.sent;\n                fragments = _ref9.fragments;\n                historyDuration = _ref9.duration;\n                prevVideoIndex = _ref9.currentVideoIndex;\n\n                if (!selectedIndex) {\n                  selectedIndex = getVideoIndexBySliderPercent(percent, historyDuration, fragments);\n                }\n\n                currentVideoIndex = getValidCurrentVideoIndex(selectedIndex, fragments);\n                currentVideoTime = getVideoCurrentTime(currentVideoIndex, historyDuration * percent, fragments);\n                isNoVideo = isNoVideoToBePlayed(selectedIndex, fragments);\n\n                if (isNoVideo) {\n                  //没有可继续播放是视频，需要重头播放\n                  totalHistoryTimeBefore = getTotalHistoryTimeBeforeByIndex(currentVideoIndex, fragments);\n                  percent = totalHistoryTimeBefore / historyDuration;\n                }\n\n                _context3.next = 14;\n                return select(function (state) {\n                  return state[_timeSlider.namespace];\n                });\n\n              case 14:\n                _ref10 = _context3.sent;\n                _ref10$duration = _ref10.duration;\n                currentVideoDuration = _ref10$duration === undefined ? 0 : _ref10$duration;\n                defaultCurrentVideoTime = void 0;\n\n                if (prevVideoIndex !== currentVideoIndex || hasDefaultCurrentTime) {\n                  defaultCurrentVideoTime = currentVideoTime;\n                }\n\n                _context3.next = 21;\n                return put({\n                  type: 'setState',\n                  payload: {\n                    percent: percent,\n                    currentVideoIndex: currentVideoIndex,\n                    file: fragments[currentVideoIndex].file,\n                    defaultCurrentVideoTime: defaultCurrentVideoTime\n                  }\n                });\n\n              case 21:\n                if (!(currentVideoDuration !== 0 && //index 不一样需要播放下一个视频\n                //无需seeking，使用 defaultCurrentVideoTime\n                prevVideoIndex === currentVideoIndex)) {\n                  _context3.next = 27;\n                  break;\n                }\n\n                currentVideoPercent = currentVideoTime / currentVideoDuration;\n\n                if (isNoVideo) {\n                  //没有可继续播放是视频，需要重头播放\n                  currentVideoPercent = 0;\n                }\n\n                if (shouldNotSeek) {\n                  _context3.next = 27;\n                  break;\n                }\n\n                _context3.next = 27;\n                return put({\n                  type: _video.namespace + '/seeking',\n                  payload: {\n                    percent: currentVideoPercent\n                  }\n                });\n\n              case 27:\n                _context3.next = 29;\n                return put({\n                  type: _video.namespace + '/setHistoryCurrentTime',\n                  payload: {\n                    historyCurrentTime: percent * historyDuration\n                  }\n                });\n\n              case 29:\n              case 'end':\n                return _context3.stop();\n            }\n          }\n        }, setSliderPercent, this);\n      }),\n      set: /*#__PURE__*/_regenerator2.default.mark(function set(_ref11, _ref12) {\n        var payload = _ref11.payload;\n        var put = _ref12.put;\n        var fragments, historyDuration, defaultCurrentTime, currentVideoIndex;\n        return _regenerator2.default.wrap(function set$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                fragments = payload.fragments, historyDuration = payload.duration, defaultCurrentTime = payload.defaultCurrentTime;\n                currentVideoIndex = getValidCurrentVideoIndex(0, fragments);\n                _context4.next = 4;\n                return put({\n                  type: 'setState',\n                  payload: {\n                    fragments: fragments,\n                    currentVideoIndex: currentVideoIndex,\n                    file: fragments[currentVideoIndex].file,\n                    duration: historyDuration\n                  }\n                });\n\n              case 4:\n                if (defaultCurrentTime > historyDuration) {\n                  console.error('The defaultCurrentTime is greater than the duration.');\n                  defaultCurrentTime = historyDuration;\n                }\n\n                if (!defaultCurrentTime) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                _context4.next = 8;\n                return put({\n                  type: 'setSliderPercent',\n                  payload: {\n                    percent: defaultCurrentTime / historyDuration,\n                    hasDefaultCurrentTime: true\n                  }\n                });\n\n              case 8:\n              case 'end':\n                return _context4.stop();\n            }\n          }\n        }, set, this);\n      })\n    }\n  };\n};\n\nvar _video = require('./video');\n\nvar _timeSlider = require('./time-slider');\n\nvar _util = require('../utils/util');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar namespace = exports.namespace = 'history';\n\nfunction getValidCurrentVideoIndex(index, fragments) {\n  var k = 0;\n\n  while (!fragments[index] || !fragments[index].file) {\n    if (index >= fragments.length - 1) {\n      index = 0;\n    } else {\n      index++;\n    }\n\n    if (k > fragments.length) {\n      //防止死循环\n      break;\n    }\n\n    k++;\n  }\n\n  return index;\n}\n/**\n * 通过 silder 当前的百分比获取 videoIndex\n * @param {Number} sliderPercent\n * @param {Number} duration history duration\n * @param {Array} fragments historyList fragments\n * @returns {Number} fragments videoIndex\n */\n\n\nfunction getVideoIndexBySliderPercent(sliderPercent, historyDuration, fragments) {\n  var videoIndex = 0;\n  var currentTime = sliderPercent * historyDuration;\n\n  for (var k = 0; k < fragments.length; k++) {\n    var v = fragments[k]; // 左闭右合\n\n    if (v.begin <= currentTime && v.end > currentTime) {\n      videoIndex = k;\n      break;\n    }\n  }\n\n  return videoIndex;\n}\n/**\n * 获取 指定视频段 前面所有视频 所占用的时间，即小于 index 的视频时间\n * @param {Number} index\n * @param {Array} fragments\n * @returns\n */\n\n\nfunction getTotalHistoryTimeBeforeByIndex(index, fragments) {\n  var historyTime = 0;\n\n  for (var k = 0; k < fragments.length; k++) {\n    var v = fragments[k];\n    var gaps = v.end - v.begin;\n\n    if (index > k) {\n      historyTime += gaps;\n    } else {\n      break;\n    }\n  }\n\n  return historyTime;\n}\n\nfunction getVideoCurrentTime(currentVideoIndex, historyCurrentTime, fragments) {\n  var currentVideoTime = historyCurrentTime;\n\n  for (var k = 0; k < fragments.length; k++) {\n    var v = fragments[k];\n    var gaps = v.end - v.begin;\n\n    if (currentVideoIndex > k) {\n      currentVideoTime -= gaps;\n    } else {\n      break;\n    }\n  }\n\n  if (currentVideoTime < 0) {\n    //点击到无视频的位置，才会有负数。\n    currentVideoTime = 0;\n  }\n\n  return currentVideoTime;\n}\n/**\n * 视频播放完成，需要重头播放\n * @returns {Boolean}\n */\n\n\nfunction isNoVideoToBePlayed(selectedIndex, fragments) {\n  var index = getValidCurrentVideoIndex(selectedIndex, fragments);\n\n  if (selectedIndex > index) {\n    return true;\n  }\n}","map":{"version":3,"sources":["C:/Users/MaGent/Desktop/video/video/node_modules/html5-player/libs/model/history.js"],"names":["Object","defineProperty","exports","value","namespace","undefined","_regenerator","require","_regenerator2","_interopRequireDefault","_extends2","_extends3","default","state","fragments","currentVideoIndex","file","percent","defaultCurrentVideoTime","reducers","setState","_util","standardReducer","clear","sagas","time","mark","_ref","_ref2","payload","put","select","currentVideoTime","_ref3","historyDuration","totalHistoryTimeBefore","historyCurrentTime","wrap","time$","_context","prev","next","currentTime","sent","duration","getTotalHistoryTimeBeforeByIndex","type","shouldNotSeek","stop","playNextVideo","_ref4","_ref5","_ref6","nextVideoIndex","playNextVideo$","_context2","selectedIndex","setSliderPercent","_ref7","_ref8","_payload$shouldNotSee","hasDefaultCurrentTime","_ref9","prevVideoIndex","isNoVideo","_ref10","_ref10$duration","currentVideoDuration","currentVideoPercent","setSliderPercent$","_context3","getVideoIndexBySliderPercent","getValidCurrentVideoIndex","getVideoCurrentTime","isNoVideoToBePlayed","_timeSlider","_video","set","_ref11","_ref12","defaultCurrentTime","set$","_context4","console","error","obj","__esModule","index","k","length","sliderPercent","videoIndex","v","begin","end","historyTime","gaps"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.namespace = undefined;\n\nvar _regenerator = require('babel-runtime/regenerator');\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nexports.default = function () {\n  var state = {\n    fragments: null,\n    currentVideoIndex: null,\n    file: null,\n    percent: 0,\n    defaultCurrentVideoTime: undefined\n  };\n  return {\n    namespace: namespace,\n    state: (0, _extends3.default)({}, state),\n    reducers: {\n      setState: _util.standardReducer,\n      clear: function clear() {\n        return state;\n      }\n    },\n    sagas: {\n      time: /*#__PURE__*/_regenerator2.default.mark(function time(_ref, _ref2) {\n        var payload = _ref.payload;\n        var put = _ref2.put,\n            select = _ref2.select;\n\n        var currentVideoTime, _ref3, fragments, currentVideoIndex, historyDuration, totalHistoryTimeBefore, historyCurrentTime;\n\n        return _regenerator2.default.wrap(function time$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                currentVideoTime = payload.currentTime;\n                _context.next = 3;\n                return select(function (state) {\n                  return state[namespace];\n                });\n\n              case 3:\n                _ref3 = _context.sent;\n                fragments = _ref3.fragments;\n                currentVideoIndex = _ref3.currentVideoIndex;\n                historyDuration = _ref3.duration;\n                totalHistoryTimeBefore = getTotalHistoryTimeBeforeByIndex(currentVideoIndex, fragments);\n                historyCurrentTime = totalHistoryTimeBefore + currentVideoTime;\n                _context.next = 11;\n                return put({\n                  type: 'setSliderPercent',\n                  payload: {\n                    percent: historyCurrentTime / historyDuration,\n                    shouldNotSeek: true\n                  }\n                });\n\n              case 11:\n              case 'end':\n                return _context.stop();\n            }\n          }\n        }, time, this);\n      }),\n      playNextVideo: /*#__PURE__*/_regenerator2.default.mark(function playNextVideo(_ref4, _ref5) {\n        var payload = _ref4.payload;\n        var put = _ref5.put,\n            select = _ref5.select;\n\n        var _ref6, fragments, currentVideoIndex, historyDuration, nextVideoIndex, totalHistoryTimeBefore, percent;\n\n        return _regenerator2.default.wrap(function playNextVideo$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return select(function (state) {\n                  return state[namespace];\n                });\n\n              case 2:\n                _ref6 = _context2.sent;\n                fragments = _ref6.fragments;\n                currentVideoIndex = _ref6.currentVideoIndex;\n                historyDuration = _ref6.duration;\n                nextVideoIndex = currentVideoIndex + 1;\n                totalHistoryTimeBefore = getTotalHistoryTimeBeforeByIndex(nextVideoIndex, fragments);\n                percent = totalHistoryTimeBefore / historyDuration;\n                _context2.next = 11;\n                return put({\n                  type: 'setSliderPercent',\n                  payload: {\n                    selectedIndex: nextVideoIndex,\n                    percent: percent\n                  }\n                });\n\n              case 11:\n              case 'end':\n                return _context2.stop();\n            }\n          }\n        }, playNextVideo, this);\n      }),\n      setSliderPercent: /*#__PURE__*/_regenerator2.default.mark(function setSliderPercent(_ref7, _ref8) {\n        var payload = _ref7.payload;\n        var put = _ref8.put,\n            select = _ref8.select;\n\n        var percent, selectedIndex, _payload$shouldNotSee, shouldNotSeek, hasDefaultCurrentTime, _ref9, fragments, historyDuration, prevVideoIndex, currentVideoIndex, currentVideoTime, isNoVideo, totalHistoryTimeBefore, _ref10, _ref10$duration, currentVideoDuration, defaultCurrentVideoTime, currentVideoPercent;\n\n        return _regenerator2.default.wrap(function setSliderPercent$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                percent = payload.percent, selectedIndex = payload.selectedIndex, _payload$shouldNotSee = payload.shouldNotSeek, shouldNotSeek = _payload$shouldNotSee === undefined ? false : _payload$shouldNotSee, hasDefaultCurrentTime = payload.hasDefaultCurrentTime;\n                _context3.next = 3;\n                return select(function (state) {\n                  return state[namespace];\n                });\n\n              case 3:\n                _ref9 = _context3.sent;\n                fragments = _ref9.fragments;\n                historyDuration = _ref9.duration;\n                prevVideoIndex = _ref9.currentVideoIndex;\n\n                if (!selectedIndex) {\n                  selectedIndex = getVideoIndexBySliderPercent(percent, historyDuration, fragments);\n                }\n                currentVideoIndex = getValidCurrentVideoIndex(selectedIndex, fragments);\n                currentVideoTime = getVideoCurrentTime(currentVideoIndex, historyDuration * percent, fragments);\n                isNoVideo = isNoVideoToBePlayed(selectedIndex, fragments);\n\n                if (isNoVideo) {\n                  //没有可继续播放是视频，需要重头播放\n                  totalHistoryTimeBefore = getTotalHistoryTimeBeforeByIndex(currentVideoIndex, fragments);\n\n                  percent = totalHistoryTimeBefore / historyDuration;\n                }\n                _context3.next = 14;\n                return select(function (state) {\n                  return state[_timeSlider.namespace];\n                });\n\n              case 14:\n                _ref10 = _context3.sent;\n                _ref10$duration = _ref10.duration;\n                currentVideoDuration = _ref10$duration === undefined ? 0 : _ref10$duration;\n                defaultCurrentVideoTime = void 0;\n\n                if (prevVideoIndex !== currentVideoIndex || hasDefaultCurrentTime) {\n                  defaultCurrentVideoTime = currentVideoTime;\n                }\n                _context3.next = 21;\n                return put({\n                  type: 'setState',\n                  payload: {\n                    percent: percent,\n                    currentVideoIndex: currentVideoIndex,\n                    file: fragments[currentVideoIndex].file,\n                    defaultCurrentVideoTime: defaultCurrentVideoTime\n                  }\n                });\n\n              case 21:\n                if (!(currentVideoDuration !== 0 &&\n                //index 不一样需要播放下一个视频\n                //无需seeking，使用 defaultCurrentVideoTime\n                prevVideoIndex === currentVideoIndex)) {\n                  _context3.next = 27;\n                  break;\n                }\n\n                currentVideoPercent = currentVideoTime / currentVideoDuration;\n\n                if (isNoVideo) {\n                  //没有可继续播放是视频，需要重头播放\n                  currentVideoPercent = 0;\n                }\n\n                if (shouldNotSeek) {\n                  _context3.next = 27;\n                  break;\n                }\n\n                _context3.next = 27;\n                return put({\n                  type: _video.namespace + '/seeking',\n                  payload: {\n                    percent: currentVideoPercent\n                  }\n                });\n\n              case 27:\n                _context3.next = 29;\n                return put({\n                  type: _video.namespace + '/setHistoryCurrentTime',\n                  payload: {\n                    historyCurrentTime: percent * historyDuration\n                  }\n                });\n\n              case 29:\n              case 'end':\n                return _context3.stop();\n            }\n          }\n        }, setSliderPercent, this);\n      }),\n      set: /*#__PURE__*/_regenerator2.default.mark(function set(_ref11, _ref12) {\n        var payload = _ref11.payload;\n        var put = _ref12.put;\n        var fragments, historyDuration, defaultCurrentTime, currentVideoIndex;\n        return _regenerator2.default.wrap(function set$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                fragments = payload.fragments, historyDuration = payload.duration, defaultCurrentTime = payload.defaultCurrentTime;\n                currentVideoIndex = getValidCurrentVideoIndex(0, fragments);\n                _context4.next = 4;\n                return put({\n                  type: 'setState',\n                  payload: {\n                    fragments: fragments,\n                    currentVideoIndex: currentVideoIndex,\n                    file: fragments[currentVideoIndex].file,\n                    duration: historyDuration\n                  }\n                });\n\n              case 4:\n                if (defaultCurrentTime > historyDuration) {\n                  console.error('The defaultCurrentTime is greater than the duration.');\n                  defaultCurrentTime = historyDuration;\n                }\n\n                if (!defaultCurrentTime) {\n                  _context4.next = 8;\n                  break;\n                }\n\n                _context4.next = 8;\n                return put({\n                  type: 'setSliderPercent',\n                  payload: {\n                    percent: defaultCurrentTime / historyDuration,\n                    hasDefaultCurrentTime: true\n                  }\n                });\n\n              case 8:\n              case 'end':\n                return _context4.stop();\n            }\n          }\n        }, set, this);\n      })\n    }\n  };\n};\n\nvar _video = require('./video');\n\nvar _timeSlider = require('./time-slider');\n\nvar _util = require('../utils/util');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar namespace = exports.namespace = 'history';\n\n\nfunction getValidCurrentVideoIndex(index, fragments) {\n  var k = 0;\n  while (!fragments[index] || !fragments[index].file) {\n    if (index >= fragments.length - 1) {\n      index = 0;\n    } else {\n      index++;\n    }\n    if (k > fragments.length) {\n      //防止死循环\n      break;\n    }\n    k++;\n  }\n\n  return index;\n}\n/**\n * 通过 silder 当前的百分比获取 videoIndex\n * @param {Number} sliderPercent\n * @param {Number} duration history duration\n * @param {Array} fragments historyList fragments\n * @returns {Number} fragments videoIndex\n */\nfunction getVideoIndexBySliderPercent(sliderPercent, historyDuration, fragments) {\n  var videoIndex = 0;\n  var currentTime = sliderPercent * historyDuration;\n  for (var k = 0; k < fragments.length; k++) {\n    var v = fragments[k];\n    // 左闭右合\n    if (v.begin <= currentTime && v.end > currentTime) {\n      videoIndex = k;\n      break;\n    }\n  }\n  return videoIndex;\n}\n/**\n * 获取 指定视频段 前面所有视频 所占用的时间，即小于 index 的视频时间\n * @param {Number} index\n * @param {Array} fragments\n * @returns\n */\nfunction getTotalHistoryTimeBeforeByIndex(index, fragments) {\n  var historyTime = 0;\n  for (var k = 0; k < fragments.length; k++) {\n    var v = fragments[k];\n    var gaps = v.end - v.begin;\n    if (index > k) {\n      historyTime += gaps;\n    } else {\n      break;\n    }\n  }\n  return historyTime;\n}\nfunction getVideoCurrentTime(currentVideoIndex, historyCurrentTime, fragments) {\n  var currentVideoTime = historyCurrentTime;\n  for (var k = 0; k < fragments.length; k++) {\n    var v = fragments[k];\n    var gaps = v.end - v.begin;\n    if (currentVideoIndex > k) {\n      currentVideoTime -= gaps;\n    } else {\n      break;\n    }\n  }\n  if (currentVideoTime < 0) {\n    //点击到无视频的位置，才会有负数。\n    currentVideoTime = 0;\n  }\n\n  return currentVideoTime;\n}\n\n/**\n * 视频播放完成，需要重头播放\n * @returns {Boolean}\n */\nfunction isNoVideoToBePlayed(selectedIndex, fragments) {\n  var index = getValidCurrentVideoIndex(selectedIndex, fragments);\n  if (selectedIndex > index) {\n    return true;\n  }\n}"]},"metadata":{},"sourceType":"script"}